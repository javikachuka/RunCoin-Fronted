[{"/home/matu/Web Development/React/RunCoin-Fronted/src/index.js":"1","/home/matu/Web Development/React/RunCoin-Fronted/src/App.js":"2","/home/matu/Web Development/React/RunCoin-Fronted/src/reportWebVitals.js":"3","/home/matu/Web Development/React/RunCoin-Fronted/src/theme.js":"4","/home/matu/Web Development/React/RunCoin-Fronted/src/globalStyles.js":"5","/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Landing.js":"6","/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Game2.js":"7","/home/matu/Web Development/React/RunCoin-Fronted/src/context/ListContext.js":"8","/home/matu/Web Development/React/RunCoin-Fronted/src/context/LoginContext.js":"9","/home/matu/Web Development/React/RunCoin-Fronted/src/context/BarContext.js":"10","/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Game.js":"11","/home/matu/Web Development/React/RunCoin-Fronted/src/services/server.js":"12","/home/matu/Web Development/React/RunCoin-Fronted/src/services/parameters.js":"13","/home/matu/Web Development/React/RunCoin-Fronted/src/services/abiApp.js":"14","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ListPlayersTop.js":"15","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Header.js":"16","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Content.js":"17","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Navegation.js":"18","/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useList.js":"19","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Hero/Hero.js":"20","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Work/Work.js":"21","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Navbar/Navbar.js":"22","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Header/Header.js":"23","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Content/Content.js":"24","/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useLogin.js":"25","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Header.elements.js":"26","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ButtonLog.js":"27","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ExchangeCard.js":"28","/home/matu/Web Development/React/RunCoin-Fronted/src/components/GameCard.js":"29","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Work/Work.elements.js":"30","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Hero/Hero.elements.js":"31","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Navbar/Navbar.elements.js":"32","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Header/Header.elements.js":"33","/home/matu/Web Development/React/RunCoin-Fronted/src/utils/transformAddress.js":"34","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Content/Content.elements.js":"35","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/CurrentGame/CurrentGame.js":"36","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/SeasonContent/SeasonContent.js":"37","/home/matu/Web Development/React/RunCoin-Fronted/src/components/DetailsList.js":"38","/home/matu/Web Development/React/RunCoin-Fronted/src/context/userContext.js":"39","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ListOfPlayers.js":"40","/home/matu/Web Development/React/RunCoin-Fronted/src/components/AlertPop.js":"41","/home/matu/Web Development/React/RunCoin-Fronted/src/models/WalletModel.js":"42","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/SeasonContent/SeasonContent.elements.js":"43","/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useFullBar.js":"44","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/CurrentGame/CurrentGame.elements.js":"45","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/TopPlayers/TopPlayers.js":"46","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonClaim/ButtonClaim.js":"47","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Alert/Alert.js":"48","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonPlay/ButtonPlay.js":"49","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ListOfPlays/ListOfPlays.js":"50","/home/matu/Web Development/React/RunCoin-Fronted/src/utils/transformSecondsToHuman.js":"51","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Loading.js":"52","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ListOfPlays/ListOfPlays.elements.js":"53","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonPlay/ButtonPlay.elements.js":"54","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Alert/Alert.elements.js":"55","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ProgressBar/ProgressBar.js":"56","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ProgressBar/ProgressBar.elements.js":"57","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ItemGame.js":"58","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ProgressBar.js":"59","/home/matu/Web Development/React/RunCoin-Fronted/src/services/abiTG.js":"60","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/PopUp/PopUp.js":"61","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/PopUp/PopUp.elements.js":"62"},{"size":672,"mtime":1620071942294,"results":"63","hashOfConfig":"64"},{"size":1110,"mtime":1620071942290,"results":"65","hashOfConfig":"64"},{"size":362,"mtime":1620071942294,"results":"66","hashOfConfig":"64"},{"size":329,"mtime":1620071942294,"results":"67","hashOfConfig":"64"},{"size":1335,"mtime":1620071942294,"results":"68","hashOfConfig":"64"},{"size":333,"mtime":1620071942294,"results":"69","hashOfConfig":"64"},{"size":2256,"mtime":1620071942294,"results":"70","hashOfConfig":"64"},{"size":344,"mtime":1620071942294,"results":"71","hashOfConfig":"64"},{"size":422,"mtime":1620071942294,"results":"72","hashOfConfig":"64"},{"size":435,"mtime":1620071942294,"results":"73","hashOfConfig":"64"},{"size":5233,"mtime":1620071942294,"results":"74","hashOfConfig":"64"},{"size":16889,"mtime":1620331552722,"results":"75","hashOfConfig":"64"},{"size":915,"mtime":1620331552722,"results":"76","hashOfConfig":"64"},{"size":14356,"mtime":1620331552722,"results":"77","hashOfConfig":"64"},{"size":4531,"mtime":1620071942294,"results":"78","hashOfConfig":"64"},{"size":1346,"mtime":1620071942290,"results":"79","hashOfConfig":"64"},{"size":406,"mtime":1620071942290,"results":"80","hashOfConfig":"64"},{"size":1561,"mtime":1620071942294,"results":"81","hashOfConfig":"64"},{"size":2498,"mtime":1620071942294,"results":"82","hashOfConfig":"64"},{"size":1034,"mtime":1620071942290,"results":"83","hashOfConfig":"64"},{"size":1074,"mtime":1620071942294,"results":"84","hashOfConfig":"64"},{"size":1911,"mtime":1620071942290,"results":"85","hashOfConfig":"64"},{"size":2041,"mtime":1620331552718,"results":"86","hashOfConfig":"64"},{"size":523,"mtime":1620071942290,"results":"87","hashOfConfig":"64"},{"size":837,"mtime":1620071942294,"results":"88","hashOfConfig":"64"},{"size":3186,"mtime":1620071942290,"results":"89","hashOfConfig":"64"},{"size":3856,"mtime":1620071942290,"results":"90","hashOfConfig":"64"},{"size":1549,"mtime":1620071942290,"results":"91","hashOfConfig":"64"},{"size":5337,"mtime":1620071942290,"results":"92","hashOfConfig":"64"},{"size":1845,"mtime":1620071942294,"results":"93","hashOfConfig":"64"},{"size":1758,"mtime":1620071942290,"results":"94","hashOfConfig":"64"},{"size":3930,"mtime":1620071942290,"results":"95","hashOfConfig":"64"},{"size":4020,"mtime":1620071942290,"results":"96","hashOfConfig":"64"},{"size":251,"mtime":1620071942294,"results":"97","hashOfConfig":"64"},{"size":927,"mtime":1620071942290,"results":"98","hashOfConfig":"64"},{"size":2862,"mtime":1620344291981,"results":"99","hashOfConfig":"64"},{"size":2026,"mtime":1620331552718,"results":"100","hashOfConfig":"64"},{"size":5573,"mtime":1620071942290,"results":"101","hashOfConfig":"64"},{"size":1219,"mtime":1620071942294,"results":"102","hashOfConfig":"64"},{"size":2372,"mtime":1620071942294,"results":"103","hashOfConfig":"64"},{"size":821,"mtime":1620071942290,"results":"104","hashOfConfig":"64"},{"size":3026,"mtime":1620071942294,"results":"105","hashOfConfig":"64"},{"size":4683,"mtime":1620071942290,"results":"106","hashOfConfig":"64"},{"size":562,"mtime":1620331552718,"results":"107","hashOfConfig":"64"},{"size":3044,"mtime":1620071942290,"results":"108","hashOfConfig":"64"},{"size":3613,"mtime":1620071942290,"results":"109","hashOfConfig":"64"},{"size":1259,"mtime":1620331552710,"results":"110","hashOfConfig":"64"},{"size":846,"mtime":1620071942290,"results":"111","hashOfConfig":"64"},{"size":2126,"mtime":1620344331521,"results":"112","hashOfConfig":"64"},{"size":2920,"mtime":1620331552718,"results":"113","hashOfConfig":"64"},{"size":609,"mtime":1620071942294,"results":"114","hashOfConfig":"64"},{"size":455,"mtime":1620071942294,"results":"115","hashOfConfig":"64"},{"size":160,"mtime":1620071942290,"results":"116","hashOfConfig":"64"},{"size":733,"mtime":1620344446909,"results":"117","hashOfConfig":"64"},{"size":1298,"mtime":1620071942290,"results":"118","hashOfConfig":"64"},{"size":4214,"mtime":1620331552718,"results":"119","hashOfConfig":"64"},{"size":1665,"mtime":1620071942290,"results":"120","hashOfConfig":"64"},{"size":996,"mtime":1620071942290,"results":"121","hashOfConfig":"64"},{"size":6321,"mtime":1620071942294,"results":"122","hashOfConfig":"64"},{"size":5954,"mtime":1620331552722,"results":"123","hashOfConfig":"64"},{"size":503,"mtime":1620345532840,"results":"124","hashOfConfig":"64"},{"size":1163,"mtime":1620345497476,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"wqiya0",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"128"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"128"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"128"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"128"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/matu/Web Development/React/RunCoin-Fronted/src/index.js",[],["280","281"],"/home/matu/Web Development/React/RunCoin-Fronted/src/App.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/reportWebVitals.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/theme.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/globalStyles.js",["282"],"import styled, { createGlobalStyle, keyframes } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n\n*{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    \n}\n\nbody{\n    font-family: 'Montserrat', sans-serif;\n    background: #F8FAFF;\n}\n\n.text-blue{\n  color:rgba(37, 99, 235,1);\n}\n.shadow-sm{\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n.shadow-md{\n  box-shadow: 0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);\n}\n\n/* .bg-slightpurple{\n  background: #6366F1;\n} */\n.bg-slightpurple{\n  background-image: linear-gradient( 135.9deg,  rgba(109,25,252,1) 16.4%, rgba(125,31,165,1) 56.1% );\n}\n\n.bg-deepblue{\n  background-image: linear-gradient( 109.6deg,  rgba(255,207,84,1) 11.2%, rgba(255,158,27,1) 91.1% );\n}\n.bg-blue{\n  background: #1D4ED8;\n}\n.bg-lightgreen{\n  background-image: linear-gradient( 102.1deg,  rgba(96,221,142,1) 8.7%, rgba(24,138,141,1) 88.1% );\n}\n.bg-salmon{\n  /* background: #FFE2C2; */\n  background: linear-gradient(315deg ,#f6a99b, #FFE2C2);\n}\n.color-dark{\n  color: #354D5C !important;\n}\n\n\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1366px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 50px;\n  padding-left: 50px;\n\n  @media screen and (max-width: 991px) {\n    padding-right: 30px;\n    padding-left: 30px;\n  }\n`;\n\nexport default GlobalStyle;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Landing.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Game2.js",["283","284","285","286","287","288","289"],"import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Game/Header/Header\";\nimport {\n  getCostPlay,\n  getCountDaysCurrentOfSeasons,\n  getReward,\n} from \"../services/server\";\nimport * as Parameters from \"../services/parameters.js\";\nimport { miContrato } from \"../services/server\";\nimport { useList } from \"../hooks/useList\";\nimport ListPlayersTop from \"../components/ListPlayersTop\";\nimport Content from \"../components/Game/Content/Content\";\n// aplicacion para la conexión con la blockchain\nconst Web3 = require(\"web3\");\n//prueba conectar el proveedor de metamask primero sino usa la varabile en Parameters \"provider\"\nlet web3 = new Web3(Web3.givenProvider || Parameters.provider);\n\nconst Game2 = () => {\n  const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0);\n  const [reward, setReward] = useState({\n    recompensa: null,\n    nextRecompensa: null,\n  });\n  // const {reward, daysCurrentSeassons} = useList()\n\n  useEffect(\n    () => {\n      getDays();\n      getRew();\n      miContrato.events.Game(\n        {\n          // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n          fromBlock: \"latest\",\n        },\n        (error, event) => {\n          console.log(\"Evento activado2\");\n          getDays();\n          getRew();\n        }\n      );\n    },\n    [] // las llaves sirven para ejecutar solamente una vez el useEffect de esta manera copiamos el comportamiento de componentDidMount\n  );\n\n  const getDays = () => {\n    getCountDaysCurrentOfSeasons()\n      .then((result) => {\n        console.log(result);\n        setDaysCurrentSeassons(result);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const getRew = () => {\n    getReward()\n      .then((result) => {\n        console.log(result.recompensa);\n        setReward({\n          recompensa: result.recompensa,\n          nextRecompensa: result.nextRecompensa,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const getRealPriceEth = (wei) => {\n    if (wei == 0 || wei == null) {\n      return 0;\n    } else {\n      return web3.utils.fromWei(wei, \"ether\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Content />\n    </>\n  );\n};\n\nexport default Game2;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/context/ListContext.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/context/LoginContext.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/context/BarContext.js",["290"],"import React, {useEffect, useState} from 'react';\n\nconst BarContext = React.createContext({})\n\nexport const BarContextProvider = ({children}) => {\n    \n    const [isFull , setIsFull] = useState(false)\n    const [lastUser,setLastUser] = useState(null)\n\n    return (\n        <BarContext.Provider value={{isFull, setIsFull, lastUser, setLastUser}}>\n            {children}\n        </BarContext.Provider>\n    )\n}\n\nexport default BarContext;","/home/matu/Web Development/React/RunCoin-Fronted/src/pages/Game.js",["291","292","293","294"],"import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport Content from '../components/Content'\nimport Navegation from '../components/Navegation';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Box, Button, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { getCostPlay, getCountDaysCurrentOfSeasons, getReward } from '../services/server';\nimport * as Parameters from \"../services/parameters.js\";\nimport { miContrato } from '../services/server'\nimport { useList } from '../hooks/useList';\nimport ListPlayersTop from '../components/ListPlayersTop';\n// aplicacion para la conexión con la blockchain \nconst Web3 = require(\"web3\");\n//prueba conectar el proveedor de metamask primero sino usa la varabile en Parameters \"provider\"\nlet web3 = new Web3(Web3.givenProvider || Parameters.provider);\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: 5,\n    },\n    top: {\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 30\n        },\n    }\n}))\n\nconst Game = () => {\n\n    const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\n    const [reward, setReward] = useState({\n        recompensa: null,\n        nextRecompensa: null\n    })\n    // const {reward, daysCurrentSeassons} = useList()\n\n    useEffect(\n        () => {\n            getDays()\n            getRew()\n            miContrato.events.Game(\n                {\n                    // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n                    fromBlock: 'latest'\n                }\n                , (error, event) => {\n                    console.log('Evento activado2');\n                    getDays()\n                    getRew()\n                }\n            )\n        }, [] // las llaves sirven para ejecutar solamente una vez el useEffect de esta manera copiamos el comportamiento de componentDidMount\n    )\n\n    const getDays = () => {\n        getCountDaysCurrentOfSeasons().then(\n            (result) => {\n                console.log(result)\n                setDaysCurrentSeassons(result)\n            }\n        ).catch(\n            (error) => {\n                console.log(error)\n            }\n        )\n    }\n\n    const getRew = () => {\n        getReward().then(\n            (result) => {\n                console.log(result.recompensa)\n                setReward({ recompensa: result.recompensa, nextRecompensa: result.nextRecompensa })\n\n            }\n        ).catch(\n            (error) => {\n                console.log(error)\n            }\n        )\n    }\n\n\n    const getRealPriceEth = (wei) => {\n        if (wei == 0 || wei == null) {\n            return 0\n        } else {\n            return web3.utils.fromWei(wei, 'ether')\n        }\n    }\n\n\n    const classes = useStyles()\n    return (\n        <Grid container direction=\"column\"  >\n            <Grid item >\n                <Header />\n            </Grid>\n            <Box mt={1} >\n                <Grid item container>\n                    <Grid item xs={false} sm={1} ></Grid>\n                    <Grid item xs={12} sm={8}>\n                        <Navegation />\n                    </Grid>\n                </Grid>\n            </Box>\n            <Grid item container justify=\"center\" spacing={0} lg={12} >\n                <Grid item className={classes.paper}>\n                    <Alert severity=\"success\" size=\"small\">\n                        <AlertTitle>Prize Pool</AlertTitle>\n                        <strong>$ {getRealPriceEth(reward.recompensa)}</strong>\n                    </Alert>\n                </Grid>\n                <Grid item className={classes.paper}>\n                    <Alert severity=\"info\" size=\"small\">\n                        <AlertTitle>Next Prize</AlertTitle>\n                        <strong>$ {getRealPriceEth(reward.nextRecompensa)}</strong>\n                    </Alert>\n                </Grid>\n                <Grid item className={classes.paper}>\n                    <Alert severity=\"error\" size=\"small\">\n                        <AlertTitle>Days Season</AlertTitle>\n              Days current of season <strong>{daysCurrentSeassons}</strong>\n                    </Alert>\n                </Grid>\n            </Grid>\n            <Box mt={2} mb={2}>\n                <Grid item container justify=\"center\">\n                    <Grid item sm={8}>\n                        <Content getRealPriceEth={getRealPriceEth} />\n                    </Grid>\n                    <Grid item md={4} >\n                        <Box ml={2} mr={2} className={classes.top}>\n                            <ListPlayersTop />\n                        </Box>\n                    </Grid>\n                    {/* <Grid item container direction=\"column\" sm={2} justify=\"space-evenly\" alignItems=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                  Reclamar Premio\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                  Reclamar Token\n              </Button>\n              </Grid>\n            </Grid> */}\n                </Grid>\n            </Box>\n        </Grid>\n    );\n}\n\nexport default Game;","/home/matu/Web Development/React/RunCoin-Fronted/src/services/server.js",["295","296","297","298","299","300","301","302","303","304","305"],"import * as Parameters from \"./parameters.js\";\nimport {\n    CONST_ABI\n} from \"./abiApp.js\";\nimport {\n    CONST_ABI_TOKEN\n} from \"./abiTG.js\";\n\n// aplicacion para la conexión con la blockchain\nconst Web3 = require(\"web3\");\n//prueba conectar el proveedor de metamask primero sino usa la varabile en Parameters \"provider\"\nlet web3 = new Web3(Web3.givenProvider || Parameters.provider);\n//se crea el contrato\n// export const miContrato = new web3.eth.Contract(CONST_ABI, Parameters.addressContractR);\nexport const miContrato = new web3.eth.Contract(\n    CONST_ABI,\n    Parameters.addressContractOKT\n);\n\n//inicia el juego y retorna su {player:string,timestamp:uint ,wait: uint}\n//ejemplo de timestamp = 1287124121241 ; si resto el timestamp del anterior jugador con este serian los segundos que hay\n// de diferencia.\n\n\n// Account\nexport async function play() {\n    //_cost wei\n\n    try {\n        const _cost = await miContrato.methods.cost().call((err, result) => result);\n        let _account = await getUserLogued();\n        let confirm = false;\n        const player = await miContrato.methods.game(_cost).send({\n                from: _account,\n                value: _cost,\n            },\n            function (error, transactionHash) {\n                console.log(error);\n                if (transactionHash !== undefined) {\n                    confirm = true;\n                }\n            }\n        );\n        return confirm;\n    } catch (Ex) {\n        console.log(Ex);\n        //ocurrieron los siguientes errores,\n        //1- No esta habilitado para jugar.\n        //2- el valor ingresado es menor al costo del juego el costo esta en WEI.\n        //3 - el valor ingresado no es el mismo que el valor enviado.\n        return false;\n    }\n}\n\n//cant= cantidad de player que se quiere visualizar\n\n//player {player= address , timestamp= el tiempo en el que empezo a jugar, timeGame= el tiempo en que termino de jugar}\n\n//opcion 1 timeGame= seria el tiempo desde que empezo a jugar hasta que otro jugador le corto el tiempo (cada vez que consultas siempre va ser el mismo tiempo).\n//opcion 2 timeGame= si es el ultimo jugador del array te devuelve el tiempo desde que empezo a jugar hasta que se consulto en la blockchain (cada vez que consultas va a cmbiar el tiempo)\n\nexport async function listPlayerLastSeasons(cant = -1) {\n    try {\n        const currentSeassons = await miContrato.methods\n            .currentSeason()\n            .call((err, result) => result);\n\n        let cantPlayer = await miContrato.methods\n            .getCountPlayer(currentSeassons)\n            .call((err, result) => result);\n        cantPlayer--;\n        if (cant <= 0) {\n            //trae desde el utlimo jugador hasta el primero\n            cant = 0;\n        } else {\n            //el limite de jugador es\n\n            cant = cant >= cantPlayer ? 0 : cantPlayer - cant;\n        }\n        var players = [];\n        let player = {};\n\n        while (cantPlayer >= cant) {\n            player = await miContrato.methods\n                .getPlayer(currentSeassons, cantPlayer)\n                .call((err, result) => result);\n\n            player.wait = parseInt(player.wait);\n            player.timeGame = parseInt(player.timeGame);\n            players.push(player);\n            cantPlayer--;\n        }\n        return players;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\n//si queres ver mas player en la lista pasas\n//cant= la cantidad de player que queres ver,\n// indexPlayer= a partir del indice que queres ver.\n//indexseason= indice de la session,\nexport async function getMorePlayer(cant, indexPlayer = -1, indexSeasson = -1) {\n    try {\n        var players = [];\n        let player = {};\n        if (indexSeasson == -1) {\n            indexSeasson = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n        if (indexPlayer < 0) {\n            return false;\n            //antes traia desde la ultima posicion, pero ahora controla que no pida indices negativos\n            // indexPlayer = await miContrato.methods\n            //     .getCountPlayer(indexSeasson)\n            //     .call((err, result) => result - 1);\n        }\n\n        while (cant > 0 && indexPlayer >= 0) {\n            player = await miContrato.methods\n                .getPlayer(indexSeasson, indexPlayer)\n                .call((err, result) => result);\n            player.wait = parseInt(player.wait);\n            player.timeGame = parseInt(player.timeGame);\n            player.index = parseInt(indexPlayer);\n            players.push(player);\n            indexPlayer--;\n            cant--;\n        }\n        return players;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\n//return {recompensa, nextRecompensa}\nexport async function getReward() {\n    try {\n        const recompensa = await miContrato.methods\n            .getValueReward()\n            .call((err, result) => result);\n        return recompensa;\n    } catch (Ex) {\n        return false;\n    }\n}\n\nexport async function getCostPlay() {\n    try {\n        const cost = await miContrato.methods.cost().call((err, result) => result);\n        return cost;\n    } catch (Ex) {\n        return false;\n    }\n}\n//obtiene los dias que faltan que termine los atributos con el tiempo en segundos que falta para que termine \n// por ejemplo temporada 1 , 3124124 segundos para que termine en caso que termino es 0\nexport async function getCountDaysCurrentOfSeasons() {\n    try {\n        let time = 0;\n        const countDaysCurrent = await miContrato.methods\n            .countDaysCurrent()\n            .call((err, result) => result);\n        countDaysCurrent--;\n        let lastTimstamp = await miContrato.methods\n            .lastDayTimestamp()\n            .call((err, result) => result);\n\n        time =  Math.floor(Date.now() / 1000) - lastTimstamp  ;\n        if (time < 0) {\n            time = 0;\n        }\n\n        return {\n            countDays: countDaysCurrent,\n            time: time\n        };\n    } catch (Ex) {\n        return {};\n    }\n}\n//trae solamente las direcciones de los ganadores y el jugador actual aunque no haya ganado, si la temporada tiene 3 ganadores solo trae los 3\n//retorna [  {address , cantGame, reward },{}]\nexport async function getWinnersSeason(indexSeasson = -1) {\n    try {\n        let account = await getUserLogued();\n        if (indexSeasson == -1) {\n            indexSeasson = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n        // winners.players son address   winner.cantGame la cantidad de veces que jugaron\n        let allWinners = [];\n        let winners = await miContrato.methods\n            .getWinnersSeason(indexSeasson)\n            .call((err, result) => result);\n\n        let entrar = true;\n        console.log(winners);\n        for (let i = 0; i < winners.players.length; i++) {\n            //si el jugador actual no esta en la lista hay que agregarlo al final\n            if (winners.players[i] == account) {\n                entrar = false;\n            }\n            let auxWinner = {\n                address: winners.players[i],\n                cantGame: winners.countGame[i],\n                reward: 0,\n            }\n            auxWinner.reward = await getPriceInEth(winners.reward[i]);\n            allWinners.push(auxWinner);\n        }\n        if (entrar) {\n            let cantGame = await miContrato.methods\n                .countPlayForSeason(account, indexSeasson)\n                .call((err, result) => result);\n            allWinners.push({\n                address: account,\n                cantGame: cantGame,\n                reward: 0\n            });\n        }\n\n        return allWinners;\n    } catch (Ex) {\n        console.log(Ex);\n        return [];\n    }\n}\n//obteiene todas las direcciones de todos los jugadores y la cantidad de vecees que jugaron\n// export async function getAllGameOfPlayer(indexSeasson = -1) {\n//     try {\n//         if (indexSeasson == -1) {\n//             indexSeasson = await miContrato.methods\n//                 .currentSeasson()\n//                 .call((err, result) => result);\n//         }\n//         // winners.players son address   winner.cantGame la cantidad de veces que jugaron\n//         let allPlayers = [];\n//         let players = await miContrato.methods\n//             .getCantGameForPlayer(indexSeasson)\n//             .call((err, result) => result);\n//         for (let i = 0; i < players.player.length; i++) {\n//             allPlayers.push({\n//                 address: players.player[i],\n//                 cantGame: players.cantGame[i],\n//             });\n//         }\n\n//         return allPlayers;\n//     } catch (Ex) {\n//         console.log(Ex);\n//         return [];\n//     }\n// }\n\nexport async function getPoolSeason(indexSeasson = -1) {\n    try {\n        if (indexSeasson == -1) {\n            indexSeasson = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n        // winners.players son address   winner.cantGame la cantidad de veces que jugaron\n\n        let poolSeasson = await miContrato.methods\n            .poolSeason(indexSeasson)\n            .call((err, result) => result);\n\n        return poolSeasson;\n    } catch (Ex) {\n        console.log(Ex);\n        return 0;\n    }\n}\n//checkea si el ganador de la temporada seleccionada\nexport async function checkWinnerSeason(indexSeasson = -1) {\n    try {\n        let account = await getUserLogued();\n        if (indexSeasson < 0) {\n            indexSeasson = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n\n        let winners = await miContrato.methods\n            .getWinnersSeason(indexSeasson)\n            .call((err, result) => result);\n        for (let i = 0; i < winners.players.length; i++) {\n            if (winners.players[i] == account) {\n                return true;\n            }\n        }\n        return false;\n    } catch (Ex) {\n        console.log(Ex);\n        return 0;\n    }\n}\n//reclama el premio uno de los ganadores de la temporada seleccionada\nexport async function claimWinnerSeason(indexSeasson = -1) {\n    try {\n        let account = await getUserLogued();\n        if (indexSeasson < 0) {\n            indexSeasson = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n\n\n        await miContrato.methods.claimWinnerSeasonPool(indexSeasson).send({\n                from: account,\n                value: 0,\n            },\n            function (error, transactionHash) {\n                console.log(transactionHash);\n            }\n        );\n        return true;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n//checkea si el ultimo jugador es el ganador del POOL global\n//retorna true\nexport async function checkWinnerPool() {\n    try {\n        let account = await getUserLogued();\n        let address = await miContrato.methods\n            .winVerify(0)\n            .call((err, result) => result);\n        if (address == account) {\n            return true;\n        }\n        return false;\n    } catch (Ex) {\n        console.log(Ex);\n        return 0;\n    }\n}\n//se reclama el pool global\nexport async function claimWinnerPool() {\n    try {\n\n        let account = await getUserLogued();\n        await miContrato.methods.claimLastPlayer().send({\n                from: account,\n                value: 0,\n            },\n            function (error, transactionHash) {\n                console.log(transactionHash);\n            }\n        );\n        return true;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n//obtener la cantidad de token de la direccion actual\nexport async function countToken() {\n    try {\n        let account = await getUserLogued();\n\n        let TokenContract = new web3.eth.Contract(\n            CONST_ABI_TOKEN,\n            Parameters.TG_ContratOKT\n        );\n\n        let decimals = await TokenContract.methods.decimals().call((err, result) => result);\n\n        let countToken = await miContrato.methods\n            .amountTokenGForOwner(account)\n            .call((err, result) => result);\n        console.log(\"Imprimiendo decimals\");\n        // console.log(decimals);\n        let aux = countToken / Math.pow(10, decimals)\n        console.log(countToken);\n        return aux;\n    } catch (Ex) {\n        console.log(Ex);\n        return 0;\n    }\n}\n\n\nexport async function getPoolRun() {\n    try {\n        return await miContrato.methods\n            .poolRun()\n            .call((err, result) => result);\n\n    } catch (Ex) {\n        console.log(Ex);\n        return 0;\n    }\n}\n\n//reclama los token que tiene\nexport async function claimToken() {\n    try {\n        let account = await getUserLogued();\n        await miContrato.methods.claimToken().send({\n                from: account,\n                value: 0,\n            },\n            function (error, transactionHash) {\n                console.log(transactionHash);\n            }\n        );\n        return true;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\nexport async function getSeasonCurrent() {\n    try {\n        return await miContrato.methods\n            .currentSeason()\n            .call((err, result) => result);\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\nexport async function getUserLogued() {\n    try {\n        let data = null;\n        console.log('antes p[epeep');\n        getWaitForPlay().then(res => console.log(res))\n        await web3.eth.getAccounts(function (err, accounts) {\n            // chequea si hay un provider para poder conectarme la block\n            if (err != null) {\n                console.error(\"An error occurred: \" + err);\n            } else if (accounts.length == 0) {\n                // checkea si hay algun usuario ya logueado a metamask\n                console.log(\"User is not logged in to MetaMask\");\n            } else {\n                console.log(\"User is logged in to MetaMask\");\n                data = accounts[\"0\"];\n            }\n        });\n        return data;\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\nexport async function getCountPlayersSeason(season = -1) {\n    try {\n        if (season == -1) {\n            season = await miContrato.methods\n                .currentSeason()\n                .call((err, result) => result);\n        }\n        const count = await miContrato.methods\n            .getCountPlayer(season)\n            .call((err, result) => result);\n        return count - 1;\n    } catch (Ex) {\n        return false;\n    }\n}\n\n\n// devuelve el tiempo que el jugador debe esperar para ganar el pozo del juego cuando se llene la barrita\nexport async function getWaitForPlay() {\n    try {\n        let cost = await miContrato.methods\n            .cost()\n            .call((err, result) => result);\n        let helper = await miContrato.methods\n            .helper()\n            .call((err, result) => result);\n        let calc = (cost - (cost * helper / 100))\n        calc = (calc - (calc * helper / 100))\n        return await miContrato.methods\n            .getSecondMax(calc)\n            .call((err, result) => result);\n    } catch (Ex) {\n        console.log(Ex);\n        return false;\n    }\n}\n\n\n\n\nexport async function watch() {\n    web3.eth.getBlockNumber().then((n) => {\n        n = n - 10;\n        miContrato\n            .getPastEvents(\"Game\", {\n                fromBlock: \"latest\",\n                toBlock: n,\n            })\n            .then((events) => {\n                console.log(events);\n            });\n    });\n\n    // await miContrato.events.Game({\n    //     // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n    //     fromBlock: 'latest'\n    // }, function (error, event) {\n    //     console.log('Evento activado');\n    //     console.log(event);\n    //     console.log(error)\n    // });\n}\n\nexport async function getPriceInEth(wei) {\n    console.log(wei);\n    // wei = parseInt(wei)\n    if (wei == 0 || wei == null) {\n        return 0\n    } else {\n        let aux = await web3.utils.fromWei(wei, 'ether')\n        return aux\n    }\n}\n\n//**************Escuchar Eventos en la blockchain */\n//docs : https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html#id48\n//nose si funciona, se supone que escucha cuando el evento se dispara en la blockchain se ejecuta el codigo de adentro.\n// este escucha cada vez que alguien juegue.\n// si funciona te retorna estos parametros {address owner_play, uint256 cost,uint256 timestamp, uint256 wait}\n\n// miContrato.events.Game({\n//     // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n//     fromBlock: 'latest'\n// }, function (error, event) {\n//     console.log('Evento activado');\n//     console.log(event);\n// });","/home/matu/Web Development/React/RunCoin-Fronted/src/services/parameters.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/services/abiApp.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/ListPlayersTop.js",["306","307"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { transformAddress } from '../utils/transformAddress';\nimport { Card, CardContent, CardHeader, Typography, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { getSeasonCurrent, getWinnersSeason } from '../services/server';\nimport { useLogin } from '../hooks/useLogin';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: 150,\n        },\n        [theme.breakpoints.up('sm')]: {\n            minWidth: 150,\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n}));\n\nconst ListPlayersTop = () => {\n    const classes = useStyles();\n    const [season, setSeason] = useState(0);\n    const [cantSeason, setCantSeason] = useState(0);\n\n    const handleChange = (event) => {\n        setSeason(event.target.value);\n    };\n\n    const { user } = useLogin()\n    const [top, setTop] = useState([])\n\n\n    useEffect(\n        () => {\n            if (user.player != \"\") {\n                let res = getWinnersSeason()\n                    .then(\n                        (res) => setTop(res)\n                    )\n                    .catch(\n                        (error) => console.log(error)\n                    )\n            }\n            getSeasonCurrent()\n                .then(\n                    (cant) => {\n                        setCantSeason(cant)\n                    }\n                )\n                .catch(\n                    (error) => console.log(error)\n                )\n        }, [user]\n    )\n\n    const listMenu = () => {\n        let menuItems = []\n        menuItems.push(<MenuItem value=\"\"><em>None</em></MenuItem>)\n        for (let index = 0; index <= cantSeason; index++) {\n            menuItems.push(<MenuItem value={index} key={index}>{index}</MenuItem>)\n        }\n        return menuItems\n    }\n\n    return (\n        <Card>\n            <CardHeader title={<Typography variant=\"h5\">Top</Typography>} />\n            <CardContent>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Season</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={season}\n                        onChange={handleChange}\n                    >\n                        {\n                            listMenu()\n                        }\n                    </Select>\n                </FormControl>\n                <IconButton aria-label=\"delete\" style={{ marginTop: '12px' }}>\n                    <SearchIcon />\n                </IconButton>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>N</TableCell>\n                                <TableCell>Player</TableCell>\n                                <TableCell align=\"right\">Amount of plays</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {top.map((row, index) => (\n                                <TableRow key={row.player+index}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {index + 1}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{transformAddress(row.address)}</TableCell>\n                                    <TableCell align=\"right\">{row.cantGame}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default ListPlayersTop;","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Header.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Content.js",["308"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport ExchangeCard from './ExchangeCard'\nimport GameCard from './GameCard';\n\n\nconst Content = (props) => {\n    return ( \n        <Grid container justify=\"center\">\n            <Grid item>\n                <GameCard getRealPriceEth={props.getRealPriceEth} ></GameCard>\n            </Grid>\n        </Grid>\n    );\n}\n \nexport default Content;","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Navegation.js",["309"],"import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SportsEsports from '@material-ui/icons/SportsEsports';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Link } from 'wouter'\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function Navegation() {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" >\n      <Link to=\"/\">\n        <StyledBreadcrumb\n          component=\"a\"\n          href=\"/\"\n          label=\"Home\"\n          icon={<HomeIcon fontSize=\"small\" />}\n          onClick={handleClick}\n        />\n      </Link>\n      <StyledBreadcrumb \n        component=\"a\" \n        href=\"#\" \n        label=\"Game\" \n        onClick={handleClick} \n        icon={<SportsEsports fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useList.js",["310","311"],"import React, { useEffect, useContext, useState } from 'react';\nimport ListContext from '../context/ListContext';\nimport { listPlayerLastSeasons, getCountDaysCurrentOfSeasons, getReward } from '../services/server';\n\nexport const useList = () => {\n    const { list, setList } = useContext(ListContext)\n    const [newGame, setNewGame] = useState(null)\n    const [load, setLoad] = useState(true)\n    const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\n    const [reward, setReward] = useState({\n        recompensa: null,\n        nextRecompensa: null\n    })\n    useEffect(\n        () => {\n            console.log(\"el pepe\");\n            if(newGame == null){\n                fetchApi()\n            }else {\n                setEstado()\n            }\n            getDaysOfSeason()\n            getRew()\n\n        }, [newGame]\n    )\n\n    const getDaysOfSeason = () => {\n        getCountDaysCurrentOfSeasons().then(\n            (result) => {\n                console.log(result)\n                setDaysCurrentSeassons(result)\n            }\n        ).catch(\n            (error) => {\n                console.log(error)\n            }\n        )\n    }\n    const getRew = () => {\n        getReward().then(\n            (result) => {\n                console.log('entre a reward');\n                console.log(result.recompensa)\n                setReward({ recompensa: result.recompensa, nextRecompensa: result.nextRecompensa })\n\n            }\n        ).catch(\n            (error) => {\n                console.log(error)\n            }\n        )\n    }\n    const setEstado = () => {\n        setList([newGame, ...list])\n    }\n\n    async function fetchApi() {\n        await listPlayerLastSeasons(9)\n            .then(\n                (result) => {\n                    var array = result.map(\n                        (r) => {\n                            return {\n                                ...r,\n                                player: r.player,\n                                timeGame: r.timeGame,\n                                timestamp: r.timestamp,\n                                wait: r.wait,\n                            }\n                        }\n                    )\n                    console.log(array);\n                    setList(array);\n                    setLoad(false);\n\n                }\n            ).catch(\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n    return { list, setNewGame, load, daysCurrentSeassons, reward }\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Hero/Hero.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Work/Work.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Navbar/Navbar.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Header/Header.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Content/Content.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useLogin.js",["312","313","314"],"import React, { useEffect, useState, useContext } from 'react';\nimport LoginContext from '../context/LoginContext'\nimport { getUserLogued } from '../services/server';\n\nexport const useLogin = () => {\n\n    const { user, setUser, logued, setLogued } = useContext(LoginContext)\n\n    useEffect(\n        () => {\n            console.log('render');\n            getUserLogued().then(\n                (res) => {\n                    if(res != null){\n                        setLogued(true)\n                        setUser({\n                            player: res\n                        })\n                    }\n                }\n            ).catch(\n                (error) => {\n                    console.log('error en use hook', error);\n                }\n            )\n\n        }, []\n    )\n\n    return { user, logued, setLogued, setUser }\n}\n\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Header.elements.js",["315","316"],"import styled from \"styled-components\";\nimport { Container } from \"../globalStyles\";\nimport { Link } from \"react-scroll\";\nimport { Link as PLink } from \"wouter\";\nimport ButtonLog from './ButtonLog';\n\n//#DEDEE0 blanco\n//#1F1C2A\n\nexport const Nav = styled.nav`\n  display: flex;\n  // background: #1F1C2A;\n  background: #242936;\n  height: 60px;\n  justify-content: center;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 3;\n`;\n\nexport const NavBarContainer = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  height: 100%;\n  align-items: center;\n\n  ${Container}\n`;\n\nexport const NavLogo = styled(Link)`\n  justify-self: flex-start;\n  cursor: pointer;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  color: #DEDEE0;\n  font-family: \"Lexend Mega\", sans-serif;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n`;\n\nexport const NavImg = styled.img`\n  width: 2.5rem;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 960px) {\n    display: block;\n\n    cursor: pointer;\n  }\n`;\n\nexport const Hamburger = styled.div`\n  display: none;\n\n  @media screen and (max-width: 960px) {\n    display: flex;\n    position: relative;\n    width: 1.5em;\n    height: 0.2em;\n    background: #354d5c;\n\n    &:before,\n    &:after {\n      display: block;\n      position: absolute;\n      height: 100%;\n      transition: all 0.4s ease-out;\n      content: \"\";\n      background: #354d5c;\n    }\n    &:before {\n      top: 8px;\n      width: 1em;\n    }\n\n    &:after {\n      top: -8px;\n      width: 2em;\n    }\n    &.opened {\n      background: transparent;\n    }\n    &.opened:before {\n      width: 1.5em;\n      transform: rotate(-45deg);\n    }\n    &.opened:after {\n      width: 1.5em;\n      transform: rotate(45deg);\n    }\n    &.opened:after,\n    &.opened:before {\n      top: 0;\n    }\n  }\n`;\n\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n\n  @media screen and (max-width: 960px) {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 90vh;\n    position: absolute;\n    top: 80px;\n    left: ${({ click }) => (click ? 0 : \"-100%\")};\n    opacity: 1;\n    transition: all 0.5s ease;\n    background: #f8faff;\n  }\n\n  @media screen and (max-width: 768px) {\n    /* text-align: center; */\n    top: 60px;\n  }\n`;\nexport const NavItem = styled.li`\n  margin-right: 10px;\n  transition: all 0.5s ease;\n  border: 2px solid transparent;\n  border-radius: 0.75rem;\n  height: 40px;\n\n  &:hover {\n    border: 2px solid #005bea;\n  }\n\n  @media screen and (max-width: 960px) {\n    height: 80px;\n    transition: none;\n    margin-right: 0;\n    margin-bottom: 20px;\n    /* border-radius: 0; */\n    width: 95%;\n    &:hover {\n      background: none;\n      border: none;\n    }\n  }\n`;\n\nexport const NavLink = styled.a`\n  color: #fff;\n  background-image: linear-gradient(to right, #005bea, #00c6fb);\n  border-radius: 0.75rem;\n  display: flex;\n  text-decoration: none;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  height: 100%;\n  font-weight: 500;\n\n  @media screen and (max-width: 960px) {\n    text-align: center;\n    padding: 2rem;\n    width: 100%;\n    display: table;\n  }\n`;\n\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ButtonLog.js",["317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { useEffect, useState, useContext } from \"react\";\n// import Button from '@material-ui/core/Button';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Web3 from \"web3\";\nimport { UserProvider, useUser } from \"../context/userContext\";\nimport LoginContext from \"../context/LoginContext\";\nimport WalletModel from \"../models/WalletModel\";\nimport { useLogin } from \"../hooks/useLogin\";\nimport { transformAddress } from \"../utils/transformAddress\";\nimport styled from \"styled-components\";\n\n// const web3 = new Web3(window.web3.currentProvider);\n\n// export default () => (\n//     <UserProvider>\n//         <ButtonLog>\n//         </ButtonLog>\n//     </UserProvider>\n// )\n\nconst ButtonLog = () => {\n  const Button = styled.a`\n    color: #dedee0;\n    background: transparent;\n    border: 0;\n    display: flex;\n    text-decoration: none;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    height: 100%;\n    font-weight: 500;\n\n    @media screen and (max-width: 500px) {\n      text-align: center;\n      padding: 2rem;\n      width: 100%;\n      display: table;\n    }\n  `;\n\n  // const {user, logued, setLogued} = useUser()\n  const { user, setUser, logued, setLogued } = useLogin();\n  const { web3Loading, getweb3, disconnect } = WalletModel();\n  const [myWeb3, setMyWeb3] = useState(null);\n\n  // useEffect(\n  //     () => {\n  //         if(!logued){\n  //             connetWallet().then(\n  //                 (res) => {\n  //                     setLogued(true)\n  //                     setUser({\n  //                         player: res\n  //                     })\n  //                     console.log(user);\n  //                 }\n  //             )\n  //         }\n  //     }\n  // )\n\n  // async function connetWallet() { // funcion para loguearme a metamask // vieja\n\n  //     if (typeof window.ethereum !== 'undefined') {\n  //         window.web3 = new Web3(window.ethereum);\n  //         try {\n  //             // Request account access if needed\n  //             const res = await window.ethereum.enable();\n  //             console.log(res[0]);\n  //             setLogued(true)\n  //             setUser({\n  //                 player: res[0]\n  //             })\n\n  //         } catch (error) {\n  //             // User denied account access...\n  //             console.log('connect error!')\n  //         }\n  //     }\n  // }\n  // async function disconnectWallet() { // funcion para desconectarme de metamask // viejo\n\n  //     if (typeof window.ethereum !== 'undefined') {\n\n  //         try {\n  //             // Request account access if needed\n  //             await web3.clearCachedProvider();\n  //             setLogued(false)\n\n  //         } catch (error) {\n  //             console.log(error)\n  //             console.log('disconnect error')\n  //             // User denied account access...\n  //         }\n  //     }\n  // }\n\n  // Implementation with web3Modal\n\n  async function connectWallet() {\n    await getweb3().then((response) => {\n      setMyWeb3(response);\n      setLogued(true);\n      response.web3.eth.getAccounts().then((result) => {\n        setUser({\n          player: result[0],\n        });\n        transformAddress(result[0]);\n      });\n    });\n  }\n\n  async function disconnectWallet() {\n    const res = await myWeb3.web3.setProvider(null);\n    if (myWeb3.provider.close) {\n      await myWeb3.provider.close();\n      await myWeb3.web3Modal.clearCachedProvider();\n      myWeb3.provider = null;\n    }\n    // await disconnect().then(res => console.log(res)).catch(er => console.log(er))\n  }\n\n  if (!logued) {\n    return (\n      <>\n        <Button onClick={connectWallet}>Connect to a Wallet</Button>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Button>{transformAddress(user.player)}</Button>\n      </>\n    );\n  }\n};\n\nexport default ButtonLog;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ExchangeCard.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/GameCard.js",["329","330","331","332","333","334","335","336","337","338"],"import React, { useEffect, useState, useContext } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Tooltip } from '@material-ui/core';\nimport AlertPop from './AlertPop'\nimport { Eth } from 'react-cryptocoins';\nimport { play, listPlayerLastSeasons, getUserLogued, watch, getCostPlay } from '../services/server';\nimport { UserProvider, useUser } from '../context/userContext'\nimport LoginContext from '../context/LoginContext'\nimport ListOfPlayers from './ListOfPlayers';\nimport DetailsList from './DetailsList';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n// export default ({ getRealPriceEth }) => (\n//   <UserProvider>\n//     <GameCard getRealPriceEth={getRealPriceEth}>\n//     </GameCard>\n//   </UserProvider>\n// )\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {\n      minWidth: 320,\n      minHeight: 200,\n    },\n    [theme.breakpoints.up('sm')]: {\n      minWidth: 400,\n      minHeight: 200,\n    },\n    [theme.breakpoints.up('md')]: {\n      minWidth: 800,\n      minHeight: 400,\n    },\n    background: 'rgba(0, 0, 0, 0.12)',\n  },\n  buttonCard: {\n    justifyContent: 'center'\n  },\n  margenButton: {\n    marginTop: '10px'\n  },\n  hideLastBorder: {\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  },\n  info: {\n    padding: 5,\n  },\n  game: {\n    padding: 5,\n    marginLeft: 20,\n  }\n}));\n\nconst GameCard = ({ getRealPriceEth }) => {\n  const { user, setUser, logued, setLogued } = useContext(LoginContext)\n  // const { user, logued } = useUser()\n  const classes = useStyles()\n  const [cost, setCost] = useState(0)\n  const [openPop, setOpenPop] = useState(false)\n  const [openPopInfo, setOpenPopInfo] = useState(false)\n  const [open, setOpen] = useState(false);\n\n  const handleClosePop = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenPop(false);\n  };\n\n  const handleClosePopInfo = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenPopInfo(false);\n  };\n\n  const handleClickOpen = (scrollType) => () => {\n    console.log('clickj')\n    setOpen(true)\n\n  };\n\n  const handleClose = () => {\n    setOpen(false)\n  };\n\n  // useEffect(() => {\n  //   console.log(listPlayers)\n  // }, [])\n  useEffect(\n    () => {\n      console.log(\"render game card\");\n      getCostPlay().then(\n        (res) => {\n          if (res !== false) {\n            setCost(res);\n          }\n        }\n      )\n\n\n    }, [logued, user]\n  )\n\n  const handlePlay = () => {\n    if (logued !== false) {\n      play().then(\n        (res) => {\n          console.log(res);\n          console.log(\"Has Jugado con exito\")\n          setOpenPopInfo(true)\n        }\n      ).catch(\n        (error) => {\n          console.log('error al juegar ' + error)\n        }\n      )\n    } else {\n      console.log('user disconnected')\n      setOpenPop(true)\n    }\n\n    // getUserLogued().then(\n    //   (result) => {\n    //     console.log(result)\n    //     if (result != null) {\n    //       let account = \"'\" + result + \"'\";\n    //       play(result).then(\n    //         (res) => {\n    //           console.log(res)\n    //           watch()\n    //           console.log('termine de ver')\n    //         }\n    //       )\n    //     } else {\n    //       console.log('logueese por favor')\n    //       setOpenPop(true)\n    //     }\n    //   }\n    // ).catch(\n    //   (error) => {\n    //     console.log('error al jugar')\n    //   }\n    // )\n\n  }\n\n  return (\n    <Card className={classes.root} variant=\"elevation\" >\n      <AlertPop open={openPop} handleClosePop={handleClosePop} type='error' sms='Please connect to a wallet!'></AlertPop>\n      <AlertPop open={openPopInfo} handleClosePop={handleClosePopInfo} type='success' sms='Game success!'></AlertPop>\n      <CardContent>\n        <Grid container justify=\"center\">\n          <Grid item container justify=\"flex-start\" >\n            <Grid item container className={classes.info} xs={false} sm={5} >\n              <Grid item>\n                <Typography variant=\"h5\" gutterBottom style={{ color: '#91091e' }}>Cost:</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" style={{ marginLeft: '5px' }}><Eth></Eth> {getRealPriceEth(cost)}</Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={7} >\n              <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handlePlay}>Play!</Button>\n            </Grid>\n          </Grid>\n          <Grid item container xs={12} spacing={2} className={classes.margenButton} >\n            <Grid item xs={12}>\n              <ListOfPlayers />\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions className={classes.buttonCard}>\n        <Button color=\"secondary\" size=\"small\" onClick={handleClickOpen('body')}>Show more</Button>\n        {\n          open\n            ? <DetailsList scrollType='body' handleClose={handleClose} open={open} />\n            : null\n        }\n      </CardActions>\n    </Card>\n  );\n\n}\n\nexport default GameCard\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Work/Work.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Hero/Hero.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Landing/Navbar/Navbar.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Header/Header.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/utils/transformAddress.js",["339"],"export function transformAddress (address){\n    if(address == \"\" || address == null){\n        return address\n    }\n    let first = address.slice(0,4)\n    let last = address.slice(38,42)\n    let newAddress = first + \"...\" + last\n    return newAddress\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Content/Content.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/CurrentGame/CurrentGame.js",["340","341","342","343","344"],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/SeasonContent/SeasonContent.js",["345","346","347"],"import React, { useEffect, useState } from \"react\";\nimport TopPlayers from \"../TopPlayers/TopPlayers\";\nimport {\n  CardRow,\n  SeasonCard,\n  PoolHeader,\n  EndHeader,\n  Subtitle,\n} from \"./SeasonContent.elements\";\nimport { getPoolSeason, miContrato } from '../../../services/server'\nimport { getCountDaysCurrentOfSeasons, getReward, getPriceInEth } from \"../../../services/server\";\n\n\nfunction SeasonContent() {\n  const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\n  const [rewardInEth, setRewardInEth] = useState(0)\n  const [reward, setReward] = useState({\n    recompensa: null,\n    nextRecompensa: null\n  })\n\n  useEffect(\n    () => {\n      getDays()\n      getRew()\n      miContrato.events.Game(\n        {\n          // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n          fromBlock: 'latest'\n        }\n        , (error, event) => {\n          console.log('Evento activado2');\n          getDays()\n          getRew()\n        }\n      )\n    }, [] // las llaves sirven para ejecutar solamente una vez el useEffect de esta manera copiamos el comportamiento de componentDidMount\n  )\n\n  const getDays = () => {\n    getCountDaysCurrentOfSeasons().then(\n      (result) => {\n        console.log(result)\n        setDaysCurrentSeassons(result.countDays)\n      }\n    ).catch(\n      (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  const getRew = () => {\n    getPoolSeason().then(\n      (result) => {\n        console.log(result)\n        getPriceInEth(result).then(res => setRewardInEth(res))\n\n      }\n    ).catch(\n      (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n\n  return (\n    <>\n      <CardRow>\n        <SeasonCard>\n          <PoolHeader>≈$ {rewardInEth}</PoolHeader>\n          <Subtitle>SEASON POOL</Subtitle>\n        </SeasonCard>\n        <SeasonCard>\n          <EndHeader>{daysCurrentSeassons} days </EndHeader>\n          <Subtitle>END OF SEASON</Subtitle>\n        </SeasonCard>\n      </CardRow>\n      <TopPlayers />\n    </>\n  );\n}\n\nexport default SeasonContent;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/DetailsList.js",["348","349"],"import React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { listPlayerLastSeasons } from '../services/server'\nimport Loading from './Loading';\nimport {transformAddress} from '../utils/transformAddress'\nimport {transformSecondsToHuman} from '../utils/transformSecondsToHuman'\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: 300,\n        },\n        [theme.breakpoints.up('sm')]: {\n            minWidth: 550,\n        },\n    }\n}));\n\nconst DetailsList = ({ scrollType, handleClose, open }) => {\n\n    const [scroll, setScroll] = useState('paper');\n    const [listPlayersTotal, setListPlayersTotal] = useState([]);\n    const [load, setLoad] = useState(true);\n    const classes = useStyles()\n\n\n\n    const getDay = (timestamp) => {\n        const milliseconds = timestamp * 1000\n        const date = new Date(milliseconds)\n        return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })\n    }\n\n    useEffect(\n        () => {\n            setScroll(scrollType);\n            if(listPlayersTotal.length == 0){\n                listPlayerLastSeasons().then(\n                    (result) => {\n                        var array = result.map(\n                            (r) => {\n                                return {\n                                    ...r,\n                                    player: r.player,\n                                    timeGame: r.timeGame,\n                                    timestamp: r.timestamp,\n                                    wait: r.wait,\n                                }\n                            }\n                        )\n                        setListPlayersTotal(array)\n                        setLoad(false)\n                    }\n                ).catch(\n                    (error) => {\n                        console.log('error array total ' + error)\n                    }\n                )\n            }\n        }, [scrollType]\n    )\n    return (\n        <>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                scroll={scroll}\n                maxWidth='md'\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Players List</DialogTitle>\n                <DialogContent dividers={scroll === 'paper'}>\n                    {\n                        load\n                            ? <Loading />\n                            : <TableContainer component={Paper}>\n                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>N</TableCell>\n                                            <TableCell>Player</TableCell>\n                                            <TableCell align=\"right\">Date</TableCell>\n                                            <TableCell align=\"right\">Wait</TableCell>\n                                            <TableCell align=\"right\">Time Game</TableCell>\n                                            {/* <TableCell align=\"right\"></TableCell> */}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {listPlayersTotal.map((l, index) => (\n                                            <TableRow key={l.player + l.timestamp + l.timeGame}>\n                                                <TableCell component=\"th\" scope=\"row\" >{index}</TableCell>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {transformAddress(l.player)}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{getDay(l.timestamp)}</TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" >{transformSecondsToHuman(l.wait)}</TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" >{transformSecondsToHuman(l.timeGame)}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                    }\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nexport default DetailsList;","/home/matu/Web Development/React/RunCoin-Fronted/src/context/userContext.js",["350"],"import React, { useEffect, useState, useMemo } from 'react';\nimport { getUserLogued } from '../services/server';\nconst UserContext = React.createContext();\n\nexport function UserProvider(props) {\n    const [user, setUser] = useState(null);\n    const [logued, setLogued] = useState(false);\n\n    useEffect(\n        () => {\n            getUserLogued().then(\n                (res) => {\n                    if (res != null) {\n                        setLogued(true)\n                        setUser({\n                            player: res\n                        })\n                    }\n                }\n            ).catch(\n                (error) => {\n                    console.log('error get user '+  error) \n                }\n            )\n        }, []\n    )\n\n\n    const value = useMemo(\n        () => {\n            return (\n                {\n                    user,\n                    logued,\n                    setLogued\n                }\n            )\n        }, \n    )\n\n    return <UserContext.Provider value={value} {...props} />\n}\n\nexport function useUser() {\n    const context = React.useContext(UserContext)\n    if (!context) {\n        throw new Error('error en el provider')\n    }\n    return context;\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ListOfPlayers.js",["351","352","353","354","355"],"import React, { useState, useEffect } from \"react\";\nimport { listPlayerLastSeasons } from \"../services/server\";\nimport { miContrato } from \"../services/server\";\nimport ItemGame from \"../components/ItemGame\";\nimport { Button, List } from \"@material-ui/core\";\nimport { useList } from \"../hooks/useList\";\nimport { player } from \"../services/server\";\nimport AlertPop from \"./AlertPop\";\nimport Loading from \"./Loading\";\n\nconst ListOfPlayers = () => {\n  // const { list, setNewGame, load } = useList()\n\n  const [list, setList] = useState([]);\n  const [load, setLoad] = useState(true);\n  // const [newGame, setNewGame] = useState(null)\n\n  useEffect(() => {\n    fetchApi();\n    miContrato.events.Game(\n      {\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n        fromBlock: \"latest\",\n      },\n      (error, event) => {\n        console.log(\"Evento activado\");\n        setLoad(true);\n        fetchApi();\n      }\n    );\n    console.log(\"saliendo\");\n  }, []);\n\n  async function fetchApi() {\n    await listPlayerLastSeasons(9)\n      .then((result) => {\n        var array = result.map((r) => {\n          return {\n            ...r,\n            player: r.player,\n            timeGame: r.timeGame,\n            timestamp: r.timestamp,\n            wait: r.wait,\n          };\n        });\n        setList(array);\n        setLoad(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <>\n      {load ? (\n        <Loading />\n      ) : (\n        list.map((l, index) => {\n          return (\n            <ItemGame\n              player={l.player}\n              timeGame={l.timeGame}\n              timestamp={l.timestamp}\n              wait={l.wait}\n              index={index}\n              key={l.player + l.timestamp}\n            ></ItemGame>\n          );\n          // if (index === 0) {\n          //     return (\n          //         <ItemGame player={l.player} timeGame={l.timeGame} timestamp={l.timestamp} wait={l.wait} isLast={true} key={l.player + l.timestamp}></ItemGame>\n          //     )\n          // } else {\n          //     return (\n          //         <ItemGame player={l.player} timeGame={l.timeGame} timestamp={l.timestamp} wait={l.wait} isLast={false} key={l.player + l.timestamp}></ItemGame>\n          //     )\n          // }\n        })\n      )}\n    </>\n  );\n};\n\nexport default ListOfPlayers;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/AlertPop.js",["356"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AlertPop({open, handleClosePop, type, sms}) {\n  const classes = useStyles();\n  \n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClosePop} >\n        <Alert onClose={handleClosePop}  severity={type}>\n          {sms}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","/home/matu/Web Development/React/RunCoin-Fronted/src/models/WalletModel.js",["357"],"import React , { useState } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport Authereum from \"authereum\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function WalletModel() {\n    const [loading, setLoading] = useState(false);\n    // const [provide, setProvide] = useState()\n    // const [webtre, setWebtre] = useState()\n    \n    return {\n        get web3Loading() {\n            return loading\n        },\n        async getweb3() {\n            setLoading(true);\n            let providerOptions;\n            let web3Modal;\n            let provider;\n            let web3;\n            providerOptions = {\n                metamask: {\n                    id: \"injected\",\n                    name: \"MetaMask\",\n                    type: \"injected\",\n                    check: \"isMetaMask\"\n                },\n                walletconnect: {\n                    package: WalletConnectProvider, // required\n                    options: {\n                        infuraId: \"INFURA_ID\", // Required\n                        network: \"rinkeby\",\n                        qrcodeModalOptions: {\n                            mobileLinks: [\n                                \"rainbow\",\n                                \"metamask\",\n                                \"argent\",\n                                \"trust\",\n                                \"imtoken\",\n                                \"pillar\"\n                            ]\n                        }\n                    }\n                },\n                authereum: {\n                    package: Authereum // required\n                },\n            };\n            web3Modal = new Web3Modal({\n                network: \"rinkeby\",\n                cacheProvider: false,\n                providerOptions\n            });\n            provider = await web3Modal.connect();\n            provider.on('error', e => console.error('WS Error', e));\n            provider.on('end', e => console.error('WS End', e));\n\n            provider.on(\"disconnect\", (error) => {\n                console.log(error);\n            });\n            provider.on(\"connect\", (info) => {\n                console.log('conectandooo perriririri')\n                console.log(info);\n            });\n            web3 = new Web3(provider);\n            console.log('cuanto termino de conectar');\n            console.log(provider);\n            setLoading(false);\n            return {web3, web3Modal, provider};\n        },\n        async disconnect(){\n            // if(provider.close) {\n            //     await provider.close();\n            \n            //     // If the cached provider is not cleared,\n            //     // WalletConnect will default to the existing session\n            //     // and does not allow to re-scan the QR code with a new wallet.\n            //     // Depending on your use case you may want or want not his behavior.\n            //     await web3.clearCachedProvider();\n            //     provider = null;\n            // } \n        },\n    }\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/SeasonContent/SeasonContent.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/hooks/useFullBar.js",["358","359","360","361"],"import React, { useContext, useState, useEffect } from 'react';\nimport BarContext from '../context/BarContext';\nimport { useLogin } from './useLogin';\n\nexport const useFullBar = () => {\n\n    const {isFull , setIsFull, lastUser, setLastUser} = useContext(BarContext)\n    const {user} = useLogin()\n\n    useEffect(\n        () => {\n            if(lastUser != null ){\n                if(user.player == lastUser){\n                    setIsFull(true) ;\n                }\n            }\n        }, [isFull,lastUser]\n    )\n\n    return {isFull, setIsFull, setLastUser}\n}\n \n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/CurrentGame/CurrentGame.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/TopPlayers/TopPlayers.js",["362","363"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { getWinnersSeason, miContrato, getSeasonCurrent } from \"../../../services/server\";\nimport {\n  TopListCard,\n  TopHeader,\n  ListHeader,\n  ListItem,\n  HeaderNumber,\n  HeaderPlayer,\n  HeaderAmount,\n  ItemNumber,\n  ItemPlayer,\n  ItemAmount,\n  TopContainer,\n  SeasonSelect,\n} from \"../SeasonContent/SeasonContent.elements\";\nimport { transformAddress } from '../../../utils/transformAddress'\nimport LoginContext from \"../../../context/LoginContext\";\n\nconst TopPlayers = () => {\n  const [top, setTop] = useState([]);\n  const { user } = useContext(LoginContext);\n  const [season, setSeason] = useState(0)\n\n  useEffect(() => {\n    loadList()\n    miContrato.events.Game(\n      {\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\n        fromBlock: 'latest'\n      }\n      , (error, event) => {\n        loadList()\n      }\n    )\n  }, []);\n\n  const loadList = () => {\n    getSeasonCurrent().then(\n      (res) => {\n        setSeason(res)\n      }\n    )\n    getWinnersSeason()\n      .then((res) => {\n        setTop(res)\n      })\n      .catch((error) => console.log(error));\n\n  }\n\n  const listMenu = () => {\n    let menuItems = []\n    console.log(\"seasonnn\" + season);\n    for (let index = season; index >= 0; index--) {\n      console.log('creandoooo');\n      if (season == index) {\n        menuItems.push(<option selected value={index} key={index}>Season {index}</option>)\n      } else {\n        menuItems.push(<option value={index} key={index}>Season {index}</option>)\n      }\n    }\n    return menuItems\n  }\n\n  const handleChange = (e) => {\n    getWinnersSeason(e.target.value)\n      .then((res) => {\n        setTop(res)\n      })\n      .catch((error) => console.log(error));\n  }\n\n  return (\n    <>\n      <TopListCard>\n        <TopContainer>\n          <TopHeader>top players</TopHeader>\n          <SeasonSelect onChange={handleChange}>\n            {listMenu()}\n          </SeasonSelect>\n        </TopContainer>\n\n        <ListHeader>\n          <HeaderNumber>#</HeaderNumber>\n          <HeaderPlayer>player</HeaderPlayer>\n          <HeaderAmount>amount</HeaderAmount>\n          <HeaderAmount>reward</HeaderAmount>\n        </ListHeader>\n\n        {top.map((item, index) => {\n          return item.address == user.player ?\n            <ListItem className=\"player\">\n              <ItemNumber>{index + 1}</ItemNumber>\n              <ItemPlayer>{transformAddress(item.address)}</ItemPlayer>\n              <ItemAmount>{item.cantGame}</ItemAmount>\n              <ItemAmount>{item.reward}</ItemAmount>\n            </ListItem>\n            :\n            <ListItem>\n              <ItemNumber>{index + 1}</ItemNumber>\n              <ItemPlayer>{transformAddress(item.address)}</ItemPlayer>\n              <ItemAmount>{item.cantGame}</ItemAmount>\n              <ItemAmount>{item.reward}</ItemAmount>\n            </ListItem>\n        })}\n\n        {/* <ListItem>\n                    <ItemNumber>2</ItemNumber>\n                    <ItemPlayer>0x6A...AdE8 </ItemPlayer>\n                    <ItemAmount>9</ItemAmount>\n                </ListItem>\n                <ListItem className=\"player\">\n                    <ItemNumber>3</ItemNumber>\n                    <ItemPlayer>0x34...F9F7</ItemPlayer>\n                    <ItemAmount>6</ItemAmount>\n                </ListItem>\n                <ListItem>\n                    <ItemNumber>4</ItemNumber>\n                    <ItemPlayer>0x6A...AdE8 </ItemPlayer>\n                    <ItemAmount>3</ItemAmount>\n                </ListItem> */}\n      </TopListCard>\n    </>\n  );\n};\n\nexport default TopPlayers;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonClaim/ButtonClaim.js",["364"],"import React, { useState } from 'react';\nimport { claimWinnerPool } from '../../../services/server';\nimport { PlayButton } from '../CurrentGame/CurrentGame.elements';\nimport Alert from \"../Alert/Alert\";\nimport { useFullBar } from '../../../hooks/useFullBar';\n\nconst ButtonClaim = () => {\n\n    const [open, setOpen] = useState(false);\n    const [type, setType] = useState(null);\n    const [msg, setMsg] = useState(null);\n    const {setIsFull} = useFullBar()\n\n    const handleClick = () => {\n        claimWinnerPool().then(\n            res => {\n                if (res == true) {\n                    setType(\"success\")\n                    setMsg(\"Claimed\")\n                    setOpen(true)\n                    setIsFull(false)\n                    const timeout = setTimeout(() => {\n                        setOpen(false);\n                    }, 4000);\n                    return () => {\n                        clearTimeout(timeout);\n                    };\n                }\n            }\n        )\n    }\n\n    return (\n        <>\n            <Alert icon={type} msg={msg} open={open} type={type} />\n            <PlayButton className=\"claim\" onClick={handleClick}>\n                CLAIM\n            </PlayButton>\n        </>\n    );\n}\n\nexport default ButtonClaim;","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Alert/Alert.js",["365","366"],"import React, { useState, useEffect } from \"react\";\nimport successIcon from \"../../../images/successIcon.svg\";\nimport errorIcon from \"../../../images/dangerIcon.svg\";\n\nimport {\n  AlertContainert,\n  ToastAlert,\n  ToastIcon,\n  ToastMsg,\n} from \"./Alert.elements\";\n// import successIcon from \"../../../images/successIcon.svg\";\n\nfunction Alert({ msg, open, type, icon }) {\n  const handleIconType = (icon) => {\n    switch (icon) {\n      case \"success\":\n        return successIcon;\n      case \"error\":\n        return errorIcon;\n      default:\n        return \"#eee\";\n    }\n  };\n\n  return (\n    <AlertContainert className={open ? `toast-visible` : null}>\n      <ToastAlert type={type}>\n        <ToastIcon src={handleIconType(icon)} />\n        <ToastMsg type={type}>{msg}</ToastMsg>\n      </ToastAlert>\n    </AlertContainert>\n  );\n}\nexport default Alert;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonPlay/ButtonPlay.js",["367","368","369","370","371","372"],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ListOfPlays/ListOfPlays.js",["373","374","375","376"],"import React, { useState, useEffect } from \"react\";\nimport { miContrato, listPlayerLastSeasons, getMorePlayer, getCountPlayersSeason } from \"../../../services/server\";\nimport Loading from \"../../Loading\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport { LoadingRow } from \"./ListOfPlays.elements\";\nimport { MoreButton } from \"../CurrentGame/CurrentGame.elements\"\nimport { ListItemIcon } from \"@material-ui/core\";\nimport { SmsOutlined } from \"@material-ui/icons\";\n\nconst ListOfPlayers = () => {\n  const [list, setList] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [loadMore, setLoadMore] = useState(false);\n  const [countList, setCountList] = useState(0);\n\n  useEffect(() => {\n    fetchApi();\n    loadCountPlayers()\n    miContrato.events.Game(\n      {\n        fromBlock: \"latest\",\n      },\n      (error, event) => {\n        console.log(\"Evento activado\");\n        setLoad(true);\n        fetchApi();\n        loadCountPlayers()\n      }\n    );\n    console.log(\"saliendo\");\n  }, []);\n\n  const loadMorePlayers = () => {\n    console.log('pidiendo mas');\n    setLoadMore(true)\n    console.log(countList);\n    console.log(list.length);\n    console.log(list);\n    if(countList != list.length){\n      getMorePlayer(9, countList - list.length).then(\n        res => {\n          console.log(res);\n          if(res != false){\n            const newList = list.concat(res)\n            console.log(newList);\n            setList(newList)\n          }\n          setLoadMore(false)\n        }\n      )\n    }\n  }\n\n  const loadCountPlayers = () => {\n    getCountPlayersSeason().then(\n      res => {\n        console.log(res);\n        setCountList(res)\n      }\n    )\n  }\n\n  async function fetchApi() {\n    await listPlayerLastSeasons(9)\n      .then((result) => {\n        var array = result.map((r) => {\n          return {\n            ...r,\n            player: r.player,\n            timeGame: r.timeGame,\n            timestamp: r.timestamp,\n            wait: r.wait,\n          };\n        });\n        setList(array);\n        setLoad(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const handleLoadMore = () => {\n    console.log('apretado');\n    loadMorePlayers()\n  }\n\n  return (\n    <>\n      {load ? (\n        <LoadingRow>\n          <Loading />\n        </LoadingRow>\n      ) : (\n        list.map((l, index) => {\n          return (\n            <ProgressBar\n              player={l.player}\n              timeGame={l.timeGame}\n              timestamp={l.timestamp}\n              wait={l.wait}\n              index={index}\n              key={l.player + l.timestamp}\n            ></ProgressBar>\n          );\n        })\n      )}\n      {\n        loadMore \n          ?\n            <LoadingRow>\n              <Loading />\n            </LoadingRow>\n          : null\n      }\n      <MoreButton onClick={handleLoadMore}>Show More</MoreButton>\n    </>\n  );\n};\n\nexport default ListOfPlayers;\n","/home/matu/Web Development/React/RunCoin-Fronted/src/utils/transformSecondsToHuman.js",["377","378","379","380"],"export function transformSecondsToHuman (seconds) {\n    seconds = Number(seconds);\n    var d = Math.floor(seconds / (3600 * 24));\n    var h = Math.floor(seconds % (3600 * 24) / 3600);\n    var m = Math.floor(seconds % 3600 / 60);\n    var s = Math.floor(seconds % 60);\n\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n    return dDisplay + hDisplay + mDisplay + sDisplay;\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Loading.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ListOfPlays/ListOfPlays.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ButtonPlay/ButtonPlay.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/Alert/Alert.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ProgressBar/ProgressBar.js",["381","382","383","384","385","386","387"],"import React, { useState, useEffect } from \"react\";\nimport { transformSecondsToHuman } from \"../../../utils/transformSecondsToHuman\";\nimport { transformAddress } from \"../../../utils/transformAddress\";\nimport { useLogin } from \"../../../hooks/useLogin\";\nimport {\n  BarRow,\n  PlayerId,\n  GameBar,\n  Bar,\n  TimeBar,\n} from \"./ProgressBar.elements\";\nimport { useFullBar } from \"../../../hooks/useFullBar\";\n\nexport default function ProgressBar(props) {\n  //login de user\n  const { user } = useLogin();\n\n  const [value, setValue] = useState(20);\n  const [aux, setAux] = useState(props.timeGame);\n  const [isLast, setIsLast] = useState(props.index === 0 ? true : false);\n  // const [porcent, setPorcent] = useState(20)\n  const [esperar, setEsperar] = useState(props.wait - props.timeGame);\n  const [end, setEnd] = useState(props.wait);\n  const [timeGame, setTimeGame] = useState(props.timeGame);\n  const begin = 20;\n  const {setLastUser} = useFullBar()\n\n  const getHours = (seconds) => {\n    return transformSecondsToHuman(seconds);\n  };\n\n  const getWaitPorcent = () => {\n    let difference = (aux * 80) / end;\n    if (difference > 0) {\n      return difference;\n    } else {\n      return 0;\n    }\n  };\n\n  const getDay = (timestamp) => {\n    const milliseconds = timestamp * 1000;\n    const date = new Date(milliseconds);\n    return date.toLocaleDateString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  useEffect(() => {\n    if (props.index === 0) {\n      setIsLast(true);\n    } else {\n      setIsLast(false);\n    }\n    if (isLast && timeGame < end) {\n      const timer = setTimeout(() => {\n        if (esperar >= 0) {\n          setAux(aux + 1);\n          setEsperar(esperar - 1);\n          setValue(begin + getWaitPorcent());\n        } else {\n          console.log('ukltima option');\n          if(isLast){\n            setLastUser(props.player);\n          }\n          return () => clearTimeout(timer);\n        }\n      }, 1000);\n    } else {\n      console.log('assaasa');\n      if (timeGame >= end) {\n        console.log('entre aca');\n        setValue(100);\n        if(isLast){\n          console.log('ultimooo paaaa');\n          setLastUser(props.player);\n        }\n      } else {\n        console.log('aaaaquiiiiii papaa');\n        setValue(begin + getWaitPorcent());\n      }\n      console.log('pepeepepep');\n    }\n  }, [esperar, value]);\n\n  if (isLast && timeGame < end) {\n    return (\n      <>\n        <BarRow>\n          {user.player == props.player ? (\n            <PlayerId>you: {transformAddress(props.player)}</PlayerId>\n          ) : (\n            <PlayerId>id: {transformAddress(props.player)}</PlayerId>\n          )}\n          <GameBar>\n            <Bar value={value} className=\"current-game-animation\"></Bar>\n          </GameBar>\n          <TimeBar>End In: {getHours(esperar)}</TimeBar>\n        </BarRow>\n      </>\n    );\n  } else if (timeGame >= end) {\n    return (\n      <>\n        <BarRow>\n          {user.player == props.player ? (\n            <>\n              <PlayerId>you: {transformAddress(props.player)}</PlayerId>\n              <GameBar>\n                <Bar value={value} className=\"game-ended-player\"></Bar>\n              </GameBar>\n            </>\n          ) : (\n            <>\n              <PlayerId>id: {transformAddress(props.player)}</PlayerId>\n              <GameBar>\n                <Bar value={value} className=\"game-ended\"></Bar>\n              </GameBar>\n            </>\n          )}\n          <TimeBar>Ended</TimeBar>\n        </BarRow>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <>\n          <BarRow>\n            {user.player == props.player ? (\n              <>\n                <PlayerId>you: {transformAddress(props.player)}</PlayerId>\n                <GameBar>\n                  <Bar value={value} className=\"game-early-ended-player\"></Bar>\n                </GameBar>\n              </>\n            ) : (\n              <>\n                <PlayerId>id: {transformAddress(props.player)}</PlayerId>\n                <GameBar>\n                  <Bar value={value} className=\"game-early-ended\"></Bar>\n                </GameBar>\n              </>\n            )}\n            <TimeBar>Ended</TimeBar>\n          </BarRow>\n        </>\n      </>\n    );\n  }\n}\n","/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/ProgressBar/ProgressBar.elements.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/ItemGame.js",["388","389"],"import React from 'react';\nimport { Grid, Tooltip, Typography } from '@material-ui/core'\nimport ProgressBar from './ProgressBar'\nimport { transformAddress } from '../utils/transformAddress'\nimport { useLogin } from '../hooks/useLogin';\n\nconst ItemGame = (props) => {\n\n\n    const { user } = useLogin()\n    \n\n    return (\n        <>\n            {\n                user.player == props.player\n                    ?\n                    <Tooltip title=\"You\" placement=\"left-start\">\n                        <Typography variant=\"subtitle1\" gutterBottom align='left' color='primary'>\n                            Id: {transformAddress(props.player)}\n                        </Typography>\n                    </Tooltip>\n                    : <Typography variant=\"subtitle1\" gutterBottom align='left'>\n                        Id: {transformAddress(props.player)}\n                    </Typography>\n            }\n            <ProgressBar {...props}></ProgressBar>\n        </>\n    );\n}\n\nexport default ItemGame;","/home/matu/Web Development/React/RunCoin-Fronted/src/components/ProgressBar.js",["390","391","392","393"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography'\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport { transformSecondsToHuman } from '../utils/transformSecondsToHuman';\nimport { Box } from '@material-ui/core';\n\nconst BorderLinearProgressInGame = withStyles((theme) => ({\n  root: {\n    height: 30,\n    borderRadius: 0,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress);\n\nconst BorderLinearProgressLoss = withStyles((theme) => ({\n  root: {\n    height: 30,\n    borderRadius: 0,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: 'red',\n  },\n}))(LinearProgress);\n\nconst BorderLinearProgressWin = withStyles((theme) => ({\n  root: {\n    height: 30,\n    borderRadius: 0,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: 'green',\n  },\n}))(LinearProgress);\n\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function ProgressBar(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(20);\n  const [aux, setAux] = useState(props.timeGame)\n  const [isLast, setIsLast] = useState(props.index === 0 ? true : false)\n  // const [porcent, setPorcent] = useState(20)\n  const [esperar, setEsperar] = useState(props.wait - props.timeGame)\n  const [end, setEnd] = useState(props.wait)\n  const [timeGame, setTimeGame] = useState(props.timeGame)\n  const begin = 20;\n\n  const getHours = (seconds) => {\n    return transformSecondsToHuman(seconds)\n  }\n\n  const getWaitPorcent = () => {\n    let difference = aux * 80 / end\n    if (difference > 0) {\n      return difference\n    } else {\n      return 0\n    }\n  }\n\n  const getDay = (timestamp) => {\n    const milliseconds = timestamp * 1000\n    const date = new Date(milliseconds)\n    return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })\n  }\n\n\n  useEffect(\n    () => {\n      let montado = true\n      if (props.index === 0) {\n        setIsLast(true)\n      } else {\n        setIsLast(false)\n      }\n      // console.log(props)\n      // console.log(\"render progress bar\");\n      if (isLast && (timeGame < end)) {\n\n        const timer = setTimeout(() => {\n\n          // console.log('callculo ' porcent )\n          // console.log(porcent)\n          if (esperar >= 0) {\n            // console.log( 'fin ' +  end)\n            // console.log( 'aux  ' + aux)\n\n            // console.log( 'esperar ' + esperar)\n            // // console.log(aux)\n            // console.log( 'espera ' + (begin + (aux * 80 / end)))\n            setAux(aux + 1)\n            setEsperar(esperar - 1)\n            // setPorcent(begin + (aux * 80 / end))\n            // console.log('entre')\n            setValue(begin + getWaitPorcent());\n          } else {\n            console.log('salppepepepp')\n            return () => clearTimeout(timer)\n          }\n        }, 1000);\n        // let porcent = 0 \n        // let aux = 0\n      } else {\n        if (timeGame >= end) {\n          setValue(100)\n        } else {\n          // console.log(timeGame*80/esperar)\n          setValue(begin + getWaitPorcent())\n        }\n      }\n\n      return () => console.log('desmontando');\n\n    }, [esperar, value]\n  )\n\n  if (isLast && (timeGame < end)) {\n    return (\n      <div className={classes.root}>\n        <BorderLinearProgressInGame variant=\"determinate\" value={value} />\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle2\" color=\"initial\">{getHours(esperar)}</Typography>\n          </Box>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\n              <strong>Date:</strong> {getDay(props.timestamp)}\n            </Typography>\n          </Box>\n        </Box>\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\n                <strong>Game Time:</strong> {props.timeGame}\n            </Typography> */}\n\n      </div>\n    );\n  } else if (timeGame >= end) {\n\n    return (\n      <div className={classes.root}>\n        <BorderLinearProgressWin variant=\"determinate\" value={value} />\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle1\" color=\"initial\"><SentimentVerySatisfiedIcon color=\"secondary\" /></Typography>\n          </Box>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\n              <strong>Date:</strong> {getDay(props.timestamp)}\n            </Typography>\n          </Box>\n        </Box>\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\n                <strong>Game Time:</strong> {props.timeGame}\n            </Typography> */}\n      </div>\n    );\n  } else {\n    return (\n      <div className={classes.root}>\n        <BorderLinearProgressLoss variant=\"determinate\" value={value} />\n        {/* <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}> */}\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle1\" color=\"initial\"><SentimentDissatisfiedIcon color=\"action\" style={{ color: '#e57373' }} /></Typography>\n          </Box>\n          <Box width=\"50%\">\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\n              <strong>Date:</strong> {getDay(props.timestamp)}\n            </Typography>\n          </Box>\n        </Box>\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\n                <strong>Game Time:</strong> {props.timeGame}\n            </Typography> */}\n        {/* </div> */}\n      </div>\n    );\n  }\n\n\n}","/home/matu/Web Development/React/RunCoin-Fronted/src/services/abiTG.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/PopUp/PopUp.js",[],"/home/matu/Web Development/React/RunCoin-Fronted/src/components/Game/PopUp/PopUp.elements.js",[],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":1,"column":37,"nodeType":"400","messageId":"401","endLine":1,"endColumn":46},{"ruleId":"398","severity":1,"message":"402","line":4,"column":3,"nodeType":"400","messageId":"401","endLine":4,"endColumn":14},{"ruleId":"398","severity":1,"message":"403","line":10,"column":10,"nodeType":"400","messageId":"401","endLine":10,"endColumn":17},{"ruleId":"398","severity":1,"message":"404","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":22},{"ruleId":"398","severity":1,"message":"405","line":19,"column":10,"nodeType":"400","messageId":"401","endLine":19,"endColumn":29},{"ruleId":"398","severity":1,"message":"406","line":20,"column":10,"nodeType":"400","messageId":"401","endLine":20,"endColumn":16},{"ruleId":"398","severity":1,"message":"407","line":70,"column":9,"nodeType":"400","messageId":"401","endLine":70,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":71,"column":13,"nodeType":"410","messageId":"411","endLine":71,"endColumn":15},{"ruleId":"398","severity":1,"message":"412","line":1,"column":16,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"413","line":6,"column":15,"nodeType":"400","messageId":"401","endLine":6,"endColumn":21},{"ruleId":"398","severity":1,"message":"402","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"398","severity":1,"message":"403","line":11,"column":10,"nodeType":"400","messageId":"401","endLine":11,"endColumn":17},{"ruleId":"408","severity":1,"message":"409","line":85,"column":17,"nodeType":"410","messageId":"411","endLine":85,"endColumn":19},{"ruleId":"398","severity":1,"message":"414","line":33,"column":15,"nodeType":"400","messageId":"401","endLine":33,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":108,"column":26,"nodeType":"410","messageId":"411","endLine":108,"endColumn":28},{"ruleId":"415","severity":1,"message":"416","line":167,"column":9,"nodeType":"400","messageId":"417","endLine":167,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":190,"column":26,"nodeType":"410","messageId":"411","endLine":190,"endColumn":28},{"ruleId":"408","severity":1,"message":"409","line":205,"column":36,"nodeType":"410","messageId":"411","endLine":205,"endColumn":38},{"ruleId":"408","severity":1,"message":"409","line":262,"column":26,"nodeType":"410","messageId":"411","endLine":262,"endColumn":28},{"ruleId":"408","severity":1,"message":"409","line":293,"column":36,"nodeType":"410","messageId":"411","endLine":293,"endColumn":38},{"ruleId":"408","severity":1,"message":"409","line":336,"column":21,"nodeType":"410","messageId":"411","endLine":336,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":442,"column":40,"nodeType":"410","messageId":"411","endLine":442,"endColumn":42},{"ruleId":"408","severity":1,"message":"409","line":459,"column":20,"nodeType":"410","messageId":"411","endLine":459,"endColumn":22},{"ruleId":"408","severity":1,"message":"409","line":523,"column":13,"nodeType":"410","messageId":"411","endLine":523,"endColumn":15},{"ruleId":"408","severity":1,"message":"418","line":47,"column":29,"nodeType":"410","messageId":"411","endLine":47,"endColumn":31},{"ruleId":"398","severity":1,"message":"419","line":48,"column":21,"nodeType":"400","messageId":"401","endLine":48,"endColumn":24},{"ruleId":"398","severity":1,"message":"420","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":20},{"ruleId":"398","severity":1,"message":"421","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":22},{"ruleId":"398","severity":1,"message":"422","line":1,"column":8,"nodeType":"400","messageId":"401","endLine":1,"endColumn":13},{"ruleId":"423","severity":1,"message":"424","line":25,"column":12,"nodeType":"425","endLine":25,"endColumn":21,"suggestions":"426"},{"ruleId":"398","severity":1,"message":"422","line":1,"column":8,"nodeType":"400","messageId":"401","endLine":1,"endColumn":13},{"ruleId":"398","severity":1,"message":"427","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"423","severity":1,"message":"428","line":27,"column":12,"nodeType":"425","endLine":27,"endColumn":14,"suggestions":"429"},{"ruleId":"398","severity":1,"message":"430","line":4,"column":18,"nodeType":"400","messageId":"401","endLine":4,"endColumn":23},{"ruleId":"398","severity":1,"message":"431","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":17},{"ruleId":"398","severity":1,"message":"412","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"432","line":1,"column":38,"nodeType":"400","messageId":"401","endLine":1,"endColumn":48},{"ruleId":"398","severity":1,"message":"433","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":21},{"ruleId":"398","severity":1,"message":"434","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":24},{"ruleId":"398","severity":1,"message":"435","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"436","line":6,"column":10,"nodeType":"400","messageId":"401","endLine":6,"endColumn":22},{"ruleId":"398","severity":1,"message":"437","line":6,"column":24,"nodeType":"400","messageId":"401","endLine":6,"endColumn":31},{"ruleId":"398","severity":1,"message":"438","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":20},{"ruleId":"398","severity":1,"message":"439","line":44,"column":11,"nodeType":"400","messageId":"401","endLine":44,"endColumn":22},{"ruleId":"398","severity":1,"message":"440","line":44,"column":33,"nodeType":"400","messageId":"401","endLine":44,"endColumn":43},{"ruleId":"398","severity":1,"message":"441","line":114,"column":18,"nodeType":"400","messageId":"401","endLine":114,"endColumn":34},{"ruleId":"398","severity":1,"message":"419","line":115,"column":11,"nodeType":"400","messageId":"401","endLine":115,"endColumn":14},{"ruleId":"398","severity":1,"message":"442","line":7,"column":28,"nodeType":"400","messageId":"401","endLine":7,"endColumn":35},{"ruleId":"398","severity":1,"message":"443","line":10,"column":16,"nodeType":"400","messageId":"401","endLine":10,"endColumn":37},{"ruleId":"398","severity":1,"message":"444","line":10,"column":39,"nodeType":"400","messageId":"401","endLine":10,"endColumn":52},{"ruleId":"398","severity":1,"message":"445","line":10,"column":54,"nodeType":"400","messageId":"401","endLine":10,"endColumn":59},{"ruleId":"398","severity":1,"message":"436","line":11,"column":10,"nodeType":"400","messageId":"401","endLine":11,"endColumn":22},{"ruleId":"398","severity":1,"message":"437","line":11,"column":24,"nodeType":"400","messageId":"401","endLine":11,"endColumn":31},{"ruleId":"398","severity":1,"message":"446","line":15,"column":8,"nodeType":"400","messageId":"401","endLine":15,"endColumn":18},{"ruleId":"398","severity":1,"message":"447","line":16,"column":8,"nodeType":"400","messageId":"401","endLine":16,"endColumn":18},{"ruleId":"398","severity":1,"message":"448","line":62,"column":17,"nodeType":"400","messageId":"401","endLine":62,"endColumn":24},{"ruleId":"398","severity":1,"message":"449","line":62,"column":34,"nodeType":"400","messageId":"401","endLine":62,"endColumn":43},{"ruleId":"408","severity":1,"message":"409","line":2,"column":16,"nodeType":"410","messageId":"411","endLine":2,"endColumn":18},{"ruleId":"398","severity":1,"message":"450","line":7,"column":3,"nodeType":"400","messageId":"401","endLine":7,"endColumn":13},{"ruleId":"398","severity":1,"message":"451","line":10,"column":3,"nodeType":"400","messageId":"401","endLine":10,"endColumn":13},{"ruleId":"398","severity":1,"message":"452","line":13,"column":8,"nodeType":"400","messageId":"401","endLine":13,"endColumn":13},{"ruleId":"398","severity":1,"message":"453","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":28},{"ruleId":"423","severity":1,"message":"454","line":36,"column":6,"nodeType":"425","endLine":36,"endColumn":8,"suggestions":"455"},{"ruleId":"398","severity":1,"message":"456","line":11,"column":40,"nodeType":"400","messageId":"401","endLine":11,"endColumn":49},{"ruleId":"398","severity":1,"message":"406","line":17,"column":10,"nodeType":"400","messageId":"401","endLine":17,"endColumn":16},{"ruleId":"398","severity":1,"message":"457","line":17,"column":18,"nodeType":"400","messageId":"401","endLine":17,"endColumn":27},{"ruleId":"408","severity":1,"message":"409","line":50,"column":40,"nodeType":"410","messageId":"411","endLine":50,"endColumn":42},{"ruleId":"423","severity":1,"message":"458","line":73,"column":12,"nodeType":"425","endLine":73,"endColumn":24,"suggestions":"459"},{"ruleId":"423","severity":1,"message":"460","line":29,"column":19,"nodeType":"400","endLine":29,"endColumn":26},{"ruleId":"398","severity":1,"message":"413","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":16},{"ruleId":"398","severity":1,"message":"461","line":5,"column":18,"nodeType":"400","messageId":"401","endLine":5,"endColumn":22},{"ruleId":"398","severity":1,"message":"403","line":6,"column":10,"nodeType":"400","messageId":"401","endLine":6,"endColumn":17},{"ruleId":"398","severity":1,"message":"462","line":7,"column":10,"nodeType":"400","messageId":"401","endLine":7,"endColumn":16},{"ruleId":"398","severity":1,"message":"463","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":16},{"ruleId":"398","severity":1,"message":"413","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"398","severity":1,"message":"422","line":1,"column":8,"nodeType":"400","messageId":"401","endLine":1,"endColumn":13},{"ruleId":"398","severity":1,"message":"422","line":1,"column":8,"nodeType":"400","messageId":"401","endLine":1,"endColumn":13},{"ruleId":"398","severity":1,"message":"427","line":1,"column":29,"nodeType":"400","messageId":"401","endLine":1,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":13,"column":32,"nodeType":"410","messageId":"411","endLine":13,"endColumn":34},{"ruleId":"423","severity":1,"message":"464","line":17,"column":12,"nodeType":"425","endLine":17,"endColumn":29,"suggestions":"465"},{"ruleId":"408","severity":1,"message":"409","line":57,"column":18,"nodeType":"410","messageId":"411","endLine":57,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":92,"column":31,"nodeType":"410","messageId":"411","endLine":92,"endColumn":33},{"ruleId":"408","severity":1,"message":"409","line":17,"column":25,"nodeType":"410","messageId":"411","endLine":17,"endColumn":27},{"ruleId":"398","severity":1,"message":"427","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"412","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"443","line":6,"column":3,"nodeType":"400","messageId":"401","endLine":6,"endColumn":24},{"ruleId":"398","severity":1,"message":"444","line":7,"column":3,"nodeType":"400","messageId":"401","endLine":7,"endColumn":16},{"ruleId":"398","severity":1,"message":"445","line":8,"column":3,"nodeType":"400","messageId":"401","endLine":8,"endColumn":8},{"ruleId":"398","severity":1,"message":"448","line":15,"column":17,"nodeType":"400","messageId":"401","endLine":15,"endColumn":24},{"ruleId":"398","severity":1,"message":"449","line":15,"column":34,"nodeType":"400","messageId":"401","endLine":15,"endColumn":43},{"ruleId":"398","severity":1,"message":"466","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":14},{"ruleId":"398","severity":1,"message":"467","line":7,"column":10,"nodeType":"400","messageId":"401","endLine":7,"endColumn":22},{"ruleId":"398","severity":1,"message":"468","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":21},{"ruleId":"408","severity":1,"message":"418","line":39,"column":18,"nodeType":"410","messageId":"411","endLine":39,"endColumn":20},{"ruleId":"408","severity":1,"message":"418","line":43,"column":18,"nodeType":"410","messageId":"411","endLine":43,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":8,"column":35,"nodeType":"410","messageId":"411","endLine":8,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":9,"column":35,"nodeType":"410","messageId":"411","endLine":9,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":10,"column":35,"nodeType":"410","messageId":"411","endLine":10,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":11,"column":35,"nodeType":"410","messageId":"411","endLine":11,"endColumn":37},{"ruleId":"398","severity":1,"message":"469","line":23,"column":15,"nodeType":"400","messageId":"401","endLine":23,"endColumn":21},{"ruleId":"398","severity":1,"message":"470","line":24,"column":20,"nodeType":"400","messageId":"401","endLine":24,"endColumn":31},{"ruleId":"398","severity":1,"message":"471","line":41,"column":9,"nodeType":"400","messageId":"401","endLine":41,"endColumn":15},{"ruleId":"423","severity":1,"message":"472","line":85,"column":6,"nodeType":"425","endLine":85,"endColumn":22,"suggestions":"473"},{"ruleId":"408","severity":1,"message":"409","line":91,"column":24,"nodeType":"410","messageId":"411","endLine":91,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":107,"column":24,"nodeType":"410","messageId":"411","endLine":107,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":131,"column":26,"nodeType":"410","messageId":"411","endLine":131,"endColumn":28},{"ruleId":"398","severity":1,"message":"474","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"408","severity":1,"message":"409","line":16,"column":29,"nodeType":"410","messageId":"411","endLine":16,"endColumn":31},{"ruleId":"398","severity":1,"message":"469","line":66,"column":15,"nodeType":"400","messageId":"401","endLine":66,"endColumn":21},{"ruleId":"398","severity":1,"message":"470","line":67,"column":20,"nodeType":"400","messageId":"401","endLine":67,"endColumn":31},{"ruleId":"398","severity":1,"message":"475","line":92,"column":11,"nodeType":"400","messageId":"401","endLine":92,"endColumn":18},{"ruleId":"423","severity":1,"message":"476","line":136,"column":8,"nodeType":"425","endLine":136,"endColumn":24,"suggestions":"477"},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"no-unused-vars","'keyframes' is defined but never used.","Identifier","unusedVar","'getCostPlay' is defined but never used.","'useList' is defined but never used.","'ListPlayersTop' is defined but never used.","'daysCurrentSeassons' is assigned a value but never used.","'reward' is assigned a value but never used.","'getRealPriceEth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Button' is defined but never used.","'player' is assigned a value but never used.","no-const-assign","'countDaysCurrent' is constant.","const","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","'ExchangeCard' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchApi' and 'setEstado'. Either include them or remove the dependency array.","ArrayExpression",["480"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setLogued' and 'setUser'. Either include them or remove the dependency array.",["481"],"'PLink' is defined but never used.","'ButtonLog' is defined but never used.","'useContext' is defined but never used.","'ExitToAppIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Web3' is defined but never used.","'UserProvider' is defined but never used.","'useUser' is defined but never used.","'LoginContext' is defined but never used.","'web3Loading' is assigned a value but never used.","'disconnect' is assigned a value but never used.","'disconnectWallet' is defined but never used.","'Tooltip' is defined but never used.","'listPlayerLastSeasons' is defined but never used.","'getUserLogued' is defined but never used.","'watch' is defined but never used.","'IconButton' is defined but never used.","'ReplayIcon' is defined but never used.","'setUser' is assigned a value but never used.","'setLogued' is assigned a value but never used.","'PlayButton' is defined but never used.","'MoreButton' is defined but never used.","'Alert' is defined but never used.","'BarContextProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'isFull'. Either include it or remove the dependency array.",["482"],"'getReward' is defined but never used.","'setReward' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listPlayersTotal.length'. Either include it or remove the dependency array.",["483"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'List' is defined but never used.","'player' is defined but never used.","'AlertPop' is defined but never used.","React Hook useEffect has missing dependencies: 'setIsFull' and 'user.player'. Either include them or remove the dependency array.",["484"],"'cost' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'SmsOutlined' is defined but never used.","'setEnd' is assigned a value but never used.","'setTimeGame' is assigned a value but never used.","'getDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aux', 'end', 'getWaitPorcent', 'isLast', 'props.index', 'props.player', 'setLastUser', and 'timeGame'. Either include them or remove the dependency array. You can also do a functional update 'setAux(a => ...)' if you only need 'aux' in the 'setAux' call.",["485"],"'Grid' is defined but never used.","'montado' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aux', 'end', 'getWaitPorcent', 'isLast', 'props.index', and 'timeGame'. Either include them or remove the dependency array. You can also do a functional update 'setAux(a => ...)' if you only need 'aux' in the 'setAux' call.",["486"],"no-global-assign","no-unsafe-negation",{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},"Update the dependencies array to be: [fetchApi, newGame, setEstado]",{"range":"501","text":"502"},"Update the dependencies array to be: [setLogued, setUser]",{"range":"503","text":"504"},"Update the dependencies array to be: [isFull]",{"range":"505","text":"506"},"Update the dependencies array to be: [listPlayersTotal.length, scrollType]",{"range":"507","text":"508"},"Update the dependencies array to be: [isFull, lastUser, setIsFull, user.player]",{"range":"509","text":"510"},"Update the dependencies array to be: [aux, end, esperar, getWaitPorcent, isLast, props.index, props.player, setLastUser, timeGame, value]",{"range":"511","text":"512"},"Update the dependencies array to be: [aux, end, esperar, getWaitPorcent, isLast, props.index, timeGame, value]",{"range":"513","text":"514"},[820,829],"[fetchApi, newGame, setEstado]",[776,778],"[setLogued, setUser]",[1019,1021],"[isFull]",[2659,2671],"[listPlayersTotal.length, scrollType]",[489,506],"[isFull, lastUser, setIsFull, user.player]",[2336,2352],"[aux, end, esperar, getWaitPorcent, isLast, props.index, props.player, setLastUser, timeGame, value]",[3746,3762],"[aux, end, esperar, getWaitPorcent, isLast, props.index, timeGame, value]"]