[{"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\index.js":"1","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\reportWebVitals.js":"2","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\theme.js":"3","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\App.js":"4","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Landing.js":"5","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\BarContext.js":"6","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\LoginContext.js":"7","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Game.js":"8","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\ListContext.js":"9","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Game2.js":"10","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\globalStyles.js":"11","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\server.js":"12","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\abiTG.js":"13","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\parameters.js":"14","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\abiApp.js":"15","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Navegation.js":"16","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useList.js":"17","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Work\\Work.js":"18","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Navbar\\Navbar.js":"19","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Hero\\Hero.js":"20","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Header.js":"21","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Content\\Content.js":"22","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Header\\Header.js":"23","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ListPlayersTop.js":"24","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Content.js":"25","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Work\\Work.elements.js":"26","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Navbar\\Navbar.elements.js":"27","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Hero\\Hero.elements.js":"28","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Header.elements.js":"29","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ButtonLog.js":"30","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Header\\Header.elements.js":"31","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useLogin.js":"32","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ExchangeCard.js":"33","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Content\\Content.elements.js":"34","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformAddress.js":"35","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\SeasonContent\\SeasonContent.js":"36","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\GameCard.js":"37","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\CurrentGame\\CurrentGame.js":"38","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\models\\WalletModel.js":"39","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useFullBar.js":"40","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\userContext.js":"41","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonClaim\\ButtonClaim.js":"42","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonPlay\\ButtonPlay.js":"43","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\DetailsList.js":"44","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Alert\\Alert.js":"45","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\CurrentGame\\CurrentGame.elements.js":"46","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ListOfPlays\\ListOfPlays.js":"47","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ListOfPlayers.js":"48","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformSecondsToHuman.js":"49","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ListOfPlays\\ListOfPlays.elements.js":"50","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Alert\\Alert.elements.js":"51","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Loading.js":"52","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\AlertPop.js":"53","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ItemGame.js":"54","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ProgressBar\\ProgressBar.js":"55","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ProgressBar.js":"56","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ProgressBar\\ProgressBar.elements.js":"57","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\PopUp\\PopUp.js":"58","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonPlay\\ButtonPlay.elements.js":"59","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformSecondsToHumanMin.js":"60","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\TopPlayers\\TopPlayers.js":"61","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\SeasonContent\\SeasonContent.elements.js":"62","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\PopUp\\PopUp.elements.js":"63","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\reduceDecimal.js":"64"},{"size":692,"mtime":1624556496343,"results":"65","hashOfConfig":"66"},{"size":375,"mtime":1612203454271,"results":"67","hashOfConfig":"66"},{"size":344,"mtime":1612203454275,"results":"68","hashOfConfig":"66"},{"size":1864,"mtime":1624566278442,"results":"69","hashOfConfig":"66"},{"size":349,"mtime":1617758324547,"results":"70","hashOfConfig":"66"},{"size":451,"mtime":1620142138075,"results":"71","hashOfConfig":"66"},{"size":436,"mtime":1615841242347,"results":"72","hashOfConfig":"66"},{"size":5387,"mtime":1618276515533,"results":"73","hashOfConfig":"66"},{"size":361,"mtime":1615841242318,"results":"74","hashOfConfig":"66"},{"size":415,"mtime":1623803565868,"results":"75","hashOfConfig":"66"},{"size":1403,"mtime":1618400057572,"results":"76","hashOfConfig":"66"},{"size":19738,"mtime":1624725793452,"results":"77","hashOfConfig":"66"},{"size":6303,"mtime":1620269277316,"results":"78","hashOfConfig":"66"},{"size":437,"mtime":1624664453648,"results":"79","hashOfConfig":"66"},{"size":15189,"mtime":1620142428261,"results":"80","hashOfConfig":"66"},{"size":1613,"mtime":1617673019228,"results":"81","hashOfConfig":"66"},{"size":2582,"mtime":1618276515533,"results":"82","hashOfConfig":"66"},{"size":1121,"mtime":1618400057446,"results":"83","hashOfConfig":"66"},{"size":1990,"mtime":1618183991549,"results":"84","hashOfConfig":"66"},{"size":1080,"mtime":1617758324347,"results":"85","hashOfConfig":"66"},{"size":1386,"mtime":1624556840776,"results":"86","hashOfConfig":"66"},{"size":669,"mtime":1623803565487,"results":"87","hashOfConfig":"66"},{"size":3560,"mtime":1624557197903,"results":"88","hashOfConfig":"66"},{"size":4654,"mtime":1618276645427,"results":"89","hashOfConfig":"66"},{"size":422,"mtime":1612983645213,"results":"90","hashOfConfig":"66"},{"size":1944,"mtime":1618400057428,"results":"91","hashOfConfig":"66"},{"size":4137,"mtime":1618691303229,"results":"92","hashOfConfig":"66"},{"size":1854,"mtime":1618400057301,"results":"93","hashOfConfig":"66"},{"size":3356,"mtime":1618183991495,"results":"94","hashOfConfig":"66"},{"size":3995,"mtime":1618691302738,"results":"95","hashOfConfig":"66"},{"size":4227,"mtime":1620142137854,"results":"96","hashOfConfig":"66"},{"size":833,"mtime":1624497774153,"results":"97","hashOfConfig":"66"},{"size":1600,"mtime":1612203454266,"results":"98","hashOfConfig":"66"},{"size":971,"mtime":1618691302909,"results":"99","hashOfConfig":"66"},{"size":259,"mtime":1616612586694,"results":"100","hashOfConfig":"66"},{"size":3267,"mtime":1624556718908,"results":"101","hashOfConfig":"66"},{"size":5533,"mtime":1618276448795,"results":"102","hashOfConfig":"66"},{"size":3615,"mtime":1624556722077,"results":"103","hashOfConfig":"66"},{"size":3110,"mtime":1615841242411,"results":"104","hashOfConfig":"66"},{"size":758,"mtime":1623803565820,"results":"105","hashOfConfig":"66"},{"size":1268,"mtime":1615841242362,"results":"106","hashOfConfig":"66"},{"size":1304,"mtime":1623803565337,"results":"107","hashOfConfig":"66"},{"size":2089,"mtime":1624497773964,"results":"108","hashOfConfig":"66"},{"size":5702,"mtime":1618276448795,"results":"109","hashOfConfig":"66"},{"size":880,"mtime":1618691302812,"results":"110","hashOfConfig":"66"},{"size":3523,"mtime":1622498926191,"results":"111","hashOfConfig":"66"},{"size":2731,"mtime":1622842730303,"results":"112","hashOfConfig":"66"},{"size":2457,"mtime":1618400057552,"results":"113","hashOfConfig":"66"},{"size":621,"mtime":1617673019384,"results":"114","hashOfConfig":"66"},{"size":168,"mtime":1618691303049,"results":"115","hashOfConfig":"66"},{"size":1363,"mtime":1618691302800,"results":"116","hashOfConfig":"66"},{"size":476,"mtime":1616612586427,"results":"117","hashOfConfig":"66"},{"size":854,"mtime":1616612586247,"results":"118","hashOfConfig":"66"},{"size":1027,"mtime":1617673019076,"results":"119","hashOfConfig":"66"},{"size":5007,"mtime":1624497774097,"results":"120","hashOfConfig":"66"},{"size":6523,"mtime":1617673019250,"results":"121","hashOfConfig":"66"},{"size":1753,"mtime":1618691303105,"results":"122","hashOfConfig":"66"},{"size":1286,"mtime":1624725555813,"results":"123","hashOfConfig":"66"},{"size":771,"mtime":1622498925718,"results":"124","hashOfConfig":"66"},{"size":632,"mtime":1623803566144,"results":"125","hashOfConfig":"66"},{"size":6548,"mtime":1623803565787,"results":"126","hashOfConfig":"66"},{"size":5911,"mtime":1622498927608,"results":"127","hashOfConfig":"66"},{"size":1422,"mtime":1622498926917,"results":"128","hashOfConfig":"66"},{"size":123,"mtime":1623803566080,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1dzu88",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"132"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"132"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"132"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"132"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"132"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"132"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"132"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"132"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\index.js",[],["293","294"],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\reportWebVitals.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\theme.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\App.js",["295","296"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route } from \"wouter\";\r\nimport Game from \"./pages/Game\";\r\nimport { LoginContextProvider } from \"./context/LoginContext\";\r\nimport { ListContextProvider } from \"./context/ListContext\";\r\nimport { BarContextProvider } from './context/BarContext'\r\nimport * as We from \"./services/server\";\r\nimport Landing from \"./pages/Landing\";\r\nimport GlobalStyle from \"./globalStyles\";\r\nimport Game2 from \"./pages/Game2\";\r\nimport Alert from \"./components/Game/Alert/Alert\";\r\n\r\nconst ID_NET = 3\r\n\r\nconst App = () => {\r\n  const [load, setLoad] = useState(false)\r\n  const [openAlert, setOpenAlert] = useState(false)\r\n  useEffect(\r\n    () => {\r\n      if (!load) {\r\n        We.getIdNetwork().then(\r\n          res => {\r\n            console.log('aqui en el inicio');\r\n            console.log(res);\r\n            if (res == ID_NET) {\r\n              setLoad(true)\r\n            }else{\r\n              setOpenAlert(true)\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }, [load]\r\n  )\r\n\r\n\r\n  We.getWinnersSeason();\r\n\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Alert msg=\"Network error, you must select the  Polygon / MATIC network\" open={openAlert} type=\"error\" icon=\"error\"  />\r\n      <Route exact path=\"/\">\r\n        <LoginContextProvider>\r\n          <ListContextProvider>\r\n            <BarContextProvider>\r\n              <Game2 />\r\n            </BarContextProvider>\r\n          </ListContextProvider>\r\n        </LoginContextProvider>\r\n      </Route>\r\n      <Route path=\"/home\">\r\n        <Landing />\r\n        {/* <h1>Hola esta funcionando</h1> */}\r\n      </Route>\r\n      <Route path=\"/game2\">\r\n        <LoginContextProvider>\r\n          <ListContextProvider>\r\n            <Game />\r\n          </ListContextProvider>\r\n        </LoginContextProvider>\r\n      </Route>\r\n    </>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default App;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Landing.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\BarContext.js",["297"],"import React, {useEffect, useState} from 'react';\r\n\r\nconst BarContext = React.createContext({})\r\n\r\nexport const BarContextProvider = ({children}) => {\r\n    \r\n    const [isFull , setIsFull] = useState(false)\r\n    const [lastUser,setLastUser] = useState(null)\r\n\r\n    return (\r\n        <BarContext.Provider value={{isFull, setIsFull, lastUser, setLastUser}}>\r\n            {children}\r\n        </BarContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BarContext;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\LoginContext.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Game.js",["298","299","300","301"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Content from '../components/Content'\r\nimport Navegation from '../components/Navegation';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Box, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { getCostPlay, getCountDaysCurrentOfSeasons, getReward } from '../services/server';\r\nimport * as Parameters from \"../services/parameters.js\";\r\nimport { miContrato } from '../services/server'\r\nimport { useList } from '../hooks/useList';\r\nimport ListPlayersTop from '../components/ListPlayersTop';\r\n// aplicacion para la conexión con la blockchain \r\nconst Web3 = require(\"web3\");\r\n//prueba conectar el proveedor de metamask primero sino usa la varabile en Parameters \"provider\"\r\nlet web3 = new Web3(Web3.givenProvider || Parameters.provider);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: 5,\r\n    },\r\n    top: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: 30\r\n        },\r\n    }\r\n}))\r\n\r\nconst Game = () => {\r\n\r\n    const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\r\n    const [reward, setReward] = useState({\r\n        recompensa: null,\r\n        nextRecompensa: null\r\n    })\r\n    // const {reward, daysCurrentSeassons} = useList()\r\n\r\n    useEffect(\r\n        () => {\r\n            getDays()\r\n            getRew()\r\n            miContrato.events.Game(\r\n                {\r\n                    // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n                    fromBlock: 'latest'\r\n                }\r\n                , (error, event) => {\r\n                    console.log('Evento activado2');\r\n                    getDays()\r\n                    getRew()\r\n                }\r\n            )\r\n        }, [] // las llaves sirven para ejecutar solamente una vez el useEffect de esta manera copiamos el comportamiento de componentDidMount\r\n    )\r\n\r\n    const getDays = () => {\r\n        getCountDaysCurrentOfSeasons().then(\r\n            (result) => {\r\n                console.log(result)\r\n                setDaysCurrentSeassons(result)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    const getRew = () => {\r\n        getReward().then(\r\n            (result) => {\r\n                console.log(result.recompensa)\r\n                setReward({ recompensa: result.recompensa, nextRecompensa: result.nextRecompensa })\r\n\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const getRealPriceEth = (wei) => {\r\n        if (wei == 0 || wei == null) {\r\n            return 0\r\n        } else {\r\n            return web3.utils.fromWei(wei, 'ether')\r\n        }\r\n    }\r\n\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid container direction=\"column\"  >\r\n            <Grid item >\r\n                <Header />\r\n            </Grid>\r\n            <Box mt={1} >\r\n                <Grid item container>\r\n                    <Grid item xs={false} sm={1} ></Grid>\r\n                    <Grid item xs={12} sm={8}>\r\n                        <Navegation />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Grid item container justify=\"center\" spacing={0} lg={12} >\r\n                <Grid item className={classes.paper}>\r\n                    <Alert severity=\"success\" size=\"small\">\r\n                        <AlertTitle>Prize Pool</AlertTitle>\r\n                        <strong>$ {getRealPriceEth(reward.recompensa)}</strong>\r\n                    </Alert>\r\n                </Grid>\r\n                <Grid item className={classes.paper}>\r\n                    <Alert severity=\"info\" size=\"small\">\r\n                        <AlertTitle>Next Prize</AlertTitle>\r\n                        <strong>$ {getRealPriceEth(reward.nextRecompensa)}</strong>\r\n                    </Alert>\r\n                </Grid>\r\n                <Grid item className={classes.paper}>\r\n                    <Alert severity=\"error\" size=\"small\">\r\n                        <AlertTitle>Days Season</AlertTitle>\r\n              Days current of season <strong>{daysCurrentSeassons}</strong>\r\n                    </Alert>\r\n                </Grid>\r\n            </Grid>\r\n            <Box mt={2} mb={2}>\r\n                <Grid item container justify=\"center\">\r\n                    <Grid item sm={8}>\r\n                        <Content getRealPriceEth={getRealPriceEth} />\r\n                    </Grid>\r\n                    <Grid item md={4} >\r\n                        <Box ml={2} mr={2} className={classes.top}>\r\n                            <ListPlayersTop />\r\n                        </Box>\r\n                    </Grid>\r\n                    {/* <Grid item container direction=\"column\" sm={2} justify=\"space-evenly\" alignItems=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Reclamar Premio\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Reclamar Token\r\n              </Button>\r\n              </Grid>\r\n            </Grid> */}\r\n                </Grid>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Game;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\ListContext.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\pages\\Game2.js",["302"],"import React, {useEffect, useState} from \"react\";\r\nimport Header from \"../components/Game/Header/Header\";\r\nimport Content from \"../components/Game/Content/Content\";\r\n\r\nconst Game2 = () => {\r\n  const [reload, setReload] = useState(true);\r\n  return (\r\n    <>\r\n      <Header reload={reload} setReload={setReload} />\r\n      <Content reload={reload} setReload={setReload} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game2;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\globalStyles.js",["303"],"import styled, { createGlobalStyle, keyframes } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    \r\n}\r\n\r\nbody{\r\n    font-family: 'Montserrat', sans-serif;\r\n    background: #F8FAFF;\r\n}\r\n\r\n.text-blue{\r\n  color:rgba(37, 99, 235,1);\r\n}\r\n.shadow-sm{\r\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n}\r\n.shadow-md{\r\n  box-shadow: 0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);\r\n}\r\n\r\n/* .bg-slightpurple{\r\n  background: #6366F1;\r\n} */\r\n.bg-slightpurple{\r\n  background-image: linear-gradient( 135.9deg,  rgba(109,25,252,1) 16.4%, rgba(125,31,165,1) 56.1% );\r\n}\r\n\r\n.bg-deepblue{\r\n  background-image: linear-gradient( 109.6deg,  rgba(255,207,84,1) 11.2%, rgba(255,158,27,1) 91.1% );\r\n}\r\n.bg-blue{\r\n  background: #1D4ED8;\r\n}\r\n.bg-lightgreen{\r\n  background-image: linear-gradient( 102.1deg,  rgba(96,221,142,1) 8.7%, rgba(24,138,141,1) 88.1% );\r\n}\r\n.bg-salmon{\r\n  /* background: #FFE2C2; */\r\n  background: linear-gradient(315deg ,#f6a99b, #FFE2C2);\r\n}\r\n.color-dark{\r\n  color: #354D5C !important;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1366px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: 50px;\r\n  padding-left: 50px;\r\n\r\n  @media screen and (max-width: 991px) {\r\n    padding-right: 30px;\r\n    padding-left: 30px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\server.js",["304","305","306","307","308","309","310","311","312","313","314","315"],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\abiTG.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\parameters.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\services\\abiApp.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Navegation.js",["316"],"import React from 'react';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SportsEsports from '@material-ui/icons/SportsEsports';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'wouter'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function Navegation() {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" >\r\n      <Link to=\"/\">\r\n        <StyledBreadcrumb\r\n          component=\"a\"\r\n          href=\"/\"\r\n          label=\"Home\"\r\n          icon={<HomeIcon fontSize=\"small\" />}\r\n          onClick={handleClick}\r\n        />\r\n      </Link>\r\n      <StyledBreadcrumb \r\n        component=\"a\" \r\n        href=\"#\" \r\n        label=\"Game\" \r\n        onClick={handleClick} \r\n        icon={<SportsEsports fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useList.js",["317","318"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport ListContext from '../context/ListContext';\r\nimport { listPlayerLastSeasons, getCountDaysCurrentOfSeasons, getReward } from '../services/server';\r\n\r\nexport const useList = () => {\r\n    const { list, setList } = useContext(ListContext)\r\n    const [newGame, setNewGame] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\r\n    const [reward, setReward] = useState({\r\n        recompensa: null,\r\n        nextRecompensa: null\r\n    })\r\n    useEffect(\r\n        () => {\r\n            console.log(\"el pepe\");\r\n            if(newGame == null){\r\n                fetchApi()\r\n            }else {\r\n                setEstado()\r\n            }\r\n            getDaysOfSeason()\r\n            getRew()\r\n\r\n        }, [newGame]\r\n    )\r\n\r\n    const getDaysOfSeason = () => {\r\n        getCountDaysCurrentOfSeasons().then(\r\n            (result) => {\r\n                console.log(result)\r\n                setDaysCurrentSeassons(result)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    const getRew = () => {\r\n        getReward().then(\r\n            (result) => {\r\n                console.log('entre a reward');\r\n                console.log(result.recompensa)\r\n                setReward({ recompensa: result.recompensa, nextRecompensa: result.nextRecompensa })\r\n\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    const setEstado = () => {\r\n        setList([newGame, ...list])\r\n    }\r\n\r\n    async function fetchApi() {\r\n        await listPlayerLastSeasons(9)\r\n            .then(\r\n                (result) => {\r\n                    var array = result.map(\r\n                        (r) => {\r\n                            return {\r\n                                ...r,\r\n                                player: r.player,\r\n                                timeGame: r.timeGame,\r\n                                timestamp: r.timestamp,\r\n                                wait: r.wait,\r\n                            }\r\n                        }\r\n                    )\r\n                    console.log(array);\r\n                    setList(array);\r\n                    setLoad(false);\r\n\r\n                }\r\n            ).catch(\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n    return { list, setNewGame, load, daysCurrentSeassons, reward }\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Work\\Work.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Navbar\\Navbar.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Hero\\Hero.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Header.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Content\\Content.js",["319","320"],"import React, {useEffect, useState} from \"react\";\r\nimport CurrentGame from \"../CurrentGame/CurrentGame\";\r\nimport SeasonContent from \"../SeasonContent/SeasonContent\";\r\nimport {\r\n  ContentBody,\r\n  ContentContainer,\r\n  GameRow,\r\n  SeasonRow,\r\n} from \"./Content.elements\";\r\n\r\nfunction Content({reload, setReload}) {\r\n\r\n  return (\r\n    <ContentBody>\r\n      <ContentContainer>\r\n        <GameRow>\r\n          <CurrentGame reload={reload} setReload={setReload} />\r\n        </GameRow>\r\n        <SeasonRow>\r\n          <SeasonContent reload={reload} setReload={setReload} />\r\n        </SeasonRow>\r\n      </ContentContainer>\r\n    </ContentBody>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Header\\Header.js",["321"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavBarContainer,\r\n  NavLogo,\r\n  NavImg,\r\n  NavMenu,\r\n  NavItem,\r\n  NavCoin,\r\n  DropDownMenu,\r\n  NavDropDown,\r\n  DropDownOption,\r\n} from \"./Header.elements\";\r\nimport logoImg from \"../../../images/runcoin-logo-img.svg\";\r\nimport ButtonLog from \"../../ButtonLog\";\r\nimport { useLogin } from \"../../../hooks/useLogin\";\r\nimport { addToken, claimToken, countToken } from \"../../../services/server\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// import Alert from \"../Alert/Alert\";\r\n\r\nconst Header = ({ reload, setReload }) => {\r\n  const [click, setClick] = useState(false);\r\n  // const [open, setOpen] = useState(false);\r\n  const [countRun, setCountRun] = useState(0);\r\n  const { logued } = useLogin();\r\n  const ref = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    setClick(!click)\r\n  };\r\n  const handleClickHome = () => {\r\n    window.open(\"https://runcoin.page/\", '_blank');\r\n  }\r\n\r\n  function handleClickOutside(event) {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setClick(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n    countToken().then(\r\n      (res) => {\r\n        setCountRun(res)\r\n      }\r\n    )\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, true);\r\n    };\r\n  });\r\n\r\n  const handleClaim = () => {\r\n    console.log('Claim');\r\n    claimToken().then(\r\n      (res) => {\r\n        if (res) {\r\n          console.log(\"reclamado\");\r\n          countToken().then(\r\n            (res) => {\r\n              setCountRun(res)\r\n            }\r\n          )\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleCheck = (event) => {\r\n    setReload(event.target.checked)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    addToken()\r\n  }\r\n\r\n\r\n  return (\r\n    <Nav className=\"shadow-sm\">\r\n      {/* <Alert icon=\"success\" msg=\"Token added\" open={open} type=\"success\" /> */}\r\n      <NavBarContainer>\r\n        <NavLogo onClick={handleClickHome} >\r\n          <NavImg  src={logoImg} alt=\"logo-img\" ></NavImg>RUNCOIN\r\n        </NavLogo>\r\n        <NavMenu>\r\n          <FormControlLabel\r\n            value=\"end\"\r\n            control={<Checkbox\r\n              checked={reload}\r\n              onChange={handleCheck}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />}\r\n            label={\r\n              <Tooltip title=\"Reload Every Minute\">\r\n                <h6 style={{ color: 'white', fontFamily: 'Lexend Mega', fontWeight: 'lighter'  }}>Reload</h6>\r\n              </Tooltip>\r\n            }\r\n            labelPlacement=\"end\"\r\n          />\r\n\r\n          <NavCoin >\r\n            <a style={{ color: 'white', textDecoration: 'none' }} target=\"_blank\" href=\"https://pancakeswap.finance/\">\r\n              Buy\r\n            </a>\r\n          </NavCoin>\r\n          {logued ? (\r\n            <DropDownMenu ref={ref}>\r\n              <NavCoin onClick={handleClick}>{countRun} RUN</NavCoin>\r\n              <NavDropDown click={click}>\r\n                <DropDownOption onClick={handleClaim}>Claim Run</DropDownOption>\r\n                <DropDownOption onClick={handleAdd}>Add to Metamask</DropDownOption>\r\n              </NavDropDown>\r\n            </DropDownMenu>\r\n          ) : null}\r\n          <NavItem>\r\n            <ButtonLog />\r\n          </NavItem>\r\n        </NavMenu>\r\n      </NavBarContainer>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ListPlayersTop.js",["322","323"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { transformAddress } from '../utils/transformAddress';\r\nimport { Card, CardContent, CardHeader, Typography, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { getSeasonCurrent, getWinnersSeason } from '../services/server';\r\nimport { useLogin } from '../hooks/useLogin';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            minWidth: 150,\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            minWidth: 150,\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}));\r\n\r\nconst ListPlayersTop = () => {\r\n    const classes = useStyles();\r\n    const [season, setSeason] = useState(0);\r\n    const [cantSeason, setCantSeason] = useState(0);\r\n\r\n    const handleChange = (event) => {\r\n        setSeason(event.target.value);\r\n    };\r\n\r\n    const { user } = useLogin()\r\n    const [top, setTop] = useState([])\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            if (user.player != \"\") {\r\n                let res = getWinnersSeason()\r\n                    .then(\r\n                        (res) => setTop(res)\r\n                    )\r\n                    .catch(\r\n                        (error) => console.log(error)\r\n                    )\r\n            }\r\n            getSeasonCurrent()\r\n                .then(\r\n                    (cant) => {\r\n                        setCantSeason(cant)\r\n                    }\r\n                )\r\n                .catch(\r\n                    (error) => console.log(error)\r\n                )\r\n        }, [user]\r\n    )\r\n\r\n    const listMenu = () => {\r\n        let menuItems = []\r\n        menuItems.push(<MenuItem value=\"\"><em>None</em></MenuItem>)\r\n        for (let index = 0; index <= cantSeason; index++) {\r\n            menuItems.push(<MenuItem value={index} key={index}>{index}</MenuItem>)\r\n        }\r\n        return menuItems\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title={<Typography variant=\"h5\">Top</Typography>} />\r\n            <CardContent>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Season</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={season}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            listMenu()\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <IconButton aria-label=\"delete\" style={{ marginTop: '12px' }}>\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>N</TableCell>\r\n                                <TableCell>Player</TableCell>\r\n                                <TableCell align=\"right\">Amount of plays</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {top.map((row, index) => (\r\n                                <TableRow key={row.player+index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{transformAddress(row.address)}</TableCell>\r\n                                    <TableCell align=\"right\">{row.cantGame}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ListPlayersTop;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Content.js",["324"],"import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport ExchangeCard from './ExchangeCard'\r\nimport GameCard from './GameCard';\r\n\r\n\r\nconst Content = (props) => {\r\n    return ( \r\n        <Grid container justify=\"center\">\r\n            <Grid item>\r\n                <GameCard getRealPriceEth={props.getRealPriceEth} ></GameCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n \r\nexport default Content;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Work\\Work.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Navbar\\Navbar.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Landing\\Hero\\Hero.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Header.elements.js",["325","326"],"import styled from \"styled-components\";\r\nimport { Container } from \"../globalStyles\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Link as PLink } from \"wouter\";\r\nimport ButtonLog from './ButtonLog';\r\n\r\n//#DEDEE0 blanco\r\n//#1F1C2A\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  // background: #1F1C2A;\r\n  background: #242936;\r\n  height: 60px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 3;\r\n`;\r\n\r\nexport const NavBarContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  align-items: center;\r\n\r\n  ${Container}\r\n`;\r\n\r\nexport const NavLogo = styled(Link)`\r\n  justify-self: flex-start;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #DEDEE0;\r\n  font-family: \"Lexend Mega\", sans-serif;\r\n  font-size: 1.25rem;\r\n  line-height: 1.75rem;\r\n`;\r\n\r\nexport const NavImg = styled.img`\r\n  width: 2.5rem;\r\n`;\r\n\r\nexport const MobileIcon = styled.div`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: block;\r\n\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Hamburger = styled.div`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: flex;\r\n    position: relative;\r\n    width: 1.5em;\r\n    height: 0.2em;\r\n    background: #354d5c;\r\n\r\n    &:before,\r\n    &:after {\r\n      display: block;\r\n      position: absolute;\r\n      height: 100%;\r\n      transition: all 0.4s ease-out;\r\n      content: \"\";\r\n      background: #354d5c;\r\n    }\r\n    &:before {\r\n      top: 8px;\r\n      width: 1em;\r\n    }\r\n\r\n    &:after {\r\n      top: -8px;\r\n      width: 2em;\r\n    }\r\n    &.opened {\r\n      background: transparent;\r\n    }\r\n    &.opened:before {\r\n      width: 1.5em;\r\n      transform: rotate(-45deg);\r\n    }\r\n    &.opened:after {\r\n      width: 1.5em;\r\n      transform: rotate(45deg);\r\n    }\r\n    &.opened:after,\r\n    &.opened:before {\r\n      top: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 90vh;\r\n    position: absolute;\r\n    top: 80px;\r\n    left: ${({ click }) => (click ? 0 : \"-100%\")};\r\n    opacity: 1;\r\n    transition: all 0.5s ease;\r\n    background: #f8faff;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    /* text-align: center; */\r\n    top: 60px;\r\n  }\r\n`;\r\nexport const NavItem = styled.li`\r\n  margin-right: 10px;\r\n  transition: all 0.5s ease;\r\n  border: 2px solid transparent;\r\n  border-radius: 0.75rem;\r\n  height: 40px;\r\n\r\n  &:hover {\r\n    border: 2px solid #005bea;\r\n  }\r\n\r\n  @media screen and (max-width: 960px) {\r\n    height: 80px;\r\n    transition: none;\r\n    margin-right: 0;\r\n    margin-bottom: 20px;\r\n    /* border-radius: 0; */\r\n    width: 95%;\r\n    &:hover {\r\n      background: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled.a`\r\n  color: #fff;\r\n  background-image: linear-gradient(to right, #005bea, #00c6fb);\r\n  border-radius: 0.75rem;\r\n  display: flex;\r\n  text-decoration: none;\r\n  align-items: center;\r\n  padding: 0.5rem 1rem;\r\n  height: 100%;\r\n  font-weight: 500;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    text-align: center;\r\n    padding: 2rem;\r\n    width: 100%;\r\n    display: table;\r\n  }\r\n`;\r\n\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ButtonLog.js",["327","328","329","330","331","332","333","334","335","336","337","338"],"import React, { useEffect, useState, useContext } from \"react\";\r\n// import Button from '@material-ui/core/Button';\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport Web3 from \"web3\";\r\nimport { UserProvider, useUser } from \"../context/userContext\";\r\nimport LoginContext from \"../context/LoginContext\";\r\nimport WalletModel from \"../models/WalletModel\";\r\nimport { useLogin } from \"../hooks/useLogin\";\r\nimport { transformAddress } from \"../utils/transformAddress\";\r\nimport styled from \"styled-components\";\r\n\r\n// const web3 = new Web3(window.web3.currentProvider);\r\n\r\n// export default () => (\r\n//     <UserProvider>\r\n//         <ButtonLog>\r\n//         </ButtonLog>\r\n//     </UserProvider>\r\n// )\r\n\r\nconst ButtonLog = () => {\r\n  const Button = styled.a`\r\n    color: #dedee0;\r\n    background: transparent;\r\n    border: 0;\r\n    display: flex;\r\n    text-decoration: none;\r\n    align-items: center;\r\n    padding: 0.5rem 1rem;\r\n    height: 100%;\r\n    font-weight: 500;\r\n\r\n    @media screen and (max-width: 500px) {\r\n      text-align: center;\r\n      padding: 2rem;\r\n      width: 100%;\r\n      display: table;\r\n    }\r\n  `;\r\n\r\n  // const {user, logued, setLogued} = useUser()\r\n  const { user, setUser, logued, setLogued } = useLogin();\r\n  const { web3Loading, getweb3, disconnect } = WalletModel();\r\n  const [myWeb3, setMyWeb3] = useState(null);\r\n\r\n  // useEffect(\r\n  //     () => {\r\n  //         if(!logued){\r\n  //             connetWallet().then(\r\n  //                 (res) => {\r\n  //                     setLogued(true)\r\n  //                     setUser({\r\n  //                         player: res\r\n  //                     })\r\n  //                     console.log(user);\r\n  //                 }\r\n  //             )\r\n  //         }\r\n  //     }\r\n  // )\r\n\r\n  // async function connetWallet() { // funcion para loguearme a metamask // vieja\r\n\r\n  //     if (typeof window.ethereum !== 'undefined') {\r\n  //         window.web3 = new Web3(window.ethereum);\r\n  //         try {\r\n  //             // Request account access if needed\r\n  //             const res = await window.ethereum.enable();\r\n  //             console.log(res[0]);\r\n  //             setLogued(true)\r\n  //             setUser({\r\n  //                 player: res[0]\r\n  //             })\r\n\r\n  //         } catch (error) {\r\n  //             // User denied account access...\r\n  //             console.log('connect error!')\r\n  //         }\r\n  //     }\r\n  // }\r\n  // async function disconnectWallet() { // funcion para desconectarme de metamask // viejo\r\n\r\n  //     if (typeof window.ethereum !== 'undefined') {\r\n\r\n  //         try {\r\n  //             // Request account access if needed\r\n  //             await web3.clearCachedProvider();\r\n  //             setLogued(false)\r\n\r\n  //         } catch (error) {\r\n  //             console.log(error)\r\n  //             console.log('disconnect error')\r\n  //             // User denied account access...\r\n  //         }\r\n  //     }\r\n  // }\r\n\r\n  // Implementation with web3Modal\r\n\r\n  async function connectWallet() {\r\n    await getweb3().then((response) => {\r\n      setMyWeb3(response);\r\n      setLogued(true);\r\n      response.web3.eth.getAccounts().then((result) => {\r\n        setUser({\r\n          player: result[0],\r\n        });\r\n        transformAddress(result[0]);\r\n      });\r\n    });\r\n  }\r\n\r\n  async function disconnectWallet() {\r\n    const res = await myWeb3.web3.setProvider(null);\r\n    if (myWeb3.provider.close) {\r\n      await myWeb3.provider.close();\r\n      await myWeb3.web3Modal.clearCachedProvider();\r\n      myWeb3.provider = null;\r\n    }\r\n    // await disconnect().then(res => console.log(res)).catch(er => console.log(er))\r\n  }\r\n\r\n  if (!logued) {\r\n    return (\r\n      <>\r\n        <Button onClick={connectWallet}>Connect to a Wallet</Button>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Button>{transformAddress(user.player)}</Button>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ButtonLog;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Header\\Header.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useLogin.js",["339","340","341"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport LoginContext from '../context/LoginContext'\r\nimport { getUserLogued } from '../services/server';\r\n\r\nexport const useLogin = () => {\r\n\r\n    const { user, setUser, logued, setLogued } = useContext(LoginContext)\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log('render');\r\n            getUserLogued().then(\r\n                (res) => {\r\n                    if(res != null){\r\n                        setLogued(true)\r\n                        setUser({\r\n                            player: res\r\n                        })\r\n                    }\r\n                }\r\n            ).catch(\r\n                (error) => {\r\n                    console.log('error en use hook', error);\r\n                }\r\n            )\r\n\r\n        }, []\r\n    )\r\n\r\n    return { user, logued, setLogued, setUser }\r\n}\r\n\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ExchangeCard.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Content\\Content.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformAddress.js",["342"],"export function transformAddress (address){\r\n    if(address == \"\" || address == null){\r\n        return address\r\n    }\r\n    let first = address.slice(0,4)\r\n    let last = address.slice(38,42)\r\n    let newAddress = first + \"...\" + last\r\n    return newAddress\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\SeasonContent\\SeasonContent.js",["343","344","345"],"import React, { useEffect, useState } from \"react\";\r\nimport TopPlayers from \"../TopPlayers/TopPlayers\";\r\nimport {\r\n  CardRow,\r\n  SeasonCard,\r\n  PoolHeader,\r\n  EndHeader,\r\n  Subtitle,\r\n} from \"./SeasonContent.elements\";\r\nimport { getPoolSeason, miContrato } from '../../../services/server'\r\nimport { getCountDaysCurrentOfSeasons, getReward, getPriceInEth } from \"../../../services/server\";\r\nimport { transformSecondsToHuman } from \"../../../utils/transformSecondsToHuman\";\r\nimport { transformSecondsToHumanMin } from \"../../../utils/transformSecondsToHumanMin\";\r\nimport { reduceDecimal } from \"../../../utils/reduceDecimal\";\r\n\r\n\r\nfunction SeasonContent({ reload, setReload }) {\r\n  const [daysCurrentSeassons, setDaysCurrentSeassons] = useState(0)\r\n  const [rewardInEth, setRewardInEth] = useState(0)\r\n  const [showTimeShort, setShowTimeShort] = useState(false)\r\n  const [seconds, setSeconds] = useState(0)\r\n  const [stopReload, setStopReload] = useState(false);\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      if (reload) {\r\n        getDays()\r\n        getRew()\r\n        const timerWaitSeason = setTimeout(() => {\r\n          setStopReload(!stopReload)\r\n        }, 60000)\r\n\r\n        return () => {\r\n          clearTimeout(timerWaitSeason)\r\n        }\r\n\r\n      }\r\n    }, [reload, stopReload]\r\n  )\r\n\r\n  useEffect(\r\n    () => {\r\n      miContrato.events.Game(\r\n        {\r\n          // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n          fromBlock: 'latest'\r\n        }\r\n        , (error, event) => {\r\n          console.log('Evento activado2');\r\n          getDays()\r\n          getRew()\r\n        }\r\n      )\r\n    }, [] // las llaves sirven para ejecutar solamente una vez el useEffect de esta manera copiamos el comportamiento de componentDidMount\r\n  )\r\n\r\n  useEffect(\r\n    () => {\r\n      if (seconds > 0) {\r\n        const timerSeason = setTimeout(() => {\r\n          setSeconds(seconds - 1)\r\n        }, 1000)\r\n        return () => {\r\n          clearTimeout(timerSeason);\r\n        };\r\n      }\r\n    }, [seconds]\r\n  )\r\n\r\n  const getDays = () => {\r\n    getCountDaysCurrentOfSeasons().then(\r\n      (result) => {\r\n        if (result.countDays != 0) {\r\n          setDaysCurrentSeassons(result.countDays + \" days\")\r\n        } else {\r\n          setShowTimeShort(true)\r\n          setSeconds(result.time)\r\n        }\r\n      }\r\n    ).catch(\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  const getRew = () => {\r\n    getPoolSeason().then(\r\n      (result) => {\r\n        getPriceInEth(result).then(res => setRewardInEth(res))\r\n\r\n      }\r\n    ).catch(\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CardRow>\r\n        <SeasonCard>\r\n\r\n          <PoolHeader>≈ {reduceDecimal(rewardInEth, 2)} MATIC</PoolHeader>\r\n          <Subtitle>SEASON POOL</Subtitle>\r\n        </SeasonCard>\r\n        <SeasonCard>\r\n          {\r\n            !showTimeShort\r\n              ? <EndHeader>{daysCurrentSeassons}</EndHeader>\r\n              : <EndHeader>{transformSecondsToHumanMin(seconds)}</EndHeader>\r\n          }\r\n          <Subtitle>END OF SEASON</Subtitle>\r\n        </SeasonCard>\r\n      </CardRow>\r\n      <TopPlayers reload={reload} setReload={setReload} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeasonContent;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\GameCard.js",["346","347","348","349","350","351","352","353","354","355"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Tooltip } from '@material-ui/core';\r\nimport AlertPop from './AlertPop'\r\nimport { Eth } from 'react-cryptocoins';\r\nimport { play, listPlayerLastSeasons, getUserLogued, watch, getCostPlay } from '../services/server';\r\nimport { UserProvider, useUser } from '../context/userContext'\r\nimport LoginContext from '../context/LoginContext'\r\nimport ListOfPlayers from './ListOfPlayers';\r\nimport DetailsList from './DetailsList';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\n// export default ({ getRealPriceEth }) => (\r\n//   <UserProvider>\r\n//     <GameCard getRealPriceEth={getRealPriceEth}>\r\n//     </GameCard>\r\n//   </UserProvider>\r\n// )\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      minWidth: 320,\r\n      minHeight: 200,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: 400,\r\n      minHeight: 200,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      minWidth: 800,\r\n      minHeight: 400,\r\n    },\r\n    background: 'rgba(0, 0, 0, 0.12)',\r\n  },\r\n  buttonCard: {\r\n    justifyContent: 'center'\r\n  },\r\n  margenButton: {\r\n    marginTop: '10px'\r\n  },\r\n  hideLastBorder: {\r\n    '&:last-child td, &:last-child th': {\r\n      border: 0,\r\n    },\r\n  },\r\n  info: {\r\n    padding: 5,\r\n  },\r\n  game: {\r\n    padding: 5,\r\n    marginLeft: 20,\r\n  }\r\n}));\r\n\r\nconst GameCard = ({ getRealPriceEth }) => {\r\n  const { user, setUser, logued, setLogued } = useContext(LoginContext)\r\n  // const { user, logued } = useUser()\r\n  const classes = useStyles()\r\n  const [cost, setCost] = useState(0)\r\n  const [openPop, setOpenPop] = useState(false)\r\n  const [openPopInfo, setOpenPopInfo] = useState(false)\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClosePop = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenPop(false);\r\n  };\r\n\r\n  const handleClosePopInfo = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenPopInfo(false);\r\n  };\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    console.log('clickj')\r\n    setOpen(true)\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(listPlayers)\r\n  // }, [])\r\n  useEffect(\r\n    () => {\r\n      console.log(\"render game card\");\r\n      getCostPlay().then(\r\n        (res) => {\r\n          if (res !== false) {\r\n            setCost(res);\r\n          }\r\n        }\r\n      )\r\n\r\n\r\n    }, [logued, user]\r\n  )\r\n\r\n  const handlePlay = () => {\r\n    if (logued !== false) {\r\n      play().then(\r\n        (res) => {\r\n          console.log(res);\r\n          console.log(\"Has Jugado con exito\")\r\n          setOpenPopInfo(true)\r\n        }\r\n      ).catch(\r\n        (error) => {\r\n          console.log('error al juegar ' + error)\r\n        }\r\n      )\r\n    } else {\r\n      console.log('user disconnected')\r\n      setOpenPop(true)\r\n    }\r\n\r\n    // getUserLogued().then(\r\n    //   (result) => {\r\n    //     console.log(result)\r\n    //     if (result != null) {\r\n    //       let account = \"'\" + result + \"'\";\r\n    //       play(result).then(\r\n    //         (res) => {\r\n    //           console.log(res)\r\n    //           watch()\r\n    //           console.log('termine de ver')\r\n    //         }\r\n    //       )\r\n    //     } else {\r\n    //       console.log('logueese por favor')\r\n    //       setOpenPop(true)\r\n    //     }\r\n    //   }\r\n    // ).catch(\r\n    //   (error) => {\r\n    //     console.log('error al jugar')\r\n    //   }\r\n    // )\r\n\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"elevation\" >\r\n      <AlertPop open={openPop} handleClosePop={handleClosePop} type='error' sms='Please connect to a wallet!'></AlertPop>\r\n      <AlertPop open={openPopInfo} handleClosePop={handleClosePopInfo} type='success' sms='Game success!'></AlertPop>\r\n      <CardContent>\r\n        <Grid container justify=\"center\">\r\n          <Grid item container justify=\"flex-start\" >\r\n            <Grid item container className={classes.info} xs={false} sm={5} >\r\n              <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom style={{ color: '#91091e' }}>Cost:</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h6\" style={{ marginLeft: '5px' }}><Eth></Eth> {getRealPriceEth(cost)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} >\r\n              <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handlePlay}>Play!</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} spacing={2} className={classes.margenButton} >\r\n            <Grid item xs={12}>\r\n              <ListOfPlayers />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions className={classes.buttonCard}>\r\n        <Button color=\"secondary\" size=\"small\" onClick={handleClickOpen('body')}>Show more</Button>\r\n        {\r\n          open\r\n            ? <DetailsList scrollType='body' handleClose={handleClose} open={open} />\r\n            : null\r\n        }\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\nexport default GameCard\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\CurrentGame\\CurrentGame.js",["356","357","358"],"import React, { useState, useEffect } from \"react\";\r\nimport ListOfPlays from \"../ListOfPlays/ListOfPlays\";\r\nimport {\r\n  CurrentGameContainer,\r\n  GameRow,\r\n  JackPot,\r\n  SeasonTitle,\r\n  JackPotAmount,\r\n  JackPotText,\r\n} from \"./CurrentGame.elements\";\r\nimport ButtonPlay from \"../ButtonPlay/ButtonPlay\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport { getPriceInEth, getReward, getSeasonCurrent, miContrato } from \"../../../services/server\";\r\nimport { BarContextProvider } from \"../../../context/BarContext\";\r\nimport { useFullBar } from \"../../../hooks/useFullBar\";\r\nimport ButtonClaim from \"../ButtonClaim/ButtonClaim\";\r\nimport { Bc } from 'react-cryptocoins';\r\nimport { reduceDecimal } from \"../../../utils/reduceDecimal\";\r\n\r\nfunction CurrentGame({reload, setReload}) {\r\n  const [cost, setCost] = useState(0);\r\n  const [season, setSeason] = useState(0);\r\n  const [stopReload, setStopReload] = useState(false);\r\n  const { isFull } = useFullBar();\r\n\r\n  useEffect(() => {\r\n    if(reload){\r\n      loadCost()\r\n      loadSeason()\r\n      const timerStopGame = setTimeout(() => {\r\n        setStopReload(!stopReload)\r\n      }, 60000 )\r\n      return () => {\r\n        clearTimeout(timerStopGame)\r\n      }\r\n    }\r\n  }, [reload,stopReload])\r\n\r\n  useEffect(() => {\r\n    miContrato.events.Game(\r\n      {\r\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n        fromBlock: \"latest\",\r\n      },\r\n      (error, event) => {\r\n        loadCost();\r\n        loadSeason()\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const loadCost = () => {\r\n    getReward().then((res) => {\r\n      if (res !== false) {\r\n        getPriceInEth(res.recompensa).then((val) => setCost(val));\r\n      }\r\n    });\r\n  };\r\n  const loadSeason = () => {\r\n    getSeasonCurrent().then((res) => {\r\n      setSeason(res)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CurrentGameContainer>\r\n        <SeasonTitle>Season {season}</SeasonTitle>\r\n        <GameRow>\r\n          <JackPot>\r\n            \r\n            <JackPotAmount>≈ {reduceDecimal(cost, 2)} MATIC</JackPotAmount>\r\n            <JackPotText>current jackpot</JackPotText>\r\n          </JackPot>\r\n          {!isFull ? <ButtonPlay /> : <ButtonClaim />}\r\n        </GameRow>\r\n        <ListOfPlays />\r\n        {/* <BarRow>\r\n          <PlayerId>you: 0x34...f9F7</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"current-game-animation\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>End In: 1 day 45 min</TimeBar>\r\n        </BarRow>\r\n        <BarRow>\r\n          <PlayerId>Id: 0x6A...AdE8</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"game-ended\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow>\r\n        <BarRow>\r\n          <PlayerId>Id: 0x6A...AdE8</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"game-ended\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow>\r\n        <BarRow>\r\n          <PlayerId>you: 0x34...f9F7</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"game-ended-player\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow>\r\n        <BarRow>\r\n          <PlayerId>Id: 0x6A...AdE8</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"game-ended\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow>\r\n        <BarRow>\r\n          <PlayerId>Id: 0x6A...AdE8</PlayerId>\r\n          <GameBar>\r\n            <Bar className=\"game-ended\"></Bar>\r\n          </GameBar>\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow> */}\r\n      </CurrentGameContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentGame;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\models\\WalletModel.js",["359"],"import React , { useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport Authereum from \"authereum\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nexport default function WalletModel() {\r\n    const [loading, setLoading] = useState(false);\r\n    // const [provide, setProvide] = useState()\r\n    // const [webtre, setWebtre] = useState()\r\n    \r\n    return {\r\n        get web3Loading() {\r\n            return loading\r\n        },\r\n        async getweb3() {\r\n            setLoading(true);\r\n            let providerOptions;\r\n            let web3Modal;\r\n            let provider;\r\n            let web3;\r\n            providerOptions = {\r\n                metamask: {\r\n                    id: \"injected\",\r\n                    name: \"MetaMask\",\r\n                    type: \"injected\",\r\n                    check: \"isMetaMask\"\r\n                },\r\n                walletconnect: {\r\n                    package: WalletConnectProvider, // required\r\n                    options: {\r\n                        infuraId: \"INFURA_ID\", // Required\r\n                        network: \"rinkeby\",\r\n                        qrcodeModalOptions: {\r\n                            mobileLinks: [\r\n                                \"rainbow\",\r\n                                \"metamask\",\r\n                                \"argent\",\r\n                                \"trust\",\r\n                                \"imtoken\",\r\n                                \"pillar\"\r\n                            ]\r\n                        }\r\n                    }\r\n                },\r\n                authereum: {\r\n                    package: Authereum // required\r\n                },\r\n            };\r\n            web3Modal = new Web3Modal({\r\n                network: \"rinkeby\",\r\n                cacheProvider: false,\r\n                providerOptions\r\n            });\r\n            provider = await web3Modal.connect();\r\n            provider.on('error', e => console.error('WS Error', e));\r\n            provider.on('end', e => console.error('WS End', e));\r\n\r\n            provider.on(\"disconnect\", (error) => {\r\n                console.log(error);\r\n            });\r\n            provider.on(\"connect\", (info) => {\r\n                console.log('conectandooo perriririri')\r\n                console.log(info);\r\n            });\r\n            web3 = new Web3(provider);\r\n            console.log('cuanto termino de conectar');\r\n            console.log(provider);\r\n            setLoading(false);\r\n            return {web3, web3Modal, provider};\r\n        },\r\n        async disconnect(){\r\n            // if(provider.close) {\r\n            //     await provider.close();\r\n            \r\n            //     // If the cached provider is not cleared,\r\n            //     // WalletConnect will default to the existing session\r\n            //     // and does not allow to re-scan the QR code with a new wallet.\r\n            //     // Depending on your use case you may want or want not his behavior.\r\n            //     await web3.clearCachedProvider();\r\n            //     provider = null;\r\n            // } \r\n        },\r\n    }\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\hooks\\useFullBar.js",["360","361","362","363"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport BarContext from '../context/BarContext';\r\nimport { useLogin } from './useLogin';\r\n\r\nexport const useFullBar = () => {\r\n\r\n    const {isFull , setIsFull, lastUser, setLastUser} = useContext(BarContext)\r\n    const {user} = useLogin()\r\n\r\n    useEffect(\r\n        () => {\r\n            if(lastUser != null ){\r\n                if(user.player == lastUser){\r\n                    console.log('la concha de la lora');\r\n                    setIsFull(true) ;\r\n                }else{\r\n                    setIsFull(false)\r\n                }\r\n            }else{\r\n                setIsFull(false)\r\n            }\r\n        }, [isFull,lastUser]\r\n    )\r\n\r\n    return {isFull, setIsFull, setLastUser}\r\n}\r\n \r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\context\\userContext.js",["364"],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport { getUserLogued } from '../services/server';\r\nconst UserContext = React.createContext();\r\n\r\nexport function UserProvider(props) {\r\n    const [user, setUser] = useState(null);\r\n    const [logued, setLogued] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            getUserLogued().then(\r\n                (res) => {\r\n                    if (res != null) {\r\n                        setLogued(true)\r\n                        setUser({\r\n                            player: res\r\n                        })\r\n                    }\r\n                }\r\n            ).catch(\r\n                (error) => {\r\n                    console.log('error get user '+  error) \r\n                }\r\n            )\r\n        }, []\r\n    )\r\n\r\n\r\n    const value = useMemo(\r\n        () => {\r\n            return (\r\n                {\r\n                    user,\r\n                    logued,\r\n                    setLogued\r\n                }\r\n            )\r\n        }, \r\n    )\r\n\r\n    return <UserContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport function useUser() {\r\n    const context = React.useContext(UserContext)\r\n    if (!context) {\r\n        throw new Error('error en el provider')\r\n    }\r\n    return context;\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonClaim\\ButtonClaim.js",["365"],"import React, { useState } from 'react';\r\nimport { claimWinnerPool } from '../../../services/server';\r\nimport { PlayButton } from '../CurrentGame/CurrentGame.elements';\r\nimport Alert from \"../Alert/Alert\";\r\nimport { useFullBar } from '../../../hooks/useFullBar';\r\n\r\nconst ButtonClaim = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [type, setType] = useState(null);\r\n    const [msg, setMsg] = useState(null);\r\n    const {setLastUser} = useFullBar()\r\n\r\n    const handleClick = () => {\r\n        claimWinnerPool().then(\r\n            res => {\r\n                if (res == true) {\r\n                    setType(\"success\")\r\n                    setMsg(\"Claimed\")\r\n                    setOpen(true)\r\n                    setLastUser(null)\r\n                    const timeout = setTimeout(() => {\r\n                        setOpen(false);\r\n                    }, 4000);\r\n                    return () => {\r\n                        clearTimeout(timeout);\r\n                    };\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Alert icon={type} msg={msg} open={open} type={type} />\r\n            <PlayButton className=\"claim\" onClick={handleClick}>\r\n                CLAIM\r\n            </PlayButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ButtonClaim;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonPlay\\ButtonPlay.js",["366","367","368","369","370","371"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport LoginContext from \"../../../context/LoginContext\";\r\nimport { PlayButton } from \"./ButtonPlay.elements\";\r\nimport {\r\n  play,\r\n  listPlayerLastSeasons,\r\n  getUserLogued,\r\n  watch,\r\n  getCostPlay,\r\n} from \"../../../services/server\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport PopUp from \"../PopUp/PopUp\";\r\n\r\nfunction ButtonPlay() {\r\n  const { user, setUser, logued, setLogued } = useContext(LoginContext);\r\n  const [cost, setCost] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  const handleAlertError = (msg) => {\r\n    setType(\"error\");\r\n    setMsg(msg);\r\n    setOpen(true);\r\n    const timeout = setTimeout(() => {\r\n      setOpen(false);\r\n    }, 4000);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  };\r\n  const handleAlertSuccess = (msg) => {\r\n    setType(\"success\");\r\n    setMsg(msg);\r\n    setOpen(true);\r\n    const timeout = setTimeout(() => {\r\n      setOpen(false);\r\n    }, 4000);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCostPlay().then((res) => {\r\n      if (res !== false) {\r\n        setCost(res);\r\n      }\r\n    });\r\n  }, [logued, user]);\r\n\r\n  const handlePlay = () => {\r\n    if (logued !== false) {\r\n      play()\r\n        .then((res) => {\r\n          if(res){\r\n            handleAlertSuccess(\"game successfully added\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error al juegar \" + error);\r\n        });\r\n    } else {\r\n      handleAlertError(\"please connect to a wallet\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Alert icon={type} msg={msg} open={open} type={type} />\r\n      <PlayButton onClick={handlePlay}>\r\n        PLAY\r\n        <PopUp />\r\n      </PlayButton>\r\n      {/* Aca esta el boton de Claim, asi quedaria y ejecutaria otra funcion en onClick */}\r\n      {/* <PlayButton className=\"claim\" onClick={handlePlay}>\r\n        CLAIM\r\n      </PlayButton> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonPlay;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\DetailsList.js",["372","373"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { listPlayerLastSeasons } from '../services/server'\r\nimport Loading from './Loading';\r\nimport {transformAddress} from '../utils/transformAddress'\r\nimport {transformSecondsToHuman} from '../utils/transformSecondsToHuman'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            minWidth: 300,\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            minWidth: 550,\r\n        },\r\n    }\r\n}));\r\n\r\nconst DetailsList = ({ scrollType, handleClose, open }) => {\r\n\r\n    const [scroll, setScroll] = useState('paper');\r\n    const [listPlayersTotal, setListPlayersTotal] = useState([]);\r\n    const [load, setLoad] = useState(true);\r\n    const classes = useStyles()\r\n\r\n\r\n\r\n    const getDay = (timestamp) => {\r\n        const milliseconds = timestamp * 1000\r\n        const date = new Date(milliseconds)\r\n        return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            setScroll(scrollType);\r\n            if(listPlayersTotal.length == 0){\r\n                listPlayerLastSeasons().then(\r\n                    (result) => {\r\n                        var array = result.map(\r\n                            (r) => {\r\n                                return {\r\n                                    ...r,\r\n                                    player: r.player,\r\n                                    timeGame: r.timeGame,\r\n                                    timestamp: r.timestamp,\r\n                                    wait: r.wait,\r\n                                }\r\n                            }\r\n                        )\r\n                        setListPlayersTotal(array)\r\n                        setLoad(false)\r\n                    }\r\n                ).catch(\r\n                    (error) => {\r\n                        console.log('error array total ' + error)\r\n                    }\r\n                )\r\n            }\r\n        }, [scrollType]\r\n    )\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll={scroll}\r\n                maxWidth='md'\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Players List</DialogTitle>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    {\r\n                        load\r\n                            ? <Loading />\r\n                            : <TableContainer component={Paper}>\r\n                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>N</TableCell>\r\n                                            <TableCell>Player</TableCell>\r\n                                            <TableCell align=\"right\">Date</TableCell>\r\n                                            <TableCell align=\"right\">Wait</TableCell>\r\n                                            <TableCell align=\"right\">Time Game</TableCell>\r\n                                            {/* <TableCell align=\"right\"></TableCell> */}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {listPlayersTotal.map((l, index) => (\r\n                                            <TableRow key={l.player + l.timestamp + l.timeGame}>\r\n                                                <TableCell component=\"th\" scope=\"row\" >{index}</TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {transformAddress(l.player)}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{getDay(l.timestamp)}</TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\" >{transformSecondsToHuman(l.wait)}</TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\" >{transformSecondsToHuman(l.timeGame)}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                    }\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailsList;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Alert\\Alert.js",["374","375"],"import React, { useState, useEffect } from \"react\";\r\nimport successIcon from \"../../../images/successIcon.svg\";\r\nimport errorIcon from \"../../../images/dangerIcon.svg\";\r\n\r\nimport {\r\n  AlertContainert,\r\n  ToastAlert,\r\n  ToastIcon,\r\n  ToastMsg,\r\n} from \"./Alert.elements\";\r\n// import successIcon from \"../../../images/successIcon.svg\";\r\n\r\nfunction Alert({ msg, open, type, icon }) {\r\n  const handleIconType = (icon) => {\r\n    switch (icon) {\r\n      case \"success\":\r\n        return successIcon;\r\n      case \"error\":\r\n        return errorIcon;\r\n      default:\r\n        return \"#eee\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AlertContainert className={open ? `toast-visible` : null}>\r\n      <ToastAlert type={type}>\r\n        <ToastIcon src={handleIconType(icon)} />\r\n        <ToastMsg type={type}>{msg}</ToastMsg>\r\n      </ToastAlert>\r\n    </AlertContainert>\r\n  );\r\n}\r\nexport default Alert;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\CurrentGame\\CurrentGame.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ListOfPlays\\ListOfPlays.js",["376","377","378","379"],"import React, { useState, useEffect } from \"react\";\r\nimport { miContrato, listPlayerLastSeasons, getMorePlayer, getCountPlayersSeason } from \"../../../services/server\";\r\nimport Loading from \"../../Loading\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport { LoadingRow } from \"./ListOfPlays.elements\";\r\nimport { MoreButton } from \"../CurrentGame/CurrentGame.elements\"\r\nimport { ListItemIcon } from \"@material-ui/core\";\r\nimport { SmsOutlined } from \"@material-ui/icons\";\r\n\r\nconst ListOfPlayers = () => {\r\n  const [list, setList] = useState([]);\r\n  const [load, setLoad] = useState(true);\r\n  const [loadMore, setLoadMore] = useState(false);\r\n  const [countList, setCountList] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchApi();\r\n    loadCountPlayers()\r\n    miContrato.events.Game(\r\n      {\r\n        fromBlock: \"latest\",\r\n      },\r\n      (error, event) => {\r\n        setLoad(true);\r\n        fetchApi();\r\n        loadCountPlayers()\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const loadMorePlayers = () => {\r\n    setLoadMore(true)\r\n    if(countList != list.length){\r\n      getMorePlayer(9, countList - list.length).then(\r\n        res => {\r\n          if(res != false){\r\n            const newList = list.concat(res)\r\n            setList(newList)\r\n          }\r\n          setLoadMore(false)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const loadCountPlayers = () => {\r\n    getCountPlayersSeason().then(\r\n      res => {\r\n        setCountList(res)\r\n      }\r\n    )\r\n  }\r\n\r\n  async function fetchApi() {\r\n    await listPlayerLastSeasons(9)\r\n      .then((result) => {\r\n        var array = result.map((r) => {\r\n          return {\r\n            ...r,\r\n            player: r.player,\r\n            timeGame: r.timeGame,\r\n            timestamp: r.timestamp,\r\n            wait: r.wait,\r\n          };\r\n        });\r\n        setList(array);\r\n        setLoad(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    loadMorePlayers()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <LoadingRow>\r\n          <Loading />\r\n        </LoadingRow>\r\n      ) : (\r\n        list.map((l, index) => {\r\n          return (\r\n            <ProgressBar\r\n              player={l.player}\r\n              timeGame={l.timeGame}\r\n              timestamp={l.timestamp}\r\n              wait={l.wait}\r\n              index={index}\r\n              key={l.player + l.timestamp}\r\n            ></ProgressBar>\r\n          );\r\n        })\r\n      )}\r\n      {\r\n        loadMore \r\n          ?\r\n            <LoadingRow>\r\n              <Loading />\r\n            </LoadingRow>\r\n          : null\r\n      }\r\n      <MoreButton onClick={handleLoadMore}>Show More</MoreButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListOfPlayers;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ListOfPlayers.js",["380","381","382","383","384"],"import React, { useState, useEffect } from \"react\";\r\nimport { listPlayerLastSeasons } from \"../services/server\";\r\nimport { miContrato } from \"../services/server\";\r\nimport ItemGame from \"../components/ItemGame\";\r\nimport { Button, List } from \"@material-ui/core\";\r\nimport { useList } from \"../hooks/useList\";\r\nimport { player } from \"../services/server\";\r\nimport AlertPop from \"./AlertPop\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ListOfPlayers = () => {\r\n  // const { list, setNewGame, load } = useList()\r\n\r\n  const [list, setList] = useState([]);\r\n  const [load, setLoad] = useState(true);\r\n  // const [newGame, setNewGame] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetchApi();\r\n    miContrato.events.Game(\r\n      {\r\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n        fromBlock: \"latest\",\r\n      },\r\n      (error, event) => {\r\n        console.log(\"Evento activado\");\r\n        setLoad(true);\r\n        fetchApi();\r\n      }\r\n    );\r\n    console.log(\"saliendo\");\r\n  }, []);\r\n\r\n  async function fetchApi() {\r\n    await listPlayerLastSeasons(9)\r\n      .then((result) => {\r\n        var array = result.map((r) => {\r\n          return {\r\n            ...r,\r\n            player: r.player,\r\n            timeGame: r.timeGame,\r\n            timestamp: r.timestamp,\r\n            wait: r.wait,\r\n          };\r\n        });\r\n        setList(array);\r\n        setLoad(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <Loading />\r\n      ) : (\r\n        list.map((l, index) => {\r\n          return (\r\n            <ItemGame\r\n              player={l.player}\r\n              timeGame={l.timeGame}\r\n              timestamp={l.timestamp}\r\n              wait={l.wait}\r\n              index={index}\r\n              key={l.player + l.timestamp}\r\n            ></ItemGame>\r\n          );\r\n          // if (index === 0) {\r\n          //     return (\r\n          //         <ItemGame player={l.player} timeGame={l.timeGame} timestamp={l.timestamp} wait={l.wait} isLast={true} key={l.player + l.timestamp}></ItemGame>\r\n          //     )\r\n          // } else {\r\n          //     return (\r\n          //         <ItemGame player={l.player} timeGame={l.timeGame} timestamp={l.timestamp} wait={l.wait} isLast={false} key={l.player + l.timestamp}></ItemGame>\r\n          //     )\r\n          // }\r\n        })\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListOfPlayers;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformSecondsToHuman.js",["385","386","387","388"],"export function transformSecondsToHuman (seconds) {\r\n    seconds = Number(seconds);\r\n    var d = Math.floor(seconds / (3600 * 24));\r\n    var h = Math.floor(seconds % (3600 * 24) / 3600);\r\n    var m = Math.floor(seconds % 3600 / 60);\r\n    var s = Math.floor(seconds % 60);\r\n\r\n    var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\r\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\r\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\r\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\r\n    return dDisplay + hDisplay + mDisplay + sDisplay;\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ListOfPlays\\ListOfPlays.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\Alert\\Alert.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Loading.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\AlertPop.js",["389"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AlertPop({open, handleClosePop, type, sms}) {\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClosePop} >\r\n        <Alert onClose={handleClosePop}  severity={type}>\r\n          {sms}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ItemGame.js",["390","391"],"import React from 'react';\r\nimport { Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport ProgressBar from './ProgressBar'\r\nimport { transformAddress } from '../utils/transformAddress'\r\nimport { useLogin } from '../hooks/useLogin';\r\n\r\nconst ItemGame = (props) => {\r\n\r\n\r\n    const { user } = useLogin()\r\n    \r\n\r\n    return (\r\n        <>\r\n            {\r\n                user.player == props.player\r\n                    ?\r\n                    <Tooltip title=\"You\" placement=\"left-start\">\r\n                        <Typography variant=\"subtitle1\" gutterBottom align='left' color='primary'>\r\n                            Id: {transformAddress(props.player)}\r\n                        </Typography>\r\n                    </Tooltip>\r\n                    : <Typography variant=\"subtitle1\" gutterBottom align='left'>\r\n                        Id: {transformAddress(props.player)}\r\n                    </Typography>\r\n            }\r\n            <ProgressBar {...props}></ProgressBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ItemGame;","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ProgressBar\\ProgressBar.js",["392","393","394","395","396","397","398","399"],"import React, { useState, useEffect } from \"react\";\r\nimport { transformSecondsToHuman } from \"../../../utils/transformSecondsToHuman\";\r\nimport { transformAddress } from \"../../../utils/transformAddress\";\r\nimport { useLogin } from \"../../../hooks/useLogin\";\r\nimport {\r\n  BarRow,\r\n  PlayerId,\r\n  GameBar,\r\n  Bar,\r\n  TimeBar,\r\n} from \"./ProgressBar.elements\";\r\nimport { useFullBar } from \"../../../hooks/useFullBar\";\r\n\r\nexport default function ProgressBar(props) {\r\n  //login de user\r\n  const { user } = useLogin();\r\n\r\n  const [value, setValue] = useState(20);\r\n  const [aux, setAux] = useState(props.timeGame);\r\n  const [isLast, setIsLast] = useState(props.index === 0 ? true : false);\r\n  // const [porcent, setPorcent] = useState(20)\r\n  const [esperar, setEsperar] = useState(props.wait - props.timeGame);\r\n  const [end, setEnd] = useState(props.wait);\r\n  const [timeGame, setTimeGame] = useState(props.timeGame);\r\n  const begin = 20;\r\n  const {setLastUser} = useFullBar()\r\n\r\n  const getHours = (seconds) => {\r\n    return transformSecondsToHuman(seconds);\r\n  };\r\n\r\n  const getWaitPorcent = () => {\r\n    let difference = (aux * 80) / end;\r\n    if (difference > 0) {\r\n      return difference;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getDay = (timestamp) => {\r\n    const milliseconds = timestamp * 1000;\r\n    const date = new Date(milliseconds);\r\n    return date.toLocaleDateString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.index === 0) {\r\n      setIsLast(true);\r\n    } else {\r\n      setIsLast(false);\r\n    }\r\n    if (isLast && timeGame < end) {\r\n      const timer = setTimeout(() => {\r\n        if (esperar >= 0) {\r\n          setAux(aux + 1);\r\n          setEsperar(esperar - 1);\r\n          setValue(begin + getWaitPorcent());\r\n        } else {\r\n          if(isLast){\r\n            console.log(timeGame);\r\n            console.log(end);\r\n            console.log(esperar);\r\n            setLastUser(props.player);\r\n          }\r\n        }\r\n        return () => clearTimeout(timer);\r\n      }, 1000);\r\n    } else {\r\n      if (timeGame >= end) {\r\n        setValue(100);\r\n        if(isLast){\r\n          setLastUser(props.player);\r\n        }\r\n      } else {\r\n        setValue(begin + getWaitPorcent());\r\n      }\r\n    }\r\n  }, [esperar, value]);\r\n\r\n  if (isLast && timeGame < end) {\r\n    if(isLast && esperar > 0){\r\n      return (\r\n        <>\r\n          <BarRow>\r\n            {user.player == props.player ? (\r\n              <PlayerId>you: {transformAddress(props.player)}</PlayerId>\r\n            ) : (\r\n              <PlayerId>id: {transformAddress(props.player)}</PlayerId>\r\n            )}\r\n            <GameBar>\r\n              <Bar value={value} className=\"current-game-animation\"></Bar>\r\n            </GameBar>\r\n            <TimeBar>End In: {getHours(esperar)}</TimeBar>\r\n          </BarRow>\r\n        </>\r\n      );\r\n    }else{\r\n      return (\r\n        <>\r\n          <BarRow>\r\n            {user.player == props.player ? (\r\n              <>\r\n                <PlayerId>you: {transformAddress(props.player)}</PlayerId>\r\n                <GameBar>\r\n                  <Bar value={value} className=\"game-ended-player\"></Bar>\r\n                </GameBar>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PlayerId>id: {transformAddress(props.player)}</PlayerId>\r\n                <GameBar>\r\n                  <Bar value={value} className=\"game-ended\"></Bar>\r\n                </GameBar>\r\n              </>\r\n            )}\r\n            <TimeBar>Ended</TimeBar>\r\n          </BarRow>\r\n        </>\r\n      )\r\n    }\r\n  } else if (timeGame >= end) {\r\n    return (\r\n      <>\r\n        <BarRow>\r\n          {user.player == props.player ? (\r\n            <>\r\n              <PlayerId>you: {transformAddress(props.player)}</PlayerId>\r\n              <GameBar>\r\n                <Bar value={value} className=\"game-ended-player\"></Bar>\r\n              </GameBar>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <PlayerId>id: {transformAddress(props.player)}</PlayerId>\r\n              <GameBar>\r\n                <Bar value={value} className=\"game-ended\"></Bar>\r\n              </GameBar>\r\n            </>\r\n          )}\r\n          <TimeBar>Ended</TimeBar>\r\n        </BarRow>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <>\r\n          <BarRow>\r\n            {user.player == props.player ? (\r\n              <>\r\n                <PlayerId>you: {transformAddress(props.player)}</PlayerId>\r\n                <GameBar>\r\n                  <Bar value={value} className=\"game-early-ended-player\"></Bar>\r\n                </GameBar>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PlayerId>id: {transformAddress(props.player)}</PlayerId>\r\n                <GameBar>\r\n                  <Bar value={value} className=\"game-early-ended\"></Bar>\r\n                </GameBar>\r\n              </>\r\n            )}\r\n            <TimeBar>Ended</TimeBar>\r\n          </BarRow>\r\n        </>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\ProgressBar.js",["400","401","402","403"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport { transformSecondsToHuman } from '../utils/transformSecondsToHuman';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst BorderLinearProgressInGame = withStyles((theme) => ({\r\n  root: {\r\n    height: 30,\r\n    borderRadius: 0,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#1a90ff',\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst BorderLinearProgressLoss = withStyles((theme) => ({\r\n  root: {\r\n    height: 30,\r\n    borderRadius: 0,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: 'red',\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst BorderLinearProgressWin = withStyles((theme) => ({\r\n  root: {\r\n    height: 30,\r\n    borderRadius: 0,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: 'green',\r\n  },\r\n}))(LinearProgress);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressBar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(20);\r\n  const [aux, setAux] = useState(props.timeGame)\r\n  const [isLast, setIsLast] = useState(props.index === 0 ? true : false)\r\n  // const [porcent, setPorcent] = useState(20)\r\n  const [esperar, setEsperar] = useState(props.wait - props.timeGame)\r\n  const [end, setEnd] = useState(props.wait)\r\n  const [timeGame, setTimeGame] = useState(props.timeGame)\r\n  const begin = 20;\r\n\r\n  const getHours = (seconds) => {\r\n    return transformSecondsToHuman(seconds)\r\n  }\r\n\r\n  const getWaitPorcent = () => {\r\n    let difference = aux * 80 / end\r\n    if (difference > 0) {\r\n      return difference\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const getDay = (timestamp) => {\r\n    const milliseconds = timestamp * 1000\r\n    const date = new Date(milliseconds)\r\n    return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })\r\n  }\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      let montado = true\r\n      if (props.index === 0) {\r\n        setIsLast(true)\r\n      } else {\r\n        setIsLast(false)\r\n      }\r\n      // console.log(props)\r\n      // console.log(\"render progress bar\");\r\n      if (isLast && (timeGame < end)) {\r\n\r\n        const timer = setTimeout(() => {\r\n\r\n          // console.log('callculo ' porcent )\r\n          // console.log(porcent)\r\n          if (esperar >= 0) {\r\n            // console.log( 'fin ' +  end)\r\n            // console.log( 'aux  ' + aux)\r\n\r\n            // console.log( 'esperar ' + esperar)\r\n            // // console.log(aux)\r\n            // console.log( 'espera ' + (begin + (aux * 80 / end)))\r\n            setAux(aux + 1)\r\n            setEsperar(esperar - 1)\r\n            // setPorcent(begin + (aux * 80 / end))\r\n            // console.log('entre')\r\n            setValue(begin + getWaitPorcent());\r\n          } else {\r\n            console.log('salppepepepp')\r\n            return () => clearTimeout(timer)\r\n          }\r\n        }, 1000);\r\n        // let porcent = 0 \r\n        // let aux = 0\r\n      } else {\r\n        if (timeGame >= end) {\r\n          setValue(100)\r\n        } else {\r\n          // console.log(timeGame*80/esperar)\r\n          setValue(begin + getWaitPorcent())\r\n        }\r\n      }\r\n\r\n      return () => console.log('desmontando');\r\n\r\n    }, [esperar, value]\r\n  )\r\n\r\n  if (isLast && (timeGame < end)) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <BorderLinearProgressInGame variant=\"determinate\" value={value} />\r\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle2\" color=\"initial\">{getHours(esperar)}</Typography>\r\n          </Box>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\r\n              <strong>Date:</strong> {getDay(props.timestamp)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\r\n                <strong>Game Time:</strong> {props.timeGame}\r\n            </Typography> */}\r\n\r\n      </div>\r\n    );\r\n  } else if (timeGame >= end) {\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <BorderLinearProgressWin variant=\"determinate\" value={value} />\r\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle1\" color=\"initial\"><SentimentVerySatisfiedIcon color=\"secondary\" /></Typography>\r\n          </Box>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\r\n              <strong>Date:</strong> {getDay(props.timestamp)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\r\n                <strong>Game Time:</strong> {props.timeGame}\r\n            </Typography> */}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <BorderLinearProgressLoss variant=\"determinate\" value={value} />\r\n        {/* <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}> */}\r\n        <Box component=\"div\" display=\"flex\" p={0} m={0}>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle1\" color=\"initial\"><SentimentDissatisfiedIcon color=\"action\" style={{ color: '#e57373' }} /></Typography>\r\n          </Box>\r\n          <Box width=\"50%\">\r\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\r\n              <strong>Date:</strong> {getDay(props.timestamp)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        {/* <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\r\n                <strong>Game Time:</strong> {props.timeGame}\r\n            </Typography> */}\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ProgressBar\\ProgressBar.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\PopUp\\PopUp.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\ButtonPlay\\ButtonPlay.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\transformSecondsToHumanMin.js",["404"],"export function transformSecondsToHumanMin (seconds) {\r\n    seconds = Number(seconds);\r\n    var d = Math.floor(seconds / (3600 * 24));\r\n    var h = Math.floor(seconds % (3600 * 24) / 3600);\r\n    var m = Math.floor(seconds % 3600 / 60);\r\n    var s = Math.floor(seconds % 60);\r\n\r\n    if(d>0){\r\n        var dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\r\n        return dDisplay\r\n    }\r\n    var hDisplay = h > 0 ? h < 10 ? \"0\"+h + \":\" : h + \":\" : \"00\";\r\n    var mDisplay = m > 0 ? m < 10 ? \"0\"+m +\":\" : m + \":\" : \"00\";\r\n    var sDisplay = s > 0 ? s < 10 ? \"0\"+s : s : \"00\";\r\n    return  hDisplay + mDisplay + sDisplay;\r\n}","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\TopPlayers\\TopPlayers.js",["405","406","407","408","409"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  getWinnersSeason,\r\n  miContrato,\r\n  getSeasonCurrent,\r\n  claimWinnerSeason,\r\n  getIfClaim,\r\n} from \"../../../services/server\";\r\nimport {\r\n  TopListCard,\r\n  TopHeader,\r\n  ListHeader,\r\n  ListItem,\r\n  HeaderNumber,\r\n  HeaderPlayer,\r\n  HeaderAmount,\r\n  ItemNumber,\r\n  ItemPlayer,\r\n  ItemAmount,\r\n  TopContainer,\r\n  SeasonSelect,\r\n  ListContainer,\r\n  ClaimReward,\r\n  ButtonContainer,\r\n} from \"../SeasonContent/SeasonContent.elements\";\r\nimport { transformAddress } from \"../../../utils/transformAddress\";\r\nimport LoginContext from \"../../../context/LoginContext\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport { reduceDecimal } from \"../../../utils/reduceDecimal\";\r\n\r\nconst TopPlayers = ({reload, setReload}) => {\r\n  const [top, setTop] = useState([]);\r\n  const { user } = useContext(LoginContext);\r\n  const [season, setSeason] = useState(0);\r\n  const [seasonSelected, setSeasonSelected] = useState(0)\r\n  //alert\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n  const [stopReload, setStopReload] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (reload) {\r\n        loadList()\r\n        const timer = setTimeout(() => {\r\n          setStopReload(!stopReload)\r\n        }, 60000)\r\n      }\r\n    }, [reload, stopReload]\r\n  )\r\n\r\n  useEffect(() => {\r\n    miContrato.events.Game(\r\n      {\r\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n        fromBlock: \"latest\",\r\n      },\r\n      (error, event) => {\r\n        loadList();\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const loadList = () => {\r\n    getSeasonCurrent().then((res) => {\r\n      setSeason(res);\r\n      setSeasonSelected(res)\r\n    });\r\n    getWinnersSeason()\r\n      .then((res) => {\r\n        setTop(res);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const listMenu = () => {\r\n    let menuItems = [];\r\n    for (let index = season; index >= 0; index--) {\r\n      if (season == index) {\r\n        menuItems.push(\r\n          <option selected value={index} key={index}>\r\n            Season {index}\r\n          </option>\r\n        );\r\n      } else {\r\n        menuItems.push(\r\n          <option value={index} key={index}>\r\n            Season {index}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n    return menuItems;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSeasonSelected(e.target.value)\r\n    getWinnersSeason(e.target.value)\r\n      .then((res) => {\r\n        setTop(res);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (seasonSelected == season) {\r\n      setType(\"error\")\r\n      setMsg(\"Can't claim in the last season\")\r\n      setOpen(true)\r\n      const timeout = setTimeout(() => {\r\n        setOpen(false);\r\n      }, 4000);\r\n      return () => {\r\n        clearTimeout(timeout);\r\n      }\r\n    } else {\r\n      getIfClaim(season).then(\r\n        (value) => {\r\n          if (!value) {\r\n            claimWinnerSeason(seasonSelected)\r\n              .then(\r\n                (res) => {\r\n                  if (res == true) {\r\n                    setType(\"success\")\r\n                    setMsg(\"Claimed\")\r\n                    setOpen(true)\r\n                    const timeout = setTimeout(() => {\r\n                      setOpen(false);\r\n                    }, 4000);\r\n                    return () => {\r\n                      clearTimeout(timeout);\r\n                    };\r\n                  }\r\n                  else {\r\n                    setType(\"error\")\r\n                    setMsg(\"Can't claim in this season\")\r\n                    setOpen(true)\r\n                    const timeout = setTimeout(() => {\r\n                      setOpen(false);\r\n                    }, 4000);\r\n                    return () => {\r\n                      clearTimeout(timeout);\r\n                    }\r\n                  }\r\n                }\r\n              )\r\n          } else {\r\n            setType(\"error\")\r\n            setMsg(\"You were claim\")\r\n            setOpen(true)\r\n            const timeout = setTimeout(() => {\r\n              setOpen(false);\r\n            }, 4000);\r\n            return () => {\r\n              clearTimeout(timeout);\r\n            }\r\n          }\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopListCard>\r\n        <TopContainer>\r\n          <TopHeader>top players</TopHeader>\r\n          <SeasonSelect onChange={handleChange}>{listMenu()}</SeasonSelect>\r\n        </TopContainer>\r\n\r\n        <ListHeader>\r\n          <HeaderNumber>#</HeaderNumber>\r\n          <HeaderPlayer>player</HeaderPlayer>\r\n          <HeaderAmount>amount</HeaderAmount>\r\n          <HeaderAmount>reward</HeaderAmount>\r\n        </ListHeader>\r\n        <ListContainer>\r\n          {top.map((item, index) => {\r\n            return item.address == user.player ? (\r\n              <ListItem className=\"player\">\r\n                <ItemNumber>{index + 1}</ItemNumber>\r\n                <ItemPlayer>{transformAddress(item.address)}</ItemPlayer>\r\n                <ItemAmount>{item.cantGame}</ItemAmount>\r\n                <ItemAmount>{reduceDecimal(item.reward, 6)}</ItemAmount>\r\n              </ListItem>\r\n            ) : (\r\n              <ListItem>\r\n                <ItemNumber>{index + 1}</ItemNumber>\r\n                <ItemPlayer>{transformAddress(item.address)}</ItemPlayer>\r\n                <ItemAmount>{item.cantGame}</ItemAmount>\r\n                <ItemAmount>{reduceDecimal(item.reward, 6)}</ItemAmount>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </ListContainer>\r\n        {/* solo cuando pueda reclamar la persona */}\r\n        <Alert icon={type} msg={msg} open={open} type={type} />\r\n        <ButtonContainer>\r\n          <ClaimReward onClick={handleClick}>Claim</ClaimReward>\r\n        </ButtonContainer>\r\n\r\n        {/* <ListItem>\r\n                    <ItemNumber>2</ItemNumber>\r\n                    <ItemPlayer>0x6A...AdE8 </ItemPlayer>\r\n                    <ItemAmount>9</ItemAmount>\r\n                </ListItem>\r\n                <ListItem className=\"player\">\r\n                    <ItemNumber>3</ItemNumber>\r\n                    <ItemPlayer>0x34...F9F7</ItemPlayer>\r\n                    <ItemAmount>6</ItemAmount>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ItemNumber>4</ItemNumber>\r\n                    <ItemPlayer>0x6A...AdE8 </ItemPlayer>\r\n                    <ItemAmount>3</ItemAmount>\r\n                </ListItem> */}\r\n      </TopListCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopPlayers;\r\n","D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\SeasonContent\\SeasonContent.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\components\\Game\\PopUp\\PopUp.elements.js",[],"D:\\Proyectos\\Blockchain\\Sorteo\\sc react\\RunCoin-Fronted\\src\\utils\\reduceDecimal.js",[],{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","severity":1,"message":"415","line":2,"column":10,"nodeType":"416","messageId":"417","endLine":2,"endColumn":18},{"ruleId":"418","severity":1,"message":"419","line":25,"column":21,"nodeType":"420","messageId":"421","endLine":25,"endColumn":23},{"ruleId":"414","severity":1,"message":"422","line":1,"column":16,"nodeType":"416","messageId":"417","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"423","line":6,"column":15,"nodeType":"416","messageId":"417","endLine":6,"endColumn":21},{"ruleId":"414","severity":1,"message":"424","line":8,"column":10,"nodeType":"416","messageId":"417","endLine":8,"endColumn":21},{"ruleId":"414","severity":1,"message":"425","line":11,"column":10,"nodeType":"416","messageId":"417","endLine":11,"endColumn":17},{"ruleId":"418","severity":1,"message":"419","line":85,"column":17,"nodeType":"420","messageId":"421","endLine":85,"endColumn":19},{"ruleId":"414","severity":1,"message":"422","line":1,"column":16,"nodeType":"416","messageId":"417","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"426","line":1,"column":37,"nodeType":"416","messageId":"417","endLine":1,"endColumn":46},{"ruleId":"414","severity":1,"message":"427","line":38,"column":15,"nodeType":"416","messageId":"417","endLine":38,"endColumn":21},{"ruleId":"418","severity":1,"message":"419","line":116,"column":26,"nodeType":"420","messageId":"421","endLine":116,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":199,"column":26,"nodeType":"420","messageId":"421","endLine":199,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":213,"column":36,"nodeType":"420","messageId":"421","endLine":213,"endColumn":38},{"ruleId":"418","severity":1,"message":"419","line":270,"column":26,"nodeType":"420","messageId":"421","endLine":270,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":301,"column":36,"nodeType":"420","messageId":"421","endLine":301,"endColumn":38},{"ruleId":"418","severity":1,"message":"419","line":344,"column":21,"nodeType":"420","messageId":"421","endLine":344,"endColumn":23},{"ruleId":"418","severity":1,"message":"419","line":444,"column":40,"nodeType":"420","messageId":"421","endLine":444,"endColumn":42},{"ruleId":"418","severity":1,"message":"419","line":461,"column":20,"nodeType":"420","messageId":"421","endLine":461,"endColumn":22},{"ruleId":"418","severity":1,"message":"419","line":517,"column":19,"nodeType":"420","messageId":"421","endLine":517,"endColumn":21},{"ruleId":"418","severity":1,"message":"419","line":525,"column":31,"nodeType":"420","messageId":"421","endLine":525,"endColumn":33},{"ruleId":"418","severity":1,"message":"419","line":566,"column":13,"nodeType":"420","messageId":"421","endLine":566,"endColumn":15},{"ruleId":"414","severity":1,"message":"428","line":7,"column":8,"nodeType":"416","messageId":"417","endLine":7,"endColumn":22},{"ruleId":"414","severity":1,"message":"429","line":1,"column":8,"nodeType":"416","messageId":"417","endLine":1,"endColumn":13},{"ruleId":"430","severity":1,"message":"431","line":25,"column":12,"nodeType":"432","endLine":25,"endColumn":21,"suggestions":"433"},{"ruleId":"414","severity":1,"message":"422","line":1,"column":16,"nodeType":"416","messageId":"417","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"434","line":1,"column":27,"nodeType":"416","messageId":"417","endLine":1,"endColumn":35},{"ruleId":"435","severity":1,"message":"436","line":104,"column":13,"nodeType":"437","endLine":104,"endColumn":119},{"ruleId":"418","severity":1,"message":"438","line":47,"column":29,"nodeType":"420","messageId":"421","endLine":47,"endColumn":31},{"ruleId":"414","severity":1,"message":"439","line":48,"column":21,"nodeType":"416","messageId":"417","endLine":48,"endColumn":24},{"ruleId":"414","severity":1,"message":"440","line":3,"column":8,"nodeType":"416","messageId":"417","endLine":3,"endColumn":20},{"ruleId":"414","severity":1,"message":"441","line":4,"column":18,"nodeType":"416","messageId":"417","endLine":4,"endColumn":23},{"ruleId":"414","severity":1,"message":"442","line":5,"column":8,"nodeType":"416","messageId":"417","endLine":5,"endColumn":17},{"ruleId":"414","severity":1,"message":"422","line":1,"column":17,"nodeType":"416","messageId":"417","endLine":1,"endColumn":26},{"ruleId":"414","severity":1,"message":"443","line":1,"column":38,"nodeType":"416","messageId":"417","endLine":1,"endColumn":48},{"ruleId":"414","severity":1,"message":"444","line":3,"column":8,"nodeType":"416","messageId":"417","endLine":3,"endColumn":21},{"ruleId":"414","severity":1,"message":"445","line":4,"column":8,"nodeType":"416","messageId":"417","endLine":4,"endColumn":24},{"ruleId":"414","severity":1,"message":"446","line":5,"column":8,"nodeType":"416","messageId":"417","endLine":5,"endColumn":12},{"ruleId":"414","severity":1,"message":"447","line":6,"column":10,"nodeType":"416","messageId":"417","endLine":6,"endColumn":22},{"ruleId":"414","severity":1,"message":"448","line":6,"column":24,"nodeType":"416","messageId":"417","endLine":6,"endColumn":31},{"ruleId":"414","severity":1,"message":"449","line":7,"column":8,"nodeType":"416","messageId":"417","endLine":7,"endColumn":20},{"ruleId":"414","severity":1,"message":"450","line":44,"column":11,"nodeType":"416","messageId":"417","endLine":44,"endColumn":22},{"ruleId":"414","severity":1,"message":"451","line":44,"column":33,"nodeType":"416","messageId":"417","endLine":44,"endColumn":43},{"ruleId":"414","severity":1,"message":"452","line":114,"column":18,"nodeType":"416","messageId":"417","endLine":114,"endColumn":34},{"ruleId":"414","severity":1,"message":"439","line":115,"column":11,"nodeType":"416","messageId":"417","endLine":115,"endColumn":14},{"ruleId":"414","severity":1,"message":"429","line":1,"column":8,"nodeType":"416","messageId":"417","endLine":1,"endColumn":13},{"ruleId":"414","severity":1,"message":"434","line":1,"column":28,"nodeType":"416","messageId":"417","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"453","line":27,"column":12,"nodeType":"432","endLine":27,"endColumn":14,"suggestions":"454"},{"ruleId":"418","severity":1,"message":"419","line":2,"column":16,"nodeType":"420","messageId":"421","endLine":2,"endColumn":18},{"ruleId":"414","severity":1,"message":"455","line":11,"column":40,"nodeType":"416","messageId":"417","endLine":11,"endColumn":49},{"ruleId":"414","severity":1,"message":"456","line":12,"column":10,"nodeType":"416","messageId":"417","endLine":12,"endColumn":33},{"ruleId":"418","severity":1,"message":"438","line":74,"column":30,"nodeType":"420","messageId":"421","endLine":74,"endColumn":32},{"ruleId":"414","severity":1,"message":"457","line":7,"column":28,"nodeType":"416","messageId":"417","endLine":7,"endColumn":35},{"ruleId":"414","severity":1,"message":"458","line":10,"column":16,"nodeType":"416","messageId":"417","endLine":10,"endColumn":37},{"ruleId":"414","severity":1,"message":"459","line":10,"column":39,"nodeType":"416","messageId":"417","endLine":10,"endColumn":52},{"ruleId":"414","severity":1,"message":"460","line":10,"column":54,"nodeType":"416","messageId":"417","endLine":10,"endColumn":59},{"ruleId":"414","severity":1,"message":"447","line":11,"column":10,"nodeType":"416","messageId":"417","endLine":11,"endColumn":22},{"ruleId":"414","severity":1,"message":"448","line":11,"column":24,"nodeType":"416","messageId":"417","endLine":11,"endColumn":31},{"ruleId":"414","severity":1,"message":"461","line":15,"column":8,"nodeType":"416","messageId":"417","endLine":15,"endColumn":18},{"ruleId":"414","severity":1,"message":"462","line":16,"column":8,"nodeType":"416","messageId":"417","endLine":16,"endColumn":18},{"ruleId":"414","severity":1,"message":"463","line":62,"column":17,"nodeType":"416","messageId":"417","endLine":62,"endColumn":24},{"ruleId":"414","severity":1,"message":"464","line":62,"column":34,"nodeType":"416","messageId":"417","endLine":62,"endColumn":43},{"ruleId":"414","severity":1,"message":"465","line":12,"column":8,"nodeType":"416","messageId":"417","endLine":12,"endColumn":13},{"ruleId":"414","severity":1,"message":"466","line":14,"column":10,"nodeType":"416","messageId":"417","endLine":14,"endColumn":28},{"ruleId":"414","severity":1,"message":"467","line":17,"column":10,"nodeType":"416","messageId":"417","endLine":17,"endColumn":12},{"ruleId":"414","severity":1,"message":"429","line":1,"column":8,"nodeType":"416","messageId":"417","endLine":1,"endColumn":13},{"ruleId":"414","severity":1,"message":"429","line":1,"column":8,"nodeType":"416","messageId":"417","endLine":1,"endColumn":13},{"ruleId":"414","severity":1,"message":"434","line":1,"column":29,"nodeType":"416","messageId":"417","endLine":1,"endColumn":37},{"ruleId":"418","severity":1,"message":"419","line":13,"column":32,"nodeType":"420","messageId":"421","endLine":13,"endColumn":34},{"ruleId":"430","severity":1,"message":"468","line":22,"column":12,"nodeType":"432","endLine":22,"endColumn":29,"suggestions":"469"},{"ruleId":"430","severity":1,"message":"470","line":29,"column":19,"nodeType":"416","endLine":29,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":17,"column":25,"nodeType":"420","messageId":"421","endLine":17,"endColumn":27},{"ruleId":"414","severity":1,"message":"458","line":6,"column":3,"nodeType":"416","messageId":"417","endLine":6,"endColumn":24},{"ruleId":"414","severity":1,"message":"459","line":7,"column":3,"nodeType":"416","messageId":"417","endLine":7,"endColumn":16},{"ruleId":"414","severity":1,"message":"460","line":8,"column":3,"nodeType":"416","messageId":"417","endLine":8,"endColumn":8},{"ruleId":"414","severity":1,"message":"463","line":15,"column":17,"nodeType":"416","messageId":"417","endLine":15,"endColumn":24},{"ruleId":"414","severity":1,"message":"464","line":15,"column":34,"nodeType":"416","messageId":"417","endLine":15,"endColumn":43},{"ruleId":"414","severity":1,"message":"471","line":16,"column":10,"nodeType":"416","messageId":"417","endLine":16,"endColumn":14},{"ruleId":"418","severity":1,"message":"419","line":50,"column":40,"nodeType":"420","messageId":"421","endLine":50,"endColumn":42},{"ruleId":"430","severity":1,"message":"472","line":73,"column":12,"nodeType":"432","endLine":73,"endColumn":24,"suggestions":"473"},{"ruleId":"414","severity":1,"message":"434","line":1,"column":17,"nodeType":"416","messageId":"417","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"422","line":1,"column":27,"nodeType":"416","messageId":"417","endLine":1,"endColumn":36},{"ruleId":"414","severity":1,"message":"474","line":7,"column":10,"nodeType":"416","messageId":"417","endLine":7,"endColumn":22},{"ruleId":"414","severity":1,"message":"475","line":8,"column":10,"nodeType":"416","messageId":"417","endLine":8,"endColumn":21},{"ruleId":"418","severity":1,"message":"438","line":33,"column":18,"nodeType":"420","messageId":"421","endLine":33,"endColumn":20},{"ruleId":"418","severity":1,"message":"438","line":36,"column":18,"nodeType":"420","messageId":"421","endLine":36,"endColumn":20},{"ruleId":"414","severity":1,"message":"423","line":5,"column":10,"nodeType":"416","messageId":"417","endLine":5,"endColumn":16},{"ruleId":"414","severity":1,"message":"476","line":5,"column":18,"nodeType":"416","messageId":"417","endLine":5,"endColumn":22},{"ruleId":"414","severity":1,"message":"425","line":6,"column":10,"nodeType":"416","messageId":"417","endLine":6,"endColumn":17},{"ruleId":"414","severity":1,"message":"477","line":7,"column":10,"nodeType":"416","messageId":"417","endLine":7,"endColumn":16},{"ruleId":"414","severity":1,"message":"478","line":8,"column":8,"nodeType":"416","messageId":"417","endLine":8,"endColumn":16},{"ruleId":"418","severity":1,"message":"419","line":8,"column":35,"nodeType":"420","messageId":"421","endLine":8,"endColumn":37},{"ruleId":"418","severity":1,"message":"419","line":9,"column":35,"nodeType":"420","messageId":"421","endLine":9,"endColumn":37},{"ruleId":"418","severity":1,"message":"419","line":10,"column":35,"nodeType":"420","messageId":"421","endLine":10,"endColumn":37},{"ruleId":"418","severity":1,"message":"419","line":11,"column":35,"nodeType":"420","messageId":"421","endLine":11,"endColumn":37},{"ruleId":"414","severity":1,"message":"423","line":2,"column":8,"nodeType":"416","messageId":"417","endLine":2,"endColumn":14},{"ruleId":"414","severity":1,"message":"479","line":2,"column":10,"nodeType":"416","messageId":"417","endLine":2,"endColumn":14},{"ruleId":"418","severity":1,"message":"419","line":16,"column":29,"nodeType":"420","messageId":"421","endLine":16,"endColumn":31},{"ruleId":"414","severity":1,"message":"480","line":23,"column":15,"nodeType":"416","messageId":"417","endLine":23,"endColumn":21},{"ruleId":"414","severity":1,"message":"481","line":24,"column":20,"nodeType":"416","messageId":"417","endLine":24,"endColumn":31},{"ruleId":"414","severity":1,"message":"482","line":41,"column":9,"nodeType":"416","messageId":"417","endLine":41,"endColumn":15},{"ruleId":"430","severity":1,"message":"483","line":82,"column":6,"nodeType":"432","endLine":82,"endColumn":22,"suggestions":"484"},{"ruleId":"418","severity":1,"message":"419","line":89,"column":26,"nodeType":"420","messageId":"421","endLine":89,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":105,"column":26,"nodeType":"420","messageId":"421","endLine":105,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":129,"column":24,"nodeType":"420","messageId":"421","endLine":129,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":153,"column":26,"nodeType":"420","messageId":"421","endLine":153,"endColumn":28},{"ruleId":"414","severity":1,"message":"480","line":66,"column":15,"nodeType":"416","messageId":"417","endLine":66,"endColumn":21},{"ruleId":"414","severity":1,"message":"481","line":67,"column":20,"nodeType":"416","messageId":"417","endLine":67,"endColumn":31},{"ruleId":"414","severity":1,"message":"485","line":92,"column":11,"nodeType":"416","messageId":"417","endLine":92,"endColumn":18},{"ruleId":"430","severity":1,"message":"486","line":136,"column":8,"nodeType":"432","endLine":136,"endColumn":24,"suggestions":"487"},{"ruleId":"418","severity":1,"message":"419","line":9,"column":39,"nodeType":"420","messageId":"421","endLine":9,"endColumn":41},{"ruleId":"414","severity":1,"message":"488","line":46,"column":15,"nodeType":"416","messageId":"417","endLine":46,"endColumn":20},{"ruleId":"418","severity":1,"message":"419","line":80,"column":18,"nodeType":"420","messageId":"421","endLine":80,"endColumn":20},{"ruleId":"418","severity":1,"message":"419","line":107,"column":24,"nodeType":"420","messageId":"421","endLine":107,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":124,"column":27,"nodeType":"420","messageId":"421","endLine":124,"endColumn":29},{"ruleId":"418","severity":1,"message":"419","line":182,"column":33,"nodeType":"420","messageId":"421","endLine":182,"endColumn":35},"no-native-reassign",["489"],"no-negated-in-lhs",["490"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Button' is defined but never used.","'getCostPlay' is defined but never used.","'useList' is defined but never used.","'keyframes' is defined but never used.","'player' is assigned a value but never used.","'ExpandMoreIcon' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchApi' and 'setEstado'. Either include them or remove the dependency array.","ArrayExpression",["491"],"'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","'ExchangeCard' is defined but never used.","'PLink' is defined but never used.","'ButtonLog' is defined but never used.","'useContext' is defined but never used.","'ExitToAppIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Web3' is defined but never used.","'UserProvider' is defined but never used.","'useUser' is defined but never used.","'LoginContext' is defined but never used.","'web3Loading' is assigned a value but never used.","'disconnect' is assigned a value but never used.","'disconnectWallet' is defined but never used.","React Hook useEffect has missing dependencies: 'setLogued' and 'setUser'. Either include them or remove the dependency array.",["492"],"'getReward' is defined but never used.","'transformSecondsToHuman' is defined but never used.","'Tooltip' is defined but never used.","'listPlayerLastSeasons' is defined but never used.","'getUserLogued' is defined but never used.","'watch' is defined but never used.","'IconButton' is defined but never used.","'ReplayIcon' is defined but never used.","'setUser' is assigned a value but never used.","'setLogued' is assigned a value but never used.","'Alert' is defined but never used.","'BarContextProvider' is defined but never used.","'Bc' is defined but never used.","React Hook useEffect has missing dependencies: 'setIsFull' and 'user.player'. Either include them or remove the dependency array.",["493"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'cost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listPlayersTotal.length'. Either include it or remove the dependency array.",["494"],"'ListItemIcon' is defined but never used.","'SmsOutlined' is defined but never used.","'List' is defined but never used.","'player' is defined but never used.","'AlertPop' is defined but never used.","'Grid' is defined but never used.","'setEnd' is assigned a value but never used.","'setTimeGame' is assigned a value but never used.","'getDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aux', 'end', 'getWaitPorcent', 'isLast', 'props.index', 'props.player', 'setLastUser', and 'timeGame'. Either include them or remove the dependency array. You can also do a functional update 'setAux(a => ...)' if you only need 'aux' in the 'setAux' call.",["495"],"'montado' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aux', 'end', 'getWaitPorcent', 'isLast', 'props.index', and 'timeGame'. Either include them or remove the dependency array. You can also do a functional update 'setAux(a => ...)' if you only need 'aux' in the 'setAux' call.",["496"],"'timer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},"Update the dependencies array to be: [fetchApi, newGame, setEstado]",{"range":"509","text":"510"},"Update the dependencies array to be: [setLogued, setUser]",{"range":"511","text":"512"},"Update the dependencies array to be: [isFull, lastUser, setIsFull, user.player]",{"range":"513","text":"514"},"Update the dependencies array to be: [listPlayersTotal.length, scrollType]",{"range":"515","text":"516"},"Update the dependencies array to be: [aux, end, esperar, getWaitPorcent, isLast, props.index, props.player, setLastUser, timeGame, value]",{"range":"517","text":"518"},"Update the dependencies array to be: [aux, end, esperar, getWaitPorcent, isLast, props.index, timeGame, value]",{"range":"519","text":"520"},[844,853],"[fetchApi, newGame, setEstado]",[802,804],"[setLogued, setUser]",[679,696],"[isFull, lastUser, setIsFull, user.player]",[2731,2743],"[listPlayersTotal.length, scrollType]",[2294,2310],"[aux, end, esperar, getWaitPorcent, isLast, props.index, props.player, setLastUser, timeGame, value]",[3881,3897],"[aux, end, esperar, getWaitPorcent, isLast, props.index, timeGame, value]"]