[{"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\index.js":"1","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\reportWebVitals.js":"2","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\App.js":"3","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\NavBar.js":"4","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ButtonLog.js":"5","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\theme.js":"6","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Header.js":"7","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Content.js":"8","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ExchangeCard.js":"9","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Navegation.js":"10","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\GameCard.js":"11","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ButtonSetting.js":"12","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ProgressBar.js":"13","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\server.js":"14","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\parameters.js":"15","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\abiApp.js":"16","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ItemGame.js":"17","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\context\\userContext.js":"18"},{"size":672,"mtime":1611081016006,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":3831,"mtime":1612636314818,"results":"22","hashOfConfig":"20"},{"size":1385,"mtime":1611020951608,"results":"23","hashOfConfig":"20"},{"size":2301,"mtime":1612469486819,"results":"24","hashOfConfig":"20"},{"size":344,"mtime":1611168590952,"results":"25","hashOfConfig":"20"},{"size":1001,"mtime":1611273127439,"results":"26","hashOfConfig":"20"},{"size":376,"mtime":1611861354416,"results":"27","hashOfConfig":"20"},{"size":1600,"mtime":1611168767977,"results":"28","hashOfConfig":"20"},{"size":1370,"mtime":1611274326832,"results":"29","hashOfConfig":"20"},{"size":6729,"mtime":1612470378610,"results":"30","hashOfConfig":"20"},{"size":2801,"mtime":1611274015072,"results":"31","hashOfConfig":"20"},{"size":781,"mtime":1611434880441,"results":"32","hashOfConfig":"20"},{"size":5794,"mtime":1612470106113,"results":"33","hashOfConfig":"20"},{"size":571,"mtime":1612206359199,"results":"34","hashOfConfig":"20"},{"size":14039,"mtime":1612206359195,"results":"35","hashOfConfig":"20"},{"size":1155,"mtime":1612398597818,"results":"36","hashOfConfig":"20"},{"size":1308,"mtime":1612469418806,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"t87zgq",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\index.js",[],["83","84"],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\reportWebVitals.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\App.js",["85","86","87"],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\NavBar.js",["88","89"],"\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ButtonLog from './ButtonLog';\r\n\r\nvar eth = \"\" \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title} >\r\n                            Run Coin\r\n                        </Typography>\r\n                        <ButtonLog />\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default NavBar;",["90","91"],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ButtonLog.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\theme.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Header.js",["92","93"],"import React from 'react';\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/styles'\r\nimport ButtonLog from './ButtonLog';\r\nimport ButtonSetting from './ButtonSetting';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles(()=>({\r\n    separarDerecha: {\r\n        flex: 1\r\n    }\r\n}))\r\n\r\nconst Header = () => {\r\n    const classes = useStyles() \r\n    return ( \r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.separarDerecha}>\r\n                        Run Coin\r\n                    </Typography>\r\n                    <ButtonLog />\r\n                    <ButtonSetting/>\r\n                    {/* <Button color=\"inherit\" size=\"small\">\r\n                        <SettingsIcon></SettingsIcon>\r\n                    </Button> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Header;","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Content.js",["94"],"import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport ExchangeCard from './ExchangeCard'\r\nimport GameCard from './GameCard';\r\n\r\n\r\nconst Content = () => {\r\n    return ( \r\n        <Grid container justify=\"center\">\r\n            <Grid item>\r\n                <GameCard></GameCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n \r\nexport default Content;","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ExchangeCard.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\Navegation.js",["95"],"import React from 'react';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function Navegation() {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" >\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href=\"#\"\r\n        label=\"Home\"\r\n        icon={<HomeIcon fontSize=\"small\" />}\r\n        onClick={handleClick}\r\n      />\r\n      <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Game\" onClick={handleClick} />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\GameCard.js",["96","97","98","99"],"import React, { useEffect, useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport ProgressBar from './ProgressBar'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ItemGame from './ItemGame'\r\nimport { play, listPlayerLastSeassons, getUserLogued, watch } from '../services/server';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      minWidth: 320,\r\n      minHeight: 200,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: 400,\r\n      minHeight: 200,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      minWidth: 800,\r\n      minHeight: 400,\r\n    },\r\n    background: 'rgba(0, 0, 0, 0.12)',\r\n  },\r\n  buttonCard: {\r\n    justifyContent: 'center'\r\n  },\r\n  margenButton: {\r\n    marginTop: '10px'\r\n  },\r\n  table: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      minWidth: 300,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: 550,\r\n    },\r\n  },\r\n  hideLastBorder: {\r\n    '&:last-child td, &:last-child th': {\r\n      border: 0,\r\n    },\r\n  },\r\n  info: {\r\n    padding: 5,\r\n  },\r\n  game: {\r\n    padding: 5,\r\n    marginLeft: 20,\r\n  }\r\n}));\r\n\r\nconst GameCard = () => {\r\n\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n  const [listPlayers, setListPlayers] = useState([]);\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(listPlayers)\r\n  // }, [])\r\n  useEffect(\r\n    () => {\r\n      listPlayerLastSeassons(15).then(\r\n        (result) => {\r\n          var array = result.map(\r\n            (r) => {\r\n              console.log(r.player)\r\n              return {\r\n                ...r,\r\n                player: r.player,\r\n                timeGame: r.timeGame,\r\n                timestamp: r.timestamp,\r\n                wait: r.wait\r\n              }\r\n            }\r\n          )\r\n          console.log(array);\r\n          setListPlayers(array);\r\n          console.log(listPlayers)\r\n        }\r\n      ).catch(\r\n        (error) => {\r\n          console.log(error)\r\n        }\r\n      )\r\n    }, []\r\n  )\r\n\r\n  const handlePlay = () => {\r\n    getUserLogued().then(\r\n      (result) => {\r\n        console.log(result)\r\n        if (result != null) {\r\n          let account = \"'\" + result + \"'\";\r\n          play(result).then(\r\n            (res) => {\r\n              console.log(res)\r\n              watch()\r\n              console.log('termine de ver')\r\n            }\r\n          )\r\n        } else {\r\n          console.log('logueese por favor')\r\n        }\r\n      }\r\n    ).catch(\r\n      (error) => {\r\n        console.log('error al jugar')\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  const getDay = (timestamp) => {\r\n\r\n    console.log(timestamp)\r\n    const milliseconds = timestamp * 1000\r\n    const date = new Date(milliseconds)\r\n    return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit' , second: '2-digit'})\r\n}\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"elevation\" >\r\n      <CardContent>\r\n        <Grid container justify=\"center\">\r\n          <Grid item container justify=\"flex-start\" >\r\n            <Grid item className={classes.info} xs={false} sm={5} >\r\n              <Typography variant=\"h5\" gutterBottom style={{ color: 'red' }}>Cost</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} >\r\n              <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handlePlay}>Play!</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} spacing={2} className={classes.margenButton} >\r\n            <Grid item xs={12}>\r\n              {\r\n                listPlayers.map(\r\n                  (l) => {\r\n                    return (\r\n                      <ItemGame player={l.player} timeGame={l.timeGame} timestamp={l.timestamp} key={l.player + l.timestamp}></ItemGame>\r\n                    )\r\n                  }\r\n                )\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions className={classes.buttonCard}>\r\n        <Button color=\"secondary\" size=\"small\" onClick={handleClickOpen('body')}>Show more</Button>\r\n      </CardActions>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Player List</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>N</TableCell>\r\n                  <TableCell>Player</TableCell>\r\n                  <TableCell align=\"right\">Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {listPlayers.map((l,index) => (\r\n                  <TableRow key={l.player + l.timestamp+ l.timeGame}>\r\n                    <TableCell component=\"th\" scope=\"row\" >{index}</TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {l.player}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{getDay(l.timestamp)}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Card>\r\n  );\r\n  \r\n}\r\n\r\nexport default GameCard;","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ButtonSetting.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ProgressBar.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\server.js",["100"],"import * as Parameters from \"./parameters.js\";\r\nimport {\r\n    CONST_ABI\r\n} from \"./abiApp.js\";\r\n\r\n// aplicacion para la conexión con la blockchain \r\nconst Web3 = require(\"web3\");\r\n//prueba conectar el proveedor de metamask primero sino usa la varabile en Parameters \"provider\"\r\nlet web3 = new Web3(Web3.givenProvider || Parameters.provider);\r\n//se crea el contrato \r\nconst miContrato = new web3.eth.Contract(CONST_ABI, Parameters.addressContractR);\r\n\r\n\r\n//inicia el juego y retorna su {player:string,timestamp:uint ,wait: uint}\r\n//ejemplo de timestamp = 1287124121241 ; si resto el timestamp del anterior jugador con este serian los segundos que hay \r\n// de diferencia.\r\n\r\n// Account\r\nexport async function play(_account) {\r\n    //_cost wei\r\n\r\n    try {\r\n        const _cost = await miContrato.methods.cost()\r\n            .call((err, result) => result);\r\n        \r\n        const player = await miContrato.methods\r\n            .game(_cost)\r\n            .send({\r\n                    from: _account,\r\n                    value: _cost,\r\n                },\r\n                function (error, transactionHash) {}\r\n            );\r\n        return player;\r\n    } catch (Ex) {\r\n        console.log(Ex)\r\n        //ocurrieron los siguientes errores,\r\n        //1- No esta habilitado para jugar.\r\n        //2- el valor ingresado es menor al costo del juego el costo esta en WEI.\r\n        //3 - el valor ingresado no es el mismo que el valor enviado. \r\n        return false;\r\n    }\r\n}\r\n\r\n//cant= cantidad de player que se quiere visualizar\r\n\r\n//player {player= address , timestamp= el tiempo en el que empezo a jugar, timeGame= el tiempo en que termino de jugar}\r\n\r\n//opcion 1 timeGame= seria el tiempo desde que empezo a jugar hasta que otro jugador le corto el tiempo (cada vez que consultas siempre va ser el mismo tiempo).\r\n//opcion 2 timeGame= si es el ultimo jugador del array te devuelve el tiempo desde que empezo a jugar hasta que se consulto en la blockchain (cada vez que consultas va a cmbiar el tiempo)\r\n\r\nexport async function listPlayerLastSeassons(cant = -1) {\r\n\r\n    try {\r\n        const currentSeassons = await miContrato.methods.currentSeasson()\r\n            .call((err, result) => result);\r\n\r\n        const cantPlayer = await miContrato.methods.getCantPlayer(currentSeassons)\r\n            .call((err, result) => result);\r\n        if (cant < 0) {\r\n            cant = cantPlayer;\r\n        } else {\r\n\r\n            cant = cant > cantPlayer ? cantPlayer - 1 : cant;\r\n        }\r\n        var players = [];\r\n        let player = {};\r\n        \r\n        while (cant > 0) {\r\n\r\n            player = await miContrato.methods.getPlayer(currentSeassons, cant)\r\n                .call((err, result) => result);\r\n\r\n            players.push(player);\r\n            cant--;\r\n        }\r\n        return players;\r\n\r\n    } catch (Ex) {\r\n        console.log(Ex)\r\n        return false;\r\n    }\r\n}\r\n\r\n//si queres ver mas player en la lista pasas \r\n//cant= la cantidad de player que queres ver,\r\n// indexPlayer= a partir del indice que queres ver.\r\n//indexseasson= indice de la session, \r\nexport async function getMorePlayer(cant, indexPlayer, indexSeasson) {\r\n\r\n    try {\r\n\r\n        var players = [];\r\n        let player = {};\r\n        while (cant > 0 && indexPlayer > 0) {\r\n\r\n            player = await miContrato.methods.getPlayer(indexSeasson, indexPlayer)\r\n                .call((err, result) => result);\r\n\r\n            players.push(player);\r\n            indexPlayer--;\r\n        }\r\n        return players;\r\n\r\n    } catch (Ex) {\r\n        return false;\r\n    }\r\n}\r\n\r\n//return {recompensa, nextRecompensa}\r\nexport async function getReward() {\r\n\r\n    try {\r\n        const recompensa = await miContrato.methods.getValueReward()\r\n            .call((err, result) => result);\r\n        return recompensa;\r\n    } catch (Ex) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getCostPlay() {\r\n\r\n    try {\r\n        const cost = await miContrato.methods.cost()\r\n            .call((err, result) => result);\r\n        return cost;\r\n    } catch (Ex) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getCantDaysCurrentOfSeassons() {\r\n\r\n    try {\r\n        const cantDaysCurrent = await miContrato.methods.cantDaysCurrent()\r\n            .call((err, result) => result);\r\n        return cantDaysCurrent;\r\n    } catch (Ex) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getUserLogued (){\r\n    try{\r\n        let data = null\r\n        await web3.eth.getAccounts( function (err, accounts) { // chequea si hay un provider para poder conectarme la block\r\n            if (err != null) {\r\n                console.error(\"An error occurred: \" + err);\r\n            }\r\n            else if (accounts.length == 0) { // checkea si hay algun usuario ya logueado a metamask\r\n                console.log(\"User is not logged in to MetaMask\");\r\n            }\r\n            else {\r\n                console.log(\"User is logged in to MetaMask\");\r\n                data = accounts[\"0\"] ;\r\n            }\r\n        });\r\n        return data\r\n    } catch (Ex) {\r\n        console.log(Ex)\r\n        return false ;\r\n    }\r\n}\r\nexport async function watch(){\r\n    await miContrato.events.Game({\r\n        // filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'},\r\n        fromBlock: 'latest'\r\n    }, function (error, event) {\r\n        console.log('Evento activado');\r\n        console.log(event);\r\n    });\r\n}\r\n\r\n//**************Escuchar Eventos en la blockchain */\r\n//docs : https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html#id48\r\n//nose si funciona, se supone que escucha cuando el evento se dispara en la blockchain se ejecuta el codigo de adentro.\r\n// este escucha cada vez que alguien juegue.\r\n// si funciona te retorna estos parametros {address owner_play, uint256 cost,uint256 timestamp, uint256 wait}\r\n\r\n","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\parameters.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\services\\abiApp.js",[],"G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\components\\ItemGame.js",["101"],"import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst ItemGame = (props) => {\r\n\r\n\r\n    const getDay = (timestamp) => {\r\n\r\n        console.log(timestamp)\r\n        const milliseconds = timestamp * 1000\r\n        const date = new Date(milliseconds)\r\n        return date.toLocaleDateString([], { hour: '2-digit', minute: '2-digit' , second: '2-digit'})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"subtitle1\" gutterBottom align='left'>\r\n                Id: {props.player}\r\n            </Typography>\r\n            <ProgressBar value={50}></ProgressBar>\r\n            <div style={{display:\"flex\", justifyContent:\"flex-end\"}}>\r\n            <Typography variant=\"subtitle2\" gutterBottom align='right' noWrap>\r\n                <strong>Date:</strong> {getDay(props.timestamp)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" style={{marginLeft:10}} gutterBottom align='right' noWrap>\r\n                <strong>Game Time:</strong> {props.timeGame}\r\n            </Typography>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ItemGame;","G:\\Javi\\Documentos - copia\\React\\run-coin\\src\\context\\userContext.js",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":15,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":9,"column":9,"nodeType":"109","messageId":"110","endLine":9,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":59,"column":12,"nodeType":"114","messageId":"115","endLine":59,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":14},{"ruleId":"107","severity":1,"message":"116","line":12,"column":5,"nodeType":"109","messageId":"110","endLine":12,"endColumn":8},{"ruleId":"103","replacedBy":"117"},{"ruleId":"105","replacedBy":"118"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":18,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"119","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":20},{"ruleId":"107","severity":1,"message":"120","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":20},{"ruleId":"107","severity":1,"message":"121","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":22},{"ruleId":"107","severity":1,"message":"122","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":19},{"ruleId":"107","severity":1,"message":"123","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":113,"column":8,"nodeType":"126","endLine":113,"endColumn":10,"suggestions":"127"},{"ruleId":"107","severity":1,"message":"128","line":121,"column":15,"nodeType":"109","messageId":"110","endLine":121,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":151,"column":38,"nodeType":"114","messageId":"115","endLine":151,"endColumn":40},{"ruleId":"107","severity":1,"message":"129","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"130","line":39,"column":12,"nodeType":"126","endLine":39,"endColumn":14,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'getCostPlay' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'eth' is assigned a value but never used.",["132"],["133"],"'SettingsIcon' is defined but never used.","'ExchangeCard' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ProgressBar' is defined but never used.","'DialogContentText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listPlayers'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'account' is assigned a value but never used.","'Grid' is defined but never used.","React Hook useMemo has missing dependencies: 'logued' and 'user'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [listPlayers]",{"range":"140","text":"141"},"Update the dependencies array to be: [logued, user]",{"range":"142","text":"143"},[3115,3117],"[listPlayers]",[1049,1051],"[logued, user]"]